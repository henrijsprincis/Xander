select count(*) from singer;
select count(distinct singer_id) from singer_in_concert;
select name, country, age from singer order by age desc;
select name, country, age from singer order by age desc;
select avg(age), min(age), max(age) from singer where country = 'france';
select avg(age), min(age), max(age) from singer where country = 'france';
select song_name, song_release_year from singer where age = (select min(age) from singer);
select song_name, song_release_year from singer where age = (select min(age) from singer);
select distinct country from singer where age > 20;
select country from singer where age > 20;
select singer.country, count(singer.singer_id) from singer group by singer.country;
select song_name from singer where age > (select avg(age) from singer);
select song_name from singer where age > (select avg(age) from singer);
select location, name from stadium where capacity between 5000 and 10000;
select;
select location, name  from stadium  where capacity between 5000 and 10000;
select max(capacity), avg(capacity)  from stadium;
select avg(capacity), max(capacity)  from stadium;
select name, capacity  from stadium  where average = (select max(average) from stadium);
select name, capacity  from stadium  where average = (select max(average) from stadium);
select count(*)  from concert  where year = 2014 or year = 2015;
select count(*)  from concert  where year >= 2014;
select stadium.name, count(concert.concert_id)  from stadium  join concert on stadium.stadium_id = concert.stadium_id  group by stadium.name;
select stadium.name, count(concert.concert_id)  from stadium  left join concert on stadium.stadium_id = concert.stadium_id  group by stadium.name;
select stadium.name, stadium.capacity  from stadium  join concert on stadium.stadium_id = concert.stadium_id  where concert.year >= 2014  group by stadium.name  order by count(concert.concert_id) desc  limit 1;
select s.name, s.capacity from stadium s where s.stadium_id = (     select c.stadium_id     from concert c     where c.year > 2013     group by c.stadium_id     order by count(*) desc     limit 1 );
select c.year from concert c group by c.year order by count(*) desc limit 1;
select c.year from concert c group by c.year order by count(*) desc limit 1;
select s.name from stadium s left join concert c on s.stadium_id = c.stadium_id where c.stadium_id is null;
select s.name from stadium s left join concert c on s.stadium_id = c.stadium_id where c.stadium_id is null;
select distinct s1.country from singer s1, singer s2, singer_in_concert sic1, singer_in_concert sic2, concert c where s1.age > 40 and s2.age < 30 and s1.singer_id = sic1.singer_id and s2.singer_id = sic2.singer_id and sic1.concert_id = sic2.concert_id and c.concert_id = sic1.concert_id;
select name from stadium where stadium_id not in (     select stadium_id     from concert     where year = 2014 );
select name from stadium where stadium_id not in (     select stadium_id     from concert     where year = 2014 );
select c.concert_name, c.theme, count(sic.singer_id) from concert c, singer_in_concert sic where c.concert_id = sic.concert_id group by c.concert_id;
select c.concert_name, c.theme, count(sic.singer_id) from concert c, singer_in_concert sic where c.concert_id = sic.concert_id group by c.concert_id;
select singer.name, count(singer_in_concert.concert_id)  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  group by singer.name  order by count(singer_in_concert.concert_id) desc;
select singer.name, count(singer_in_concert.concert_id)  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  group by singer.name  order by singer.name asc;
select distinct singer.name  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on singer_in_concert.concert_id = concert.concert_id  where concert.year = 2014;
select distinct singer.name  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on singer_in_concert.concert_id = concert.concert_id  where concert.year = 2014;
select singer.name, singer.country  from singer  where singer.song_name like '%hey%';
select singer.name, singer.country from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where song_name like '%hey%';
select stadium.name, stadium.location from stadium join concert on stadium.stadium_id = concert.stadium_id where concert.year = 2014 and stadium.stadium_id in (     select stadium_id from concert where year = 2015 );
select stadium.name, stadium.location from stadium join concert on stadium.stadium_id = concert.stadium_id where concert.year = 2014 and stadium.stadium_id in (     select stadium_id from concert where year = 2015 );
select count(*) from concert where stadium_id = (     select stadium_id from stadium order by capacity desc limit 1 );
select count(*) from concert where stadium_id = (     select stadium_id from stadium order by capacity desc limit 1 );
select count(*) from pets where weight > 10;
select count(*) from pets where weight > 10;
select min(weight) from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog');
select min(weight) from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog');
select max(weight), pettype from pets group by pettype;
select max(pets.weight), pets.pettype from pets join has_pet on pets.petid = has_pet.petid group by pets.pettype;
select count(has_pet.petid) from has_pet join student on has_pet.stuid = student.stuid where student.age > 20;
select count(has_pet.petid) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.age > 20;
select count(pets.petid) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where pets.pettype = 'dog' and student.sex = 'f';
select count(pets.petid) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where pets.pettype = 'dog' and student.sex = 'f';
select count(distinct pettype) from pets;
select count(distinct pettype) from pets;
select fname from student where stuid in (select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype in ('cat', 'dog'));
select distinct fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pettype in ('cat', 'dog');
select fname from student where stuid in (select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype = 'cat' intersect select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype = 'dog');
select student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' intersect select student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'dog';
select student.major, student.age from student where student.stuid not in (   select has_pet.stuid   from has_pet   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' );
select student.major, student.age from student where student.stuid not in (   select has_pet.stuid   from has_pet   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' );
select student.stuid from student where student.stuid not in (   select has_pet.stuid   from has_pet   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' );
select student.stuid from student where student.stuid not in (   select has_pet.stuid   from has_pet   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' );
select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' and student.stuid not in (   select student.stuid   from student   join has_pet on student.stuid = has_pet.stuid   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' ) order by student.age asc limit 1;
select distinct student.fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' and student.stuid not in (   select student.stuid   from student   join has_pet on student.stuid = has_pet.stuid   join pets on has_pet.petid = pets.petid   where pets.pettype = 'cat' );
select pets.pettype, pets.weight from pets where pets.pet_age = (   select min(pets.pet_age)   from pets );
select pets.pettype, pets.weight from pets where pets.pet_age = (   select min(pets.pet_age)   from pets );
select pets.petid, pets.weight from pets where pets.pet_age > 1;
select pets.petid, pets.weight from pets where pets.pet_age > 1;
select pets.pettype, avg(pets.pet_age), max(pets.pet_age) from pets group by pets.pettype;
select pets.pettype, avg(pets.pet_age), max(pets.pet_age) from pets group by pets.pettype;
select pets.pettype, avg(pets.weight) from pets group by pets.pettype;
select pets.pettype, avg(pets.weight) from pets group by pets.pettype;
select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid;
select distinct student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid;
select pets.petid from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.lname = 'smith';
select pets.petid from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.lname = 'smith';
select count(has_pet.petid), student.stuid from student join has_pet on student.stuid = has_pet.stuid group by student.stuid;
select has_pet.stuid, count(has_pet.petid)  from has_pet  join pets on has_pet.petid = pets.petid  where pets.pettype != 'fish'  group by has_pet.stuid  having count(has_pet.petid) > 1;
select student.fname, student.sex  from student  join has_pet on student.stuid = has_pet.stuid  group by student.stuid  having count(has_pet.petid) > 1;
select student.fname, student.sex  from student  join has_pet on student.stuid = has_pet.stuid  group by student.stuid  having count(has_pet.petid) > 1;
select student.lname  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat' and pets.pet_age = 3;
select student.lname  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat' and pets.pet_age = 3;
select avg(age)  from student  where stuid not in (select stuid from has_pet);
select avg(age)  from student  where stuid not in (select stuid from has_pet);
select count(*)  from continents;
select count(*)  from continents;
select continents.contid, continents.continent, count(countries.countryid)  from continents  left join countries on continents.contid = countries.continent  group by continents.contid, continents.continent;
select continents.contid, continents.continent, count(countries.countryid) from continents join countries on continents.contid = countries.continent group by continents.contid;
select count(countryid) from countries;
select count(distinct countryname) from countries;
select car_makers.fullname, car_makers.id, count(model_list.modelid) from car_makers join model_list on car_makers.maker = model_list.maker group by car_makers.id;
select car_makers.fullname, car_makers.id, count(model_list.modelid) from car_makers join model_list on car_makers.maker = model_list.maker group by car_makers.id;
select car_makers.maker from car_makers join cars_data on car_makers.id = cars_data.id where cars_data.horsepower = (select min(horsepower) from cars_data);
select model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.horsepower = (select min(horsepower) from cars_data);
select model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.weight < (select avg(weight) from cars_data) limit 1;
select model_list.model from model_list join cars_data on model_list.modelid = cars_data.id where cars_data.weight < (select avg(weight) from cars_data) limit 1;
select car_makers.maker from car_makers join car_names on car_makers.id = car_names.makeid join cars_data on car_names.model = cars_data.id where cars_data.year = 1970 group by car_makers.maker having count(distinct car_names.model) > 0;
select distinct car_makers.maker from car_makers join cars_data on car_makers.id = cars_data.id where cars_data.year = 1970;
select car_names.make, cars_data.year from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.year = (select min(year) from cars_data);
select car_names.make, cars_data.year from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.year = (select min(year) from cars_data) limit 1;
select distinct car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.year > 1980;
select distinct car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.year > 1980 and car_names.make = 'plymouth';
select continents.continent, count(distinct car_makers.id)  from continents  join countries on continents.contid = countries.continent  join car_makers on countries.countryid = car_makers.country  group by continents.continent;
select continents.continent, count(distinct car_makers.id)  from continents  join countries on continents.contid = countries.continent  join car_makers on countries.countryid = car_makers.country  group by continents.continent;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryname  order by count(distinct car_makers.id) desc  limit 1;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryname  order by count(distinct car_makers.id) desc  limit 1;
select count(distinct model_list.modelid), car_makers.fullname  from car_makers  join model_list on car_makers.maker = model_list.maker  group by car_makers.fullname;
select count(model_list.modelid), car_makers.id, car_makers.fullname from car_makers join model_list on car_makers.maker = model_list.maker join car_names on model_list.modelid = car_names.modelid join cars_data on car_names.makeid = cars_data.id where car_makers.country = (select countryid from countries where countryname = 'france') group by car_makers.id;
select cars_data.accelerate from car_names join cars_data on car_names.makeid = cars_data.id where car_names.model = 'amc hornet sportabout (sw)';
select cars_data.accelerate from car_names join cars_data on car_names.makeid = cars_data.id where car_names.make = 'amc' and car_names.model = 'hornet sportabout (sw)';
select count(*) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france';
select count(distinct car_makers.id) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france';
select count(distinct model)  from model_list  where maker in (select maker from car_makers where country = 'usa');
select count(distinct model)  from model_list  where maker in (select maker from car_makers where countryname = 'united states');
select avg(mpg)  from cars_data  where cylinders = 4;
select avg(mpg)  from cars_data  where cylinders = 4;
select min(weight)  from cars_data  where cylinders = 8 and year = 1974;
select min(weight)  from cars_data  where cylinders = 8 and year = 1974;
select maker, model  from car_names  join model_list on car_names.model = model_list.model  join car_makers on car_names.makeid = car_makers.id;
select maker, model  from car_names  join model_list on car_names.model = model_list.model  join car_makers on car_names.makeid = car_makers.id  where car_makers.id = 1;
select countryname, countryid  from countries  where countryid in (select distinct country from car_makers);
select distinct countries.countryname, countries.countryid  from countries  join car_makers on countries.countryid = car_makers.country;
select count(*)  from cars_data  where horsepower > 150;
select count(*)  from cars_data  where horsepower > 150;
select avg(weight), year  from cars_data  group by year;
select avg(weight), year  from cars_data  group by year;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  where countries.continent = 'europe'  group by countries.countryname  having count(distinct car_makers.maker) >= 3;
select distinct countries.countryname from countries join car_makers on countries.countryid = car_makers.country where countries.continent = 'europe' group by countries.countryname having count(distinct car_makers.maker) >= 3;
select max(cars_data.horsepower), car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.cylinders = 3;
select max(cars_data.horsepower), car_names.make from cars_data join car_names on cars_data.id = car_names.makeid where cars_data.cylinders = 3;
select car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.modelid = car_names.modelid join cars_data on car_names.makeid = cars_data.id where cars_data.mpg = (select max(mpg) from cars_data);
select car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.mpg = (select max(mpg) from cars_data);
select avg(horsepower)  from cars_data  where year < 1980;
select avg(horsepower)  from cars_data;
select avg(edispl)  from cars_data  join car_names on cars_data.id = car_names.makeid  where car_names.model = 'volvo';
select avg(edispl)  from cars_data  join car_names on cars_data.id = car_names.makeid  where car_names.make = 'volvo';
select max(accelerate), cylinders  from cars_data  group by cylinders;
select max(accelerate), cylinders from cars_data;
select model from model_list  where modelid in (     select modelid from car_names      group by modelid      having count(distinct makeid) = (         select max(cnt) from (             select count(distinct makeid) as cnt from car_names              group by modelid         )     ) );
select model from model_list  where modelid in (     select modelid from car_names      group by modelid      having count(distinct makeid) = (         select max(cnt) from (             select count(distinct makeid) as cnt from car_names              group by modelid         )     ) );
select count(*) from cars_data where cylinders > 4;
select count(*) from cars_data where cylinders > 4;
select count(*)  from cars_data  where year = 1980;
select count(*)  from car_names  where makeid in (     select id      from car_makers      where fullname = 'american motor company' ) ;
select count(*)  from model_list  where maker = 'american motor company';
select count(*)  from model_list  where maker in (     select maker      from model_list      group by maker      having count(*) > 3 ) ;
select fullname, id  from car_makers  where id in (     select maker      from model_list      group by maker      having count(*) > 3 ) ;
select car_makers.fullname, car_makers.id from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id having count(distinct model_list.modelid) > 3;
select distinct car_names.model from car_names join cars_data on car_names.makeid = cars_data.id where car_names.model in (     select model_list.model     from model_list     join car_makers on model_list.maker = car_makers.id     where car_makers.fullname = 'general motors' ) or cars_data.weight > 3500;
select distinct model_list.model from model_list join car_makers on model_list.maker = car_makers.id join cars_data on model_list.model = cars_data.id where car_makers.fullname = 'general motors' or cars_data.weight > 3500;
select distinct cars_data.year from cars_data where cars_data.weight >= 3000 and cars_data.weight <= 4000;
select distinct cars_data.year from cars_data where cars_data.weight < 4000 and cars_data.year in (     select distinct cars_data.year     from cars_data     where cars_data.weight > 3000 );
select horsepower  from cars_data  where accelerate = (select max(accelerate) from cars_data);
select horsepower  from cars_data  where accelerate = (select max(accelerate) from cars_data);
select min(cylinders)  from cars_data  where modelid = (select modelid from model_list where model = 'volvo')  and accelerate = (select min(accelerate) from cars_data where modelid = (select modelid from model_list where model = 'volvo'));
select min(cylinders)  from cars_data  where modelid = (select modelid from model_list where model = 'volvo')  and accelerate = (select min(accelerate) from cars_data where modelid = (select modelid from model_list where model = 'volvo'));
select count(*)  from cars_data  where accelerate > (select accelerate from cars_data where horsepower = (select max(horsepower) from cars_data));
select count(*)  from cars_data  where accelerate > (select max(horsepower) from cars_data);
select count(distinct countries.countryid)  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryid  having count(distinct car_makers.id) > 2;
select count(*)  from (select count(distinct car_makers.id)        from car_makers        group by car_makers.country        having count(distinct car_makers.id) > 2);
select count(*)  from cars_data  where cylinders > 6;
select count(*)  from cars_data  where cylinders > 6;
select car_names.makeid, car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1;
select car_names.makeid, car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1;
select car_names.makeid, car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.horsepower > (select min(horsepower) from cars_data) and cars_data.cylinders <= 3;
select car_names.makeid, car_names.make from car_names join cars_data on car_names.makeid = cars_data.id where cars_data.horsepower > (select min(horsepower) from cars_data) and cars_data.cylinders < 4;
select max(cars_data.mpg) from cars_data where (cars_data.cylinders = 8 or cars_data.year < 1980) and cars_data.mpg != 'null';
select max(mpg)  from cars_data  where (cylinders = 8 or year < 1980);
select model  from car_names  where weight < 3500 and maker != 'ford motor company';
select distinct model  from car_names  where weight < 3500 and maker != 'ford motor company';
select countryname  from countries  where countryid not in (select distinct country from car_makers);
select countryname  from countries  where countryid not in (select distinct country from car_makers);
select car_makers.id, car_makers.maker from car_makers join model_list on car_makers.maker = model_list.maker group by car_makers.id, car_makers.maker having count(distinct model_list.modelid) >= 2 and count(distinct car_makers.id) > 3;
select car_makers.id, car_makers.maker from car_makers join model_list on car_makers.maker = model_list.maker join car_names on model_list.modelid = car_names.modelid group by car_makers.id, car_makers.maker having count(distinct model_list.modelid) >= 2 and count(distinct car_names.makeid) > 3;
select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.maker = model_list.maker where countries.countryname in (     select countries.countryname     from countries     join car_makers on countries.countryid = car_makers.country     join model_list on car_makers.maker = model_list.maker     where model_list.model = 'fiat'     group by countries.countryname ) group by countries.countryid, countries.countryname having count(distinct car_makers.id) > 3;
select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.maker = model_list.maker where countries.countryname in (     select countries.countryname     from countries     join car_makers on countries.countryid = car_makers.country     join model_list on car_makers.maker = model_list.maker     where model_list.model = 'fiat'     group by countries.countryname ) group by countries.countryid, countries.countryname having count(distinct car_makers.id) > 3;
select countries.country from airlines join countries on airlines.country = countries.uid where airlines.airline = 'jetblue airways';
select country  from airlines  where airline = 'jetblue airways';
select abbreviation  from airlines  where airline = 'jetblue airways';
select abbreviation  from airlines  where airline = 'jetblue airways';
select airline, abbreviation  from airlines  where country = 'usa';
select airline, abbreviation  from airlines  where country = 'usa';
select airportcode, airportname from airports where city = 'anthony';
select airportcode, airportname from airports where city = 'anthony';
select count(*) from airlines;
select count(uid) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select airline from airlines where abbreviation = 'ual';
select airline from airlines where abbreviation = 'ual';
select count(*) from airlines where country = 'usa';
select count(distinct airline) from airlines where country = 'usa';
select city, country from airports where airportname = 'alton';
select city, country from airports where airportcode = 'aln';
select airportname from airports where airportcode = 'ako';
select airportname  from airports  where airportcode = 'ako';
select airportname  from airports  where city = 'aberdeen';
select airportname  from airports  where city like '%aberdeen%';
select count(*)  from flights  where sourceairport = 'apg';
select count(*)  from flights  where sourceairport = 'apg';
select count(*)  from flights  where destairport = 'ato';
select count(*)  from flights  where destairport = 'ato';
select count(*)  from flights  join airports on flights.sourceairport = airports.airportcode  where airports.city = 'aberdeen';
select count(*)  from flights  join airports on flights.sourceairport = airports.airportcode  where airports.city = 'aberdeen';
select count(*)  from flights  join airports on flights.destairport = airports.airportcode  where airports.city = 'aberdeen';
select count(*)  from flights  where destairport = 'aberdeen';
select count(*)  from flights  where sourceairport = 'aberdeen' and destairport = 'ashley';
select count(*)  from flights  where sourceairport = 'aberdeen' and destairport = 'ashley';
select count(*)  from flights  where airline = 'jetblue airways';
select count(*)  from flights  where airline = 'jetblue airways';
select count(*)  from flights  where airline = 'united airlines' and destairport = 'asy';
select count(*)  from flights  where airline = 'united airlines' and destairport = 'asy';
select count(*)  from flights  where airline = 'united airlines' and sourceairport = 'ahd';
select count(*)  from flights  where airline = 'united airlines' and sourceairport = 'ahd';
select count(*)  from flights  join airports on flights.destairport = airports.airportcode  where airline = 'united airlines' and airports.city = 'aberdeen';
select count(*)  from flights  join airports on flights.destairport = airports.airportcode  where airlines = 'united airlines' and city = 'aberdeen';
select airports.city, count(*) as num_arrivals  from flights  join airports on flights.destairport = airports.airportcode  group by airports.city  order by num_arrivals desc  limit 1;
select airports.city, count(*) as num_destinations  from flights  join airports on flights.destairport = airports.airportcode  group by airports.city  order by num_destinations desc  limit 1;
select airports.city, count(*) as num_departures  from flights  join airports on flights.sourceairport = airports.airportcode  group by airports.city  order by num_departures desc  limit 1;
select airports.city, count(*) as num_sources  from flights  join airports on flights.sourceairport = airports.airportcode  group by airports.city  order by num_sources desc  limit 1;
select sourceairport as airportcode, count(*) as num_flights from flights group by sourceairport order by num_flights desc limit 1;
select airportcode from (     select sourceairport as airportcode, count(*) as num_flights     from flights     group by sourceairport     order by num_flights desc     limit 1 ) as max_flights;
select sourceairport as airportcode, count(*) as num_flights from flights group by sourceairport order by num_flights asc limit 1;
select airportcode from (     select sourceairport as airportcode, count(*) as num_flights     from flights     group by sourceairport     order by num_flights asc     limit 1 ) as min_flights;
select airline from (     select airline, count(*) as num_flights     from flights     group by airline     order by num_flights desc     limit 1 ) as max_flights;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  group by airlines.airline  order by count(*) desc  limit 1;
select abbreviation, country  from airlines  where abbreviation = (     select airline      from flights      group by airline      order by count(*) asc      limit 1 );
select abbreviation, country  from airlines  where abbreviation = (     select airline      from flights      group by airline      order by count(*) asc      limit 1 );
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.sourceairport = 'ahd'  group by airlines.airline;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.sourceairport = 'ahd'  group by airlines.airline;
select distinct airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.destairport = 'ahd';
select distinct airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.destairport = 'ahd';
select distinct airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.sourceairport = 'apg'  and airlines.airline in      (select airlines.airline       from airlines       join flights on airlines.abbreviation = flights.airline       where flights.sourceairport = 'cvo');
select distinct airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.sourceairport = 'apg'  and airlines.airline in      (select airlines.airline       from airlines       join flights on airlines.abbreviation = flights.airline       where flights.sourceairport = 'cvo')  or flights.sourceairport = 'cvo'  and airlines.airline in      (select airlines.airline       from airlines       join flights on airlines.abbreviation = flights.airline       where flights.sourceairport = 'apg');
select distinct airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  where flights.sourceairport = 'cvo'  and airlines.airline not in      (select airlines.airline       from airlines       join flights on airlines.abbreviation = flights.airline       where flights.sourceairport = 'apg');
select distinct airlines.airline  from flights  join airports as cvo on flights.sourceairport = cvo.airportcode and cvo.city = 'corvallis'  left join airports as apg on flights.sourceairport = apg.airportcode and apg.city = 'aberdeen'  join airlines on flights.airline = airlines.abbreviation  where apg.airportcode is null;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  group by airlines.airline  having count(*) >= 10;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  group by airlines.airline  having count(*) >= 10;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  group by airlines.airline  having count(*) < 200;
select airlines.airline  from airlines  join flights on airlines.abbreviation = flights.airline  group by airlines.airline  having count(*) < 200;
select flightno  from flights  where airline = 'united airlines';
select flightno  from flights  where airline = 'united airlines';
select flightno  from flights  where sourceairport = 'apg';
select flightno  from flights  where sourceairport = 'apg';
select flightno  from flights  where destairport = 'apg';
select flightno  from flights  where destairport = 'apg';
select flightno  from flights  join airports on flights.sourceairport = airports.airportcode  where airports.city = 'aberdeen';
select flightno  from flights  join airports on flights.sourceairport = airports.airportcode  where airports.city = 'aberdeen';
select flightno  from flights  join airports on flights.destairport = airports.airportcode  where airports.city = 'aberdeen';
select flightno  from flights  join airports on flights.destairport = airports.airportcode  where airports.city = 'aberdeen';
select count(*)  from flights  where destairport in ('aberdeen', 'abilene');
select count(*)  from flights  where destairport in ('aberdeen', 'abilene') or sourceairport in ('aberdeen', 'abilene');
select airportname  from airports  where airportcode not in (select destairport from flights) and airportcode not in (select sourceairport from flights);
select airportname  from airports  where airportcode not in (select destairport from flights) and airportcode not in (select sourceairport from flights);
select count(*)  from employee;
select count(*) from employee;
select name from employee order by age asc limit 1;
select name from employee order by age asc;
select count(*), city from employee group by city limit 1;
select count(*), city from employee group by city;
select city from employee where age < 30 group by city having count(distinct employee_id) > 1;
select city from employee where age < 30 group by city having count(distinct employee_id) > 1;
select count(distinct shop_id), location from shop group by location;
select count(distinct shop_id), location from shop group by location;
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select min(number_products), max(number_products) from shop;
select min(number_products), max(number_products) from shop;
select name, location, district from shop order by number_products desc;
select name, location, district from shop order by number_products desc;
select name  from shop  where number_products > (select avg(number_products) from shop);
select name  from shop  where number_products > (select avg(number_products) from shop);
select employee.name  from employee  join evaluation on employee.employee_id = evaluation.employee_id  group by employee.employee_id  order by count(*) desc  limit 1;
select employee.name  from employee  join evaluation on employee.employee_id = evaluation.employee_id  group by employee.employee_id  order by sum(bonus) desc  limit 1;
select employee.name  from employee  join evaluation on employee.employee_id = evaluation.employee_id  where bonus = (select max(bonus) from evaluation)  limit 1;
select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1;
select employee.name from employee left join evaluation on employee.employee_id = evaluation.employee_id where evaluation.employee_id is null;
select employee.name from employee left join evaluation on employee.employee_id = evaluation.employee_id where evaluation.employee_id is null;
select shop.name from shop join hiring on shop.shop_id = hiring.shop_id group by shop.name order by count(hiring.employee_id) desc limit 1;
select shop.name from shop join hiring on shop.shop_id = hiring.shop_id group by shop.name order by count(hiring.employee_id) desc limit 1;
select shop.name from shop left join hiring on shop.shop_id = hiring.shop_id where hiring.employee_id is null;
select shop.name from shop left join hiring on shop.shop_id = hiring.shop_id where hiring.employee_id is null;
select count(hiring.employee_id), shop.name from shop left join hiring on shop.shop_id = hiring.shop_id group by shop.name;
select count(hiring.employee_id), shop.name from shop left join hiring on shop.shop_id = hiring.shop_id group by shop.name;
select sum(evaluation.bonus) from evaluation;
select sum(bonus) from evaluation;
select * from hiring;
select * from hiring where shop_id = 1 and employee_id = 1 and start_from = '2009' and is_full_time = 't';
select distinct district from shop where number_products < 3000 and district in (select district from shop where number_products > 10000);
select distinct district from shop where number_products < 3000 and district in (select district from shop where number_products > 10000);
select count(distinct location)  from shop;
select count(distinct location)  from shop;
select count(*)  from documents;
select count(*)  from documents;
select document_id, document_name, document_description  from documents;
select documents.document_id, documents.document_name, documents.document_description from documents;
select documents.document_name, documents.template_id from documents where documents.document_description like '%w%';
select documents.document_name, documents.template_id from documents where documents.document_description like '%w%';
select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = 'robbin cv';
select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = 'robbin cv';
select count(distinct template_type_code) from templates;
select count(distinct template_id) from documents;
select count(*) from documents where template_id in (   select template_id   from templates   where template_type_code = 'ppt' );
select count(*) from documents where template_id in (   select template_id   from templates   where template_type_code = 'ppt' );
select templates.template_id, count(documents.document_id) from templates left join documents on templates.template_id = documents.template_id group by templates.template_id;
select template_id, count(*)  from documents  group by template_id  having count(*) > 0;
select template_id, template_type_code  from templates  where template_id = (     select template_id      from documents      group by template_id      order by count(*) desc      limit 1 );
select template_id, template_type_code  from templates  where template_id = (     select template_id      from documents      group by template_id      order by count(*) desc      limit 1 );
select template_id  from documents  group by template_id  having count(distinct document_id) > 1;
select template_id  from documents  group by template_id  having count(distinct document_id) > 1;
select templates.template_id  from templates  left join documents on templates.template_id = documents.template_id  where documents.document_id is null;
select templates.template_id  from templates  left join documents on templates.template_id = documents.template_id  where documents.document_id is null;
select count(*)  from templates;
select count(*)  from templates;
select templates.template_id, templates.version_number, templates.template_type_code  from templates;
select templates.template_id, templates.version_number, templates.template_type_code from templates;
select distinct templates.template_type_code from templates;
select distinct ref_template_types.template_type_code from ref_template_types;
select templates.template_id from templates where templates.template_type_code = 'pp' or templates.template_type_code = 'ppt';
select templates.template_id from templates where templates.template_type_code in ('pp', 'ppt');
select count(*)  from templates  where template_type_code = 'cv';
select count(*)  from templates  where template_type_code = 'cv';
select version_number, template_type_code  from templates  where version_number > 5;
select version_number, template_type_code  from templates  where version_number > 5;
select template_type_code, count(*)  from templates  group by template_type_code;
select template_type_code, count(*)  from templates  group by template_type_code  order by template_type_code asc;
select template_type_code  from templates  group by template_type_code  order by count(*) desc  limit 1;
select template_type_code  from templates  group by template_type_code  order by count(*) desc  limit 1;
select template_type_code  from templates  group by template_type_code  having count(*) < 3;
select template_type_code  from templates  group by template_type_code  having count(*) < 3;
select min(version_number), template_type_code from templates;
select min(version_number), template_type_code from templates;
select template_type_code from templates join documents on templates.template_id = documents.template_id where document_name = "data base";
select template_type_code from templates join documents on templates.template_id = documents.template_id where document_name = "data base";
select document_name from documents join templates on documents.template_id = templates.template_id where template_type_code = "bk";
select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'bk';
select templates.template_type_code, count(documents.document_id) from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code;
select templates.template_type_code, count(documents.document_id) from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code;
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count(documents.document_id) desc limit 1;
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count(documents.document_id) desc limit 1;
select ref_template_types.template_type_code from ref_template_types left join templates on ref_template_types.template_type_code = templates.template_type_code where templates.template_type_code is null;
select ref_template_types.template_type_code from ref_template_types left join documents on documents.template_id = ref_template_types.template_type_code where documents.template_id is null;
select template_type_code, template_type_description from ref_template_types;
select template_type_code, template_type_description from ref_template_types;
select template_type_description from ref_template_types where template_type_code = 'ad';
select template_type_description  from ref_template_types  where template_type_code = 'ad';
select template_type_code  from ref_template_types  where template_type_description = 'book';
select template_type_code  from ref_template_types  where template_type_description = 'book';
select distinct ref_template_types.template_type_description  from ref_template_types  join templates on ref_template_types.template_type_code = templates.template_type_code  join documents on templates.template_id = documents.template_id;
select distinct ref_template_types.template_type_description  from ref_template_types  join templates on ref_template_types.template_type_code = templates.template_type_code  join documents on templates.template_id = documents.template_id  join paragraphs on documents.document_id = paragraphs.document_id;
select templates.template_id  from templates  join ref_template_types  on templates.template_type_code = ref_template_types.template_type_code  where ref_template_types.template_type_description = 'presentation';
select templates.template_id  from templates  join ref_template_types  on templates.template_type_code = ref_template_types.template_type_code  where ref_template_types.template_type_description = 'presentation';
select count(*)  from paragraphs;
select count(*)  from paragraphs;
select count(*)  from paragraphs  join documents  on paragraphs.document_id = documents.document_id  where documents.document_name = 'summer show';
select count(paragraph_id)  from paragraphs  where document_id = (     select document_id      from documents      where document_name = 'summer show' );
select * from paragraphs where paragraph_text = 'korea ';
select * from paragraphs where paragraph_id = (     select paragraph_id     from paragraphs     where paragraph_text = 'korea ' );
select paragraph_id, paragraph_text from paragraphs where document_id = (     select document_id     from documents     where document_name = 'welcome to ny' );
select paragraph_id, paragraph_text from paragraphs where document_id = (     select document_id     from documents     where document_name = 'welcome to ny' );
select paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'customer reviews';
select paragraphs.paragraph_text from paragraphs join documents on paragraphs.document_id = documents.document_id where documents.document_name = 'customer reviews';
select documents.document_id, count(paragraphs.paragraph_id) from documents left join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by documents.document_id;
select documents.document_id, count(paragraphs.paragraph_id) from documents left join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by documents.document_id;
select documents.document_id, documents.document_name, count(paragraphs.paragraph_id) from documents left join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by documents.document_id;
select documents.document_id, documents.document_name, count(paragraphs.paragraph_id) as num_paragraphs from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by num_paragraphs desc limit 1;
select paragraphs.document_id from paragraphs group by paragraphs.document_id having count(paragraphs.paragraph_id) >= 2;
select paragraphs.document_id from paragraphs group by paragraphs.document_id having count(paragraphs.paragraph_id) >= 2;
select documents.document_id, documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count(paragraphs.paragraph_id) desc limit 1;
select documents.document_id, documents.document_name from documents join paragraphs on documents.document_id = paragraphs.document_id group by documents.document_id order by count(paragraphs.paragraph_id) desc limit 1;
select document_id from paragraphs group by document_id order by count(*) asc limit 1;
select document_id from paragraphs group by document_id order by count(*) asc limit 1;
select document_id from paragraphs group by document_id having count(*) between 1 and 2;
select document_id from paragraphs group by document_id having count(*) between 1 and 2;
select p1.document_id from paragraphs p1 join paragraphs p2 on p1.document_id = p2.document_id where p1.paragraph_text = 'brazil' and p2.paragraph_text = 'ireland';
select distinct documents.document_id from documents join paragraphs on documents.document_id = paragraphs.document_id where paragraphs.paragraph_text like '%brazil%' and paragraphs.paragraph_text like '%ireland%';
select count(distinct teacher_id) from teacher;
select count(*) from teacher;
select name from teacher order by age asc limit 1;
select name from teacher order by age asc;
select age, hometown from teacher;
select age, hometown from teacher;
select name from teacher where hometown != 'little lever urban district';
select name from teacher where hometown != 'little lever urban district';
select name from teacher where age in (32, 33);
select name  from teacher  where age = 32 or age = 33;
select hometown  from teacher  where age = (select min(age) from teacher);
select hometown  from teacher  where age = (select min(age) from teacher);
select hometown, count(*)  from teacher  group by hometown;
select hometown, count(*)  from teacher  group by hometown;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown, count(*) as count from teacher group by hometown order by count desc limit 1;
select distinct t1.hometown from teacher t1 inner join teacher t2 on t1.teacher_id < t2.teacher_id and t1.hometown = t2.hometown;
select hometown, count(*) as count from teacher group by hometown having count > 1;
select teacher.name, course.course from teacher inner join course_arrange on teacher.teacher_id = course_arrange.teacher_id inner join course on course_arrange.course_id = course.course_id;
select teacher.name, course.course from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math';
select teacher.name, course.course from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc;
select teacher.name, course.course from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc;
select teacher.name from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math';
select teacher.name from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math';
select teacher.name, count(course_arrange.course_id)  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(course_arrange.course_id) = 2;
select teacher.name, count(course_arrange.course_id)  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(course_arrange.course_id) = 2;
select teacher.name  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(course_arrange.course_id) >= 2;
select teacher.name  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(course_arrange.course_id) >= 2;
select teacher.name  from teacher  left join course_arrange on teacher.teacher_id = course_arrange.teacher_id  where course_arrange.course_id is null;
select teacher.name  from teacher  left join course_arrange on teacher.teacher_id = course_arrange.teacher_id  where course_arrange.course_id is null;
select count(*)  from visitor  where age < 30;
select visitor.name  from visitor  where level_of_membership > 4  order by level_of_membership desc;
select avg(age)  from visitor  where level_of_membership <= 4;
select visitor.name, visitor.level_of_membership  from visitor  where level_of_membership > 4  order by age desc  limit 1;
select museum_id, name from museum where num_of_staff = (   select max(num_of_staff)   from museum );
select avg(num_of_staff) from museum where open_year < 2009;
select open_year, num_of_staff from museum where name = 'plaza museum';
select name from museum where num_of_staff > (   select min(num_of_staff)   from museum   where open_year > 2010 );
select visitor.id, visitor.name, visitor.age from visitor inner join (   select visitor_id   from visit   group by visitor_id   having count(*) > 1 ) as multiple_visits on visitor.id = multiple_visits.visitor_id;
select visitor.id, visitor.name, visitor.level_of_membership from visitor join visit on visitor.id = visit.visitor_id group by visitor.id order by sum(visit.total_spent) desc limit 1;
select museum.museum_id, museum.name from museum join visit on museum.museum_id = visit.museum_id group by museum.museum_id order by count(visit.visitor_id) desc limit 1;
select museum.name from museum left join visit on museum.museum_id = visit.museum_id where visit.visitor_id is null;
select visitor.name, visitor.age from visitor join visit on visitor.id = visit.visitor_id group by visit.visitor_id order by sum(visit.num_of_ticket) desc limit 1;
select avg(visit.num_of_ticket), max(visit.num_of_ticket) from visit;
select sum(total_spent)  from visit  join visitor on visit.visitor_id = visitor.id  where level_of_membership = 1;
select visitor.name  from visit  join visitor on visit.visitor_id = visitor.id  join museum on visit.museum_id = museum.museum_id  where museum.open_year < 2009  and museum.open_year > 2011  group by visitor.id  having count(distinct museum.open_year) = 2;
select count(distinct visitor.id)  from visitor  left join visit on visitor.id = visit.visitor_id  left join museum on visit.museum_id = museum.museum_id  where museum.open_year > 2010  or museum.open_year is null;
select count(*)  from museum  where open_year > 2013  or open_year < 2008;
select count(distinct player_id)  from players;
select count(*)  from players;
select count(*)  from matches;
select count(*)  from matches;
select first_name, birth_date  from players  where country_code = 'usa';
select first_name, birth_date  from players  where country_code = 'usa';
select avg(loser_age), avg(winner_age) from matches;
select avg(loser_age), avg(winner_age) from matches;
select avg(winner_rank) from matches;
select avg(winner_rank) from matches;
select max(loser_rank) from matches;
select max(loser_rank) from matches;
select count(distinct country_code) from players;
select count(distinct country_code) from players;
select count(distinct loser_name) from matches;
select count(distinct loser_name) from matches;
select tourney_name from matches group by tourney_name having count(*) > 10;
select tourney_name from matches group by tourney_name having count(*) > 10;
select winner_name from matches where year = 2013 and winner_name in (     select winner_name     from matches     where year = 2016 );
select winner_name from matches where year = 2013 and winner_name in (     select winner_name     from matches     where year = 2016 );
select count(*) from matches where year = 2013 or year = 2016;
select count(*)  from matches  where year = 2013 or year = 2016;
select players.country_code, players.first_name  from players  join matches as m1 on players.player_id = m1.winner_id  join matches as m2 on players.player_id = m2.winner_id  where m1.tourney_name = 'wta championships' and m2.tourney_name = 'australian open';
select players.first_name, players.country_code  from players  join matches as m1 on players.player_id = m1.winner_id  join matches as m2 on players.player_id = m2.winner_id  where m1.tourney_name = 'wta championships' and m2.tourney_name = 'australian open'  group by players.player_id  having count(distinct m1.tourney_name) = 2;
select players.first_name, players.country_code  from players  where birth_date = (select min(birth_date) from players);
select players.first_name, players.country_code  from players  where birth_date = (select min(birth_date) from players);
select first_name, last_name from players order by birth_date;
select first_name || ' ' || last_name as full_name from players order by birth_date;
select first_name, last_name from players where hand = 'l' order by birth_date;
select first_name, last_name from players where hand = 'l' order by birth_date;
select players.first_name, players.country_code from players join rankings on players.player_id = rankings.player_id group by players.player_id order by sum(rankings.tours) desc limit 1;
select players.first_name, players.country_code from players join rankings on players.player_id = rankings.player_id where rankings.tours = (select max(tours) from rankings);
select matches.year from matches group by matches.year order by count(*) desc limit 1;
select matches.year from matches group by matches.year order by count(*) desc, matches.year desc limit 1;
select winner_name, winner_rank_points from matches join players on matches.winner_id = players.player_id where matches.winner_name = (     select winner_name     from matches     group by winner_name     order by count(*) desc     limit 1 ) order by winner_rank_points desc limit 1;
select winner_name, winner_rank_points from matches join players on matches.winner_id = players.player_id where matches.winner_name = (     select winner_name     from matches     group by winner_name     order by count(*) desc     limit 1 ) order by winner_rank_points desc limit 1;
select winner_name  from matches  where tourney_name = 'australian open'  order by winner_rank_points desc  limit 1;
select winner_name  from matches  where tourney_name = 'australian open'  order by winner_rank_points desc  limit 1;
select winner_name, loser_name  from matches  order by minutes desc  limit 1;
select winner_name, loser_name  from matches  order by minutes desc  limit 1;
select avg(rankings.ranking_points), players.first_name  from rankings  join players on rankings.player_id = players.player_id  group by players.first_name;
select players.first_name, avg(rankings.ranking_points)  from players  join rankings on players.player_id = rankings.player_id  group by players.first_name  order by avg(rankings.ranking_points) desc  limit 1;
select players.first_name, sum(rankings.ranking_points)  from players  join rankings on players.player_id = rankings.player_id  group by players.first_name  order by sum(rankings.ranking_points) desc  limit 1;
select players.first_name, sum(rankings.ranking_points)  from players  join rankings on players.player_id = rankings.player_id  group by players.first_name  order by sum(rankings.ranking_points) desc  limit 1;
select count(distinct players.player_id), players.country_code  from players  group by players.country_code  order by count(distinct players.player_id) desc  limit 1;
select count(distinct players.player_id), players.country_code  from players  group by players.country_code  order by count(distinct players.player_id) desc  limit 1;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code having count(*) = (   select max(player_count)   from (     select count(*) as player_count     from players     group by country_code   ) );
select country_code from players group by country_code having count(*) > 50;
select country_code from players group by country_code having count(*) > 50;
select ranking_date, sum(tours) from rankings group by ranking_date;
select ranking_date, sum(tours) as total_tours from rankings group by ranking_date;
select year, count(*) as num_matches from matches group by year;
select year, count(*) as num_matches from matches group by year;
select winner_name, winner_rank from matches where winner_age in (   select winner_age   from matches   order by winner_age asc   limit 3 ) order by winner_age asc;
select winner_name, winner_rank from matches where winner_age in (   select winner_age   from matches   order by winner_age asc   limit 3 ) order by winner_age asc;
select count(distinct winner_name) from matches where winner_hand = 'l' and tourney_level = 'wta championships';
select count(distinct winner_name) from matches where winner_hand = 'l' and tourney_level = 'wta championships';
select first_name, country_code, birth_date from players where player_id = (   select winner_id   from matches   where winner_rank_points = (     select max(winner_rank_points)     from matches   ) );
select first_name, country_code, birth_date from players where player_id = (   select player_id   from rankings   where ranking_points = (     select max(ranking_points)     from rankings   ) );
select hand, count(*) from players group by hand;
select hand, count(*)  from players  group by hand;
select count(*)  from ship  where disposition_of_ship = 'captured';
select name, tonnage  from ship  order by name desc;
select name, date, result  from battle;
select max(killed), min(killed)  from death;
select avg(injured)  from death;
select sum(killed), sum(injured)  from death  where caused_by_ship_id in (     select id      from ship      where tonnage = 't' );
select name, result  from battle  where bulgarian_commander != 'boril';
select distinct battle.id, battle.name  from battle  join ship on battle.id = ship.lost_in_battle  where ship.ship_type = 'brig';
select id, name  from battle  where id in (     select caused_by_ship_id      from death      group by caused_by_ship_id      having sum(killed) + sum(injured) > 10 );
select ship.id, ship.name from ship join death on ship.id = death.caused_by_ship_id group by ship.id, ship.name order by sum(death.injured) desc limit 1;
select distinct battle.name from battle where battle.bulgarian_commander = 'kaloyan' and battle.latin_commander = 'baldwin i';
select count(distinct battle.result) from battle;
select count(distinct battle.id) from battle left join ship on battle.id = ship.lost_in_battle and ship.tonnage = 225 where ship.id is null;
select battle.name, battle.date from battle join ship on battle.id = ship.lost_in_battle where ship.name in ('lettice', 'hms atalanta');
select battle.name, battle.result, battle.bulgarian_commander from battle left join ship on battle.id = ship.lost_in_battle where battle.result like '%victory%' and battle.location = 'english channel' and ship.id is null;
select note from death where note like '%east%';
select line_1, line_2 from addresses;
select line_1, line_2 from addresses;
select count(*) from courses;
select count(*) from courses;
select course_description from courses where course_name = 'math';
select course_description from courses where course_name like 'math%';
select zip_postcode from addresses where city = 'port chelsea';
select zip_postcode from addresses where city = 'port chelsea' limit 1;
select departments.department_name, departments.department_id from departments join degree_programs on departments.department_id = degree_programs.department_id group by departments.department_id order by count(degree_programs.degree_program_id) desc limit 1;
select departments.department_name, departments.department_id from departments join degree_programs on departments.department_id = degree_programs.department_id group by departments.department_id order by count(degree_programs.degree_program_id) desc limit 1;
select count(distinct degree_programs.department_id) from degree_programs;
select count(distinct departments.department_id) from departments join degree_programs on departments.department_id = degree_programs.department_id;
select count(distinct degree_summary_name) from degree_programs;
select count(distinct degree_program_id)  from degree_programs;
select count(*)  from degree_programs  where department_id = (select department_id from departments where department_name = 'engineering');
select count(*)  from degree_programs  where department_id = (select department_id from departments where department_name = 'engineering');
select section_name, section_description  from sections;
select section_name, section_description  from sections;
select courses.course_name, courses.course_id from courses where courses.course_id in (   select sections.course_id   from sections   group by sections.course_id   having count(sections.section_id) <= 2 );
select courses.course_name, courses.course_id from courses where courses.course_id in (   select sections.course_id   from sections   group by sections.course_id   having count(sections.section_id) < 2 );
select sections.section_name from sections order by sections.section_name desc;
select sections.section_name from sections order by sections.section_name desc;
select semesters.semester_name, semesters.semester_id from semesters where semesters.semester_id = (   select student_enrolment.semester_id   from student_enrolment   group by student_enrolment.semester_id   order by count(student_enrolment.student_enrolment_id) desc   limit 1 );
select s.semester_name, s.semester_id, se.degree_program_id from semesters s join student_enrolment se on s.semester_id = se.semester_id group by s.semester_id, se.degree_program_id having count(distinct se.student_id) = (   select max(student_count)   from (     select count(distinct se.student_id) as student_count     from student_enrolment se     where se.semester_id = s.semester_id     group by se.degree_program_id   ) );
select department_description from departments where department_name like '%the computer%';
select department_description from departments where department_name like '%computer%';
select s.first_name, s.middle_name, s.last_name, s.student_id from students s join student_enrolment se on s.student_id = se.student_id where se.semester_id = 1 group by s.student_id having count(distinct se.degree_program_id) = 2;
select s.first_name, s.middle_name, s.last_name, s.student_id from students s join student_enrolment se on s.student_id = se.student_id where se.semester_id = 1 group by s.student_id having count(distinct se.degree_program_id) = 2;
select students.first_name, students.middle_name, students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'bachelor';
select students.first_name, students.middle_name, students.last_name from students join student_enrolment on students.student_id = student_enrolment.student_id join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id where degree_programs.degree_summary_name = 'bachelor';
select degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_summary_name order by count(student_enrolment.student_id) desc limit 1;
select degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_summary_name order by count(student_enrolment.student_id) desc limit 1;
select degree_programs.degree_program_id, degree_programs.degree_summary_name from degree_programs join student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id group by degree_programs.degree_program_id, degree_programs.degree_summary_name order by count(student_enrolment.student_id) desc limit 1;
select degree_program_id, degree_summary_name from degree_programs where degree_program_id = (     select degree_program_id     from student_enrolment     group by degree_program_id     order by count(student_id) desc     limit 1 );
select s.student_id, s.first_name, s.middle_name, s.last_name, count(se.student_enrolment_id) as num_enrollments from students s join student_enrolment se on s.student_id = se.student_id group by s.student_id order by num_enrollments desc limit 1;
select s.student_id, s.first_name, s.middle_name, s.last_name, count(se.student_enrolment_id) as num_enrollments from students s join student_enrolment se on s.student_id = se.student_id where se.degree_program_id = (     select degree_program_id     from student_enrolment     group by degree_program_id     order by count(student_id) desc     limit 1 ) group by s.student_id order by num_enrollments desc limit 1;
select semester_name from semesters where semester_id not in (     select semester_id     from student_enrolment     group by semester_id );
select semester_name from semesters where semester_id not in (     select semester_id     from student_enrolment     group by semester_id );
select distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id;
select distinct courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id join student_enrolment on student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id;
select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id join student_enrolment on student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id group by courses.course_name order by count(distinct student_enrolment.student_id) desc limit 1;
select courses.course_name from courses join student_enrolment_courses on courses.course_id = student_enrolment_courses.course_id join student_enrolment on student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id group by courses.course_name order by count(distinct student_enrolment.student_id) desc limit 1;
select students.last_name from students join addresses on students.current_address_id = addresses.address_id left join student_enrolment on students.student_id = student_enrolment.student_id where addresses.state_province_county = 'north carolina' and student_enrolment.degree_program_id is null;
select last_name from students where current_address_id in (     select address_id     from addresses     where state_province_county = 'north carolina' ) and student_id not in (     select student_id     from student_enrolment );
select transcript_date, transcript_id from transcripts where transcript_id in (     select transcript_id     from transcript_contents     group by transcript_id     having count(distinct course_id) >= 2 );
select transcript_date, transcript_id from transcripts where transcript_id in (     select transcript_id     from transcript_contents     group by transcript_id     having count(distinct course_id) >= 1 );
select cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward';
select cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward';
select first_name, middle_name, last_name from students order by date_first_registered limit 1;
select first_name, middle_name, last_name from students order by date_first_registered limit 1;
select first_name, middle_name, last_name from students inner join student_enrolment on students.student_id = student_enrolment.student_id order by date_first_registered limit 1;
select first_name, middle_name, last_name from students inner join student_enrolment on students.student_id = student_enrolment.student_id order by date_first_registered limit 1;
select first_name from students inner join addresses as current on students.current_address_id = current.address_id inner join addresses as permanent on students.permanent_address_id = permanent.address_id where current.line_1 != permanent.line_1;
select first_name from students where current_address_id != permanent_address_id limit 1;
select addresses.address_id, addresses.line_1, addresses.line_2 from students join addresses on students.current_address_id = addresses.address_id group by addresses.address_id order by count(*) desc limit 1;
select addresses.address_id, addresses.line_1, addresses.line_2 from students join addresses on students.current_address_id = addresses.address_id group by addresses.address_id order by count(*) desc limit 1;
select avg(transcript_date) from transcripts;
select avg(julianday(transcript_date)) from transcripts;
select transcript_date, other_details from transcripts order by transcript_date asc limit 1;
select transcript_date, other_details from transcripts order by transcript_date asc limit 1;
select count(transcript_id) from transcripts;
select count(transcript_id) from transcripts;
select transcript_date from transcripts order by transcript_date desc limit 1;
select transcript_date  from transcripts  order by transcript_date desc  limit 1;
select count(student_course_id), student_enrolment_courses.student_enrolment_id  from transcript_contents  join student_enrolment_courses on transcript_contents.student_course_id = student_enrolment_courses.student_course_id  group by student_enrolment_courses.student_enrolment_id  order by count(student_course_id) desc  limit 1;
select max(course_count), student_enrolment_courses.student_enrolment_id  from (     select count(student_course_id) as course_count, student_enrolment_courses.student_enrolment_id      from transcript_contents      join student_enrolment_courses on transcript_contents.student_course_id = student_enrolment_courses.student_course_id      group by student_enrolment_courses.student_enrolment_id  ) as course_counts  group by student_enrolment_id  order by max(course_count) desc  limit 1;
select transcript_date, transcript_id  from (     select count(student_course_id) as course_count, transcript_id      from transcript_contents      group by transcript_id  ) as transcript_counts  join transcripts on transcript_counts.transcript_id = transcripts.transcript_id  order by course_count asc  limit 1;
select transcript_date, transcript_id  from (     select count(student_course_id) as course_count, transcript_id      from transcript_contents      group by transcript_id  ) as transcript_counts  join transcripts on transcript_counts.transcript_id = transcripts.transcript_id  order by course_count asc  limit 1;
select semester_id from student_enrolment where degree_program_id in (     select degree_program_id     from degree_programs     where degree_summary_name = 'master' ) and semester_id in (     select semester_id     from student_enrolment     where degree_program_id in (         select degree_program_id         from degree_programs         where degree_summary_name = 'bachelor'     ) ) group by semester_id having count(distinct degree_program_id) = 2;
select semester_id from student_enrolment where degree_program_id in (     select degree_program_id     from degree_programs     where degree_summary_name = 'master' ) and semester_id in (     select semester_id     from student_enrolment     where degree_program_id in (         select degree_program_id         from degree_programs         where degree_summary_name = 'bachelor'     ) ) group by semester_id having count(distinct degree_program_id) = 2;
select count(distinct current_address_id) from students;
select distinct line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details from addresses where address_id in (     select current_address_id     from students );
select * from students order by last_name desc, first_name desc;
select first_name from students order by first_name desc;
select * from sections where section_name = 'h';
select section_description from sections where section_name = 'h';
select first_name from students where permanent_address_id in (     select address_id     from addresses     where country = 'haiti' ) or cell_mobile_number = '09700166582';
select first_name from students where permanent_address_id in (     select address_id     from addresses     where country = 'haiti' ) or cell_mobile_number = '09700166582';
select title from cartoon order by title asc;
select title from cartoon order by title asc;
select title from cartoon where directed_by = 'ben jones';
select title from cartoon where directed_by = 'ben jones';
select count(*) from cartoon where written_by = 'joseph kuhr';
select count(*)  from cartoon  where written_by = 'joseph kuhr';
select title, directed_by  from cartoon  order by original_air_date;
select title, directed_by  from cartoon  order by original_air_date;
select title  from cartoon  where directed_by = 'ben jones' or directed_by = 'brandon vietti';
select title  from cartoon  where directed_by = 'ben jones' or directed_by = 'brandon vietti';
select country, count(*) as num_channels from tv_channel group by country order by num_channels desc limit 1;
select country, count(*) as num_channels from tv_channel group by country order by num_channels desc limit 1;
select count(distinct series_name), count(distinct content) from tv_channel;
select count(distinct series_name || content) from tv_channel;
select content from tv_channel where series_name = 'sky radio';
select distinct content  from tv_channel  where series_name = 'sky radio';
select package_option  from tv_channel  where series_name = 'sky radio';
select distinct package_option  from tv_channel  where series_name = 'sky radio';
select count(*)  from tv_channel  where language = 'english';
select count(distinct id)  from tv_channel  where language = 'english';
select language, count(*) as num_channels from tv_channel group by language order by num_channels asc limit 1;
select language, count(*) as num_channels from tv_channel group by language having num_channels = (   select count(*) as min_channels   from tv_channel   group by language   order by min_channels asc   limit 1 );
select language, count(*) as num_channels from tv_channel group by language;
select language, count(*) as num_channels from tv_channel group by language order by num_channels desc;
select tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = 'the rise of the blue beetle!';
select tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = 'the rise of the blue beetle';
select cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = 'sky radio';
select cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = 'sky radio';
select tv_series.episode from tv_series order by tv_series.rating desc;
select tv_series.episode from tv_series order by tv_series.rating desc;
select tv_series.episode, tv_series.rating from tv_series order by tv_series.rating desc limit 3;
select tv_series.episode, tv_series.rating from tv_series order by tv_series.rating desc limit 3;
select min(tv_series.share), max(tv_series.share) from tv_series;
select min(tv_series.share), max(tv_series.share) from tv_series;
select tv_series.air_date from tv_series where tv_series.episode = 'a love of a lifetime';
select air_date from tv_series where episode = "a love of a lifetime";
select weekly_rank from tv_series where episode = "a love of a lifetime";
select weekly_rank from tv_series where episode = "a love of a lifetime";
select tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_series.episode = "a love of a lifetime";
select tv_channel.series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where tv_series.episode = "a love of a lifetime";
select tv_series.episode  from tv_series  join tv_channel on tv_series.channel = tv_channel.id  where tv_channel.series_name = 'sky radio';
select episode  from tv_series  join tv_channel on tv_series.channel = tv_channel.id  where tv_channel.series_name = 'sky radio';
select count(cartoon.id), cartoon.directed_by  from cartoon  group by cartoon.directed_by;
select count(cartoon.id), cartoon.directed_by  from cartoon  group by cartoon.directed_by  having count(cartoon.id) = (select max(count)                              from (select count(id) as count                                    from cartoon                                    group by directed_by));
select cartoon.production_code, cartoon.channel  from cartoon  where cartoon.original_air_date = (select max(original_air_date)                                      from cartoon);
select production_code, channel from cartoon where original_air_date = (select max(original_air_date) from cartoon);
select package_option, series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where hight_definition_tv = 1;
select distinct package_option, series_name from tv_channel join tv_series on tv_channel.id = tv_series.channel where hight_definition_tv = 1;
select distinct country from tv_channel join cartoon on tv_channel.id = cartoon.channel where written_by = 'todd casey';
select distinct country from tv_channel join cartoon on tv_channel.id = cartoon.channel where written_by = 'todd casey';
select distinct tv_channel.country from tv_channel left join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'todd casey' and cartoon.id is null;
select distinct tv_channel.country from tv_channel left join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by != 'todd casey' or cartoon.id is null;
select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by in ('ben jones', 'michael chang') group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2;
select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by in ('ben jones', 'michael chang') group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2 intersect select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'ben jones' or cartoon.directed_by = 'michael chang' group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2;
select distinct tv_channel.pixel_aspect_ratio_par, tv_channel.country from tv_channel where tv_channel.language != 'english';
select pixel_aspect_ratio_par, country  from tv_channel  where language != 'english';
select id  from tv_channel  where country in (     select country      from tv_channel      group by country      having count(*) > 2 );
select id  from tv_channel  where id in (     select channel      from tv_series      group by channel      having count(distinct id) > 2 );
select id  from tv_channel  where id not in (     select channel      from cartoon      where directed_by = 'ben jones' );
select id  from tv_channel  where id not in (     select channel      from cartoon      where directed_by = 'ben jones'     group by channel );
select tv_channel.package_option from tv_channel where tv_channel.id not in (   select cartoon.channel   from cartoon   where cartoon.directed_by = 'ben jones' );
select tv_channel.package_option from tv_channel where tv_channel.id not in (   select cartoon.channel   from cartoon   where cartoon.directed_by = 'ben jones' );
select count(distinct poker_player_id) from poker_player;
select count(*) from poker_player;
select earnings from poker_player order by earnings desc;
select earnings  from poker_player  order by earnings desc;
select final_table_made, best_finish  from poker_player;
select final_table_made, best_finish  from poker_player;
select avg(earnings)  from poker_player;
select avg(earnings)  from poker_player;
select money_rank  from poker_player  order by earnings desc  limit 1;
select money_rank  from poker_player  where earnings = (select max(earnings) from poker_player);
select max(final_table_made)  from poker_player  where earnings < 200000;
select max(final_table_made)  from poker_player  where earnings < 200000;
select name  from people  inner join poker_player  on people.people_id = poker_player.people_id;
select name  from people  join poker_player on people.people_id = poker_player.people_id;
select name  from people  join poker_player on people.people_id = poker_player.people_id  where earnings > 300000;
select name  from people  join poker_player on people.people_id = poker_player.people_id  where earnings > 300000;
select name  from people  join poker_player on people.people_id = poker_player.people_id  order by final_table_made asc;
select name  from people  join poker_player on people.people_id = poker_player.people_id  order by final_table_made asc;
select birth_date from people join poker_player on people.people_id = poker_player.people_id where earnings = (select min(earnings) from poker_player);
select birth_date from people join poker_player on people.people_id = poker_player.people_id where earnings = (select min(earnings) from poker_player);
select money_rank from poker_player join people on poker_player.people_id = people.people_id where height = (select max(height) from people);
select money_rank from poker_player join people on poker_player.people_id = people.people_id where height = (select max(height) from people);
select avg(earnings) from poker_player join people on poker_player.people_id = people.people_id where height > 200;
select avg(earnings) from poker_player join people on poker_player.people_id = people.people_id where height > 200;
select people.name from poker_player join people on poker_player.people_id = people.people_id order by earnings desc;
select people.name from poker_player join people on poker_player.people_id = people.people_id order by earnings desc;
select nationality, count(distinct people_id) from people group by nationality;
select nationality, count(distinct people_id) from people group by nationality;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality having count(*) = (   select max(count)    from (     select count(*) as count      from people      group by nationality   ) );
select distinct p1.nationality from people p1, people p2 where p1.nationality = p2.nationality and p1.people_id != p2.people_id;
select nationality from people group by nationality having count(*) >= 2;
select name, birth_date from people order by name asc;
select name, birth_date from people order by name asc;
select name from people where nationality != 'russia';
select name from people where nationality <> 'russia';
select name from people where people_id not in (select people_id from poker_player);
select name from people where people_id not in (select people_id from poker_player);
select count(distinct nationality)  from people;
select count(distinct nationality)  from people;
select count(distinct state)  from area_code_state;
select contestant_number, contestant_name  from contestants  order by contestant_name desc;
select vote_id, phone_number, state  from votes;
select max(area_code), min(area_code) from area_code_state;
select max(created) from votes where state = 'ca';
select contestant_name from contestants where contestant_name != 'jessie alloway';
select distinct state, created from votes;
select contestant_number, contestant_name from contestants where contestant_number in (select contestant_number from votes group by contestant_number having count(*) >= 2);
select contestant_number, contestant_name from contestants where contestant_number in (   select contestant_number   from votes   group by contestant_number   order by count(*) asc   limit 1 );
select count(*) from votes where state in ('ny', 'ca');
select count(*) from contestants where contestant_number not in (   select distinct contestant_number   from votes );
select area_code from area_code_state where area_code in (   select state   from votes   group by state   order by count(*) desc   limit 1 );
select created, state, phone_number from votes where contestant_number = (   select contestant_number   from contestants   where contestant_name = 'tabatha gehling' );
select distinct area_code  from votes  where contestant_number = (select contestant_number from contestants where contestant_name = 'tabatha gehling')  and area_code in (select area_code from votes where contestant_number = (select contestant_number from contestants where contestant_name = 'kelly clauss'));
select contestant_name  from contestants  where contestant_name like '%al%';
select name  from country  where indepyear > 1950;
select name  from country  where indepyear > 1950;
select count(*)  from country  where governmentform like '%republic%';
select count(*)  from country  where governmentform = 'republic';
select sum(surfacearea)  from country  where region = 'caribbean';
select sum(surfacearea)  from country  where region = 'caribbean';
select continent  from country  where name = 'anguilla';
select continent  from country  where name = 'anguilla';
select region  from city  join country on city.countrycode = country.code  where city.name = 'kabul';
select region  from city  join country on city.countrycode = country.code  where city.name = 'kabul';
select language  from countrylanguage  where countrycode = 'abw' and isofficial = 't'  order by percentage desc  limit 1;
select language  from countrylanguage  where countrycode = 'abw' and percentage = (     select max(percentage)      from countrylanguage      where countrycode = 'abw' );
select population, lifeexpectancy  from country  where name = 'brazil';
select population, lifeexpectancy from country where name = 'brazil';
select population, region from country where name = 'angola';
select population, region from country where name = 'angola';
select avg(lifeexpectancy) from country where region = 'central africa';
select avg(lifeexpectancy) from country where region = 'central africa';
select name  from country  where continent = 'asia'  order by lifeexpectancy asc  limit 1;
select name  from country  where continent = 'asia'  order by lifeexpectancy asc  limit 1;
select sum(population), max(gnp)  from country  where continent = 'asia';
select sum(population), max(gnp)  from country  where continent = 'asia';
select avg(lifeexpectancy)  from country  where continent = 'africa' and governmentform like '%republic%';
select avg(lifeexpectancy)  from country  where continent = 'africa' and governmentform like '%republic%';
select sum(surfacearea)  from country  where continent in ('asia', 'europe');
select sum(surfacearea)  from country  where continent in ('asia', 'europe');
select sum(population)  from city  where district = 'gelderland';
select population  from city  where district = 'gelderland';
select avg(gnp), sum(population) from country where governmentform like '%us territory%';
select avg(gnp), sum(population) from country where governmentform like '%us territory%';
select count(distinct language) from countrylanguage;
select count(distinct language) from countrylanguage;
select count(distinct governmentform) from country where continent = 'africa';
select count(distinct governmentform) from country where continent = 'africa';
select count(distinct language) from countrylanguage where countrycode = 'abw';
select count(distinct language) from countrylanguage where countrycode = 'abw' and isofficial = 't';
select count(distinct language) from countrylanguage where countrycode = 'afg' and isofficial = 't';
select count(distinct language) from countrylanguage where countrycode = 'afg' and isofficial = 't';
select country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 't' group by country.name order by count(countrylanguage.language) desc limit 1;
select country.name from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name order by count(distinct countrylanguage.language) desc limit 1;
select country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count(distinct countrylanguage.language) desc limit 1;
select country.continent from country join countrylanguage on country.code = countrylanguage.countrycode group by country.continent order by count(distinct countrylanguage.language) desc limit 1;
select count(distinct countrylanguage.countrycode) from countrylanguage where language in ('english', 'dutch') group by countrylanguage.countrycode having count(distinct language) = 2;
select count(distinct countrycode)  from countrylanguage  where language in ('english', 'dutch') and isofficial = 't';
select c1.name  from country c1  join countrylanguage cl1 on c1.code = cl1.countrycode  join countrylanguage cl2 on c1.code = cl2.countrycode  where cl1.language = 'english' and cl1.isofficial = 't'  and cl2.language = 'french' and cl2.isofficial = 't';
select distinct c1.name  from country c1  join countrylanguage cl1 on c1.code = cl1.countrycode  join countrylanguage cl2 on c1.code = cl2.countrycode  where cl1.language = 'english' and cl2.language = 'french';
select c1.name  from country c1  join countrylanguage cl1 on c1.code = cl1.countrycode  join countrylanguage cl2 on c1.code = cl2.countrycode  where cl1.language = 'english' and cl1.isofficial = 't'  and cl2.language = 'french' and cl2.isofficial = 't';
select distinct c1.name  from country c1  join countrylanguage cl1 on c1.code = cl1.countrycode  join countrylanguage cl2 on c1.code = cl2.countrycode  where cl1.language = 'english' and cl1.isofficial = 't'  and cl2.language = 'french' and cl2.isofficial = 't';
select count(distinct country.continent) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'chinese';
select count(distinct country.continent) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'chinese';
select distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch');
select distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch');
select distinct country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch') and countrylanguage.isofficial = 't';
select distinct country.code, country.name, country.continent, country.region, country.surfacearea, country.indepyear, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, countrylanguage.language, countrylanguage.isofficial, countrylanguage.percentage from country join countrylanguage on country.code = countrylanguage.countrycode where (countrylanguage.language = 'english' or countrylanguage.language = 'dutch') and country.governmentform like '%republic%';
select countrylanguage.language from countrylanguage join country on country.code = countrylanguage.countrycode where country.continent = 'asia' group by countrylanguage.language order by sum(countrylanguage.percentage) desc limit 1;
select countrylanguage.language from countrylanguage join country on country.code = countrylanguage.countrycode where country.continent = 'asia' and countrylanguage.isofficial = 't' group by countrylanguage.language order by count(*) desc limit 1;
select distinct countrylanguage.language from countrylanguage join country on country.code = countrylanguage.countrycode where country.governmentform like '%republic%' and countrylanguage.language not in (     select countrylanguage.language     from countrylanguage     join country on country.code = countrylanguage.countrycode     where country.governmentform not like '%republic%'     group by countrylanguage.language     having count(distinct country.code) > 1 );
select distinct countrylanguage.language from countrylanguage join country on country.code = countrylanguage.countrycode where country.governmentform like '%republic%' and countrylanguage.language not in (     select countrylanguage.language     from countrylanguage     join country on country.code = countrylanguage.countrycode     where country.governmentform not like '%republic%'     group by countrylanguage.language     having count(distinct country.code) > 1 );
select city.name, city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' order by city.population desc limit 1;
select city.name, city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' order by city.population desc limit 1;
select country.name, country.population, country.lifeexpectancy from country where country.continent = 'asia' order by country.surfacearea desc limit 1;
select country.name, country.population, country.lifeexpectancy from country where country.continent = 'asia' order by country.surfacearea desc limit 1;
select avg(country.lifeexpectancy) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 0 and countrylanguage.language = 'english';
select avg(lifeexpectancy)  from country  where code not in      (select countrycode       from countrylanguage       where language = 'english' and isofficial = 't');
select sum(population)  from country  where code not in      (select countrycode       from countrylanguage       where language = 'english' and isofficial = 't');
select sum(population)  from country  where code not in      (select countrycode       from countrylanguage       where language = 'english' and isofficial = 't');
select language  from countrylanguage  where countrycode =      (select code       from country       where headofstate = 'beatrix');
select language  from countrylanguage  where countrycode =      (select code       from country       where headofstate = 'beatrix');
select count(distinct language)  from countrylanguage  where countrycode in (   select code    from country    where indepyear < 1930 ) and isofficial = 't';
select count(distinct language)  from countrylanguage  where countrycode in (   select code    from country    where indepyear < 1930 ) and isofficial = 't';
select name  from country  where surfacearea > (   select max(surfacearea)    from country    where continent = 'europe' );
select name  from country  where surfacearea > (   select max(surfacearea)    from country    where continent = 'europe' );
select name  from country  where population < (   select min(population)    from country    where continent = 'asia' ) and continent = 'africa';
select country.code from country where continent = 'africa' and population < (select min(population) from country where continent = 'asia');
select country.code from country where continent = 'asia' and population > (select max(population) from country where continent = 'africa');
select country.code from country where continent = 'asia' and population > (select max(population) from country where continent = 'africa');
select distinct country.code from country join countrylanguage on country.code = countrylanguage.countrycode where language != 'english';
select distinct country.code from country join countrylanguage on country.code = countrylanguage.countrycode where language != 'english';
select distinct countrycode from countrylanguage where language != 'english';
select distinct countrycode from countrylanguage where language != 'english';
select distinct country.code from country join countrylanguage on country.code = countrylanguage.countrycode where language != 'english' and governmentform != 'republic';
select distinct country.code from country join countrylanguage on country.code = countrylanguage.countrycode where language != 'english' and governmentform != 'republic';
select city.name from city join country on city.countrycode = country.code join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'europe' and countrylanguage.isofficial = 'f' and countrylanguage.language != 'english';
select city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'europe' and countrylanguage.language <> 'english' and countrylanguage.isofficial = 't';
select distinct city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'asia' and countrylanguage.language = 'chinese' and countrylanguage.isofficial = 't';
select distinct city.name from city join countrylanguage on city.countrycode = countrylanguage.countrycode join country on city.countrycode = country.code where country.continent = 'asia' and countrylanguage.language = 'chinese' and countrylanguage.isofficial = 't';
select country.name, country.indepyear, country.surfacearea from country where country.population = (select min(population) from country);
select country.name, country.indepyear, country.surfacearea from country where country.population = (select min(population) from country);
select country.name, country.population, country.headofstate from country where country.surfacearea = (select max(surfacearea) from country);
select country.name, country.population, country.headofstate from country where country.surfacearea = (select max(surfacearea) from country);
select count(countrylanguage.language), country.name from countrylanguage join country on country.code = countrylanguage.countrycode group by country.name having count(countrylanguage.language) >= 3;
select count(countrylanguage.language), country.name from countrylanguage join country on country.code = countrylanguage.countrycode group by country.name having count(countrylanguage.language) > 2;
select count(city.id), city.district from city where city.population > (select avg(population) from city) group by city.district;
select district, count(name)  from city  where population > (select avg(population) from city)  group by district;
select governmentform, sum(population)  from country  where governmentform in      (select governmentform       from country       group by governmentform       having avg(lifeexpectancy) > 72)  group by governmentform;
select governmentform, sum(population)  from country  where governmentform in      (select governmentform       from country       group by governmentform       having avg(lifeexpectancy) > 72)  group by governmentform;
select continent, sum(population), avg(lifeexpectancy)  from country  where continent in      (select continent       from country       group by continent       having avg(lifeexpectancy) < 72)  group by continent;
select continent, sum(population), avg(lifeexpectancy)  from country  where continent in      (select continent       from country       group by continent       having avg(lifeexpectancy) < 72)  group by continent;
select name, surfacearea  from country  order by surfacearea desc  limit 5;
select name, surfacearea  from country  order by surfacearea desc  limit 5;
select name  from country  order by population desc  limit 3;
select name  from country  order by population desc  limit 3;
select name  from country  where population > 0  order by population asc  limit 3;
select name  from country  order by population asc  limit 3;
select count(*)  from country  where continent = 'asia';
select count(*)  from country  where continent = 'asia';
select name  from country  where continent = 'europe' and population = 80000;
select name  from country  where continent = 'europe' and population = 80000;
select sum(population), avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000;
select sum(population), avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000;
select name from city where population between 160000 and 900000;
select name from city where population between 160000 and 900000;
select language from countrylanguage group by language order by count(distinct countrycode) desc limit 1;
select language  from countrylanguage  group by language  order by count(distinct countrycode) desc  limit 1;
select cl.language, cl.countrycode, cl.percentage  from countrylanguage cl  join (select countrycode, max(percentage) as max_percentage        from countrylanguage        group by countrycode) cl2  on cl.countrycode = cl2.countrycode and cl.percentage = cl2.max_percentage;
select cl.language, cl.countrycode, cl.percentage  from countrylanguage cl  join (select countrycode, max(percentage) as max_percentage        from countrylanguage        group by countrycode) cl2  on cl.countrycode = cl2.countrycode and cl.percentage = cl2.max_percentage  group by cl.countrycode;
select count(distinct cl.countrycode) as num_countries, max(cl.percentage) as max_percentage  from countrylanguage cl  where cl.language = 'spanish'  group by cl.language;
select count(distinct cl.countrycode) as num_countries, max(cl.percentage) as max_percentage  from countrylanguage cl  where cl.language = 'spanish' and cl.percentage > 50;
select countrycode, max(percentage)  from countrylanguage  where language = 'spanish'  group by countrycode  order by max(percentage) desc  limit 1;
select countrycode, max(percentage)  from countrylanguage  where language = 'spanish'  group by countrycode  having max(percentage) > 50  order by max(percentage) desc  limit 1;
select count(*)  from conductor;
select count(distinct conductor_id)  from orchestra;
select name  from conductor  order by age asc  limit 1;
select name from conductor order by age;
select name from conductor where nationality != 'usa';
select name from conductor where nationality != 'usa' and conductor_id not in (     select conductor_id     from conductor     where nationality = 'usa' );
select record_company from orchestra group by record_company order by min(year_of_founded) desc;
select record_company from orchestra group by record_company order by min(year_of_founded) desc;
select avg(attendance) from show;
select avg(attendance) from show;
select max(share), min(share) from performance where type != 'live final';
select max(share), min(share) from performance where type != 'live final';
select count(distinct nationality) from conductor;
select count(distinct nationality)  from conductor;
select name  from conductor  order by year_of_work desc;
select name  from conductor  order by year_of_work desc;
select name  from conductor  where year_of_work = (select max(year_of_work) from conductor);
select name  from conductor  where year_of_work = (select max(year_of_work) from conductor);
select conductor.name, orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id;
select conductor.name, orchestra.orchestra from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count(distinct orchestra.orchestra_id) > 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count(distinct orchestra.orchestra_id) > 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name order by count(distinct orchestra.orchestra_id) desc limit 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name order by count(distinct orchestra.orchestra_id) desc limit 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008 group by conductor.name order by conductor.name asc limit 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008 group by conductor.name order by conductor.name asc;
select orchestra.record_company, count(distinct orchestra.orchestra_id) from orchestra group by orchestra.record_company;
select orchestra.record_company, count(distinct orchestra.orchestra_id) from orchestra group by orchestra.record_company;
select major_record_format from orchestra group by major_record_format order by count(*) asc limit 1;
select major_record_format from orchestra group by major_record_format order by count(*) desc;
select record_company from orchestra group by record_company order by count(distinct orchestra_id) desc limit 1;
select record_company from orchestra group by record_company order by count(distinct orchestra_id) desc, record_company limit 1;
select orchestra from orchestra where orchestra_id not in (select distinct orchestra_id from performance);
select orchestra.orchestra from orchestra left join performance on orchestra.orchestra_id = performance.orchestra_id where performance.performance_id is null;
select orchestra.record_company from orchestra where orchestra.year_of_founded < 2003 intersect select orchestra.record_company from orchestra where orchestra.year_of_founded >= 2003;
select orchestra.record_company from orchestra where orchestra.year_of_founded < 2003 intersect all select orchestra.record_company from orchestra where orchestra.year_of_founded >= 2003;
select count(distinct orchestra_id) from orchestra where major_record_format = 'cd' or major_record_format = 'dvd';
select count(distinct orchestra_id) from orchestra where major_record_format in ('cd', 'dvd');
select year_of_founded from orchestra where orchestra_id in (   select orchestra_id   from performance   group by orchestra_id   having count(distinct performance_id) > 1 );
select year_of_founded from orchestra where orchestra_id in (   select orchestra_id   from performance   group by orchestra_id   having count(distinct performance_id) > 1 );
select count(*) from highschooler;
select count(*) from highschooler;
select name, grade from highschooler;
select name, grade from highschooler;
select grade from highschooler;
select grade from highschooler order by name asc;
select grade from highschooler where name = 'kyle';
select grade from highschooler where name = 'kyle';
select name from highschooler where grade = 10;
select name from highschooler where grade = 10;
select id from highschooler where name = 'kyle';
select id from highschooler where name = 'kyle';
select count(*) from highschooler where grade = 9 or grade = 10;
select count(*)  from highschooler  where grade in (9, 10);
select grade, count(*)  from highschooler  group by grade;
select count(*)  from highschooler  group by grade;
select grade  from highschooler  group by grade  order by count(*) desc  limit 1;
select grade  from highschooler  group by grade  order by count(*) desc  limit 1;
select grade, count(distinct student_id)  from highschooler  join friend on id = student_id  group by grade  having count(distinct student_id) >= 4;
select grade, count(distinct id)  from highschooler  group by grade  having count(distinct id) >= 4;
select student_id, count(friend_id)  from friend  group by student_id;
select student_id, count(friend_id)  from friend  group by student_id;
select highschooler.name, count(distinct friend.friend_id)  from highschooler  left join friend on highschooler.id = friend.student_id  group by highschooler.name;
select highschooler.name, count(friend.friend_id)  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.id  order by count(friend.friend_id) desc  limit 1;
select highschooler.name  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.id  order by count(friend.friend_id) desc  limit 1;
select highschooler.name  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.id  having count(friend.friend_id) = (     select max(friend_count)      from (         select count(friend.friend_id) as friend_count          from highschooler          join friend on highschooler.id = friend.student_id          group by highschooler.id     ) );
select highschooler.name  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.id  having count(friend.friend_id) >= 3;
select highschooler.name  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.id  having count(friend.friend_id) >= 3;
select h2.name from highschooler h1, highschooler h2, friend f where h1.name = 'kyle' and h1.id = f.student_id and h2.id = f.friend_id;
select h2.name from highschooler h1, highschooler h2, friend f where h1.name = 'kyle' and h1.id = f.student_id and h2.id = f.friend_id;
select count(h2.id) from highschooler h1, highschooler h2, friend f where h1.name = 'kyle' and h1.id = f.student_id and h2.id = f.friend_id;
select count(h2.id) from highschooler h1, highschooler h2, friend f where h1.name = 'kyle' and h1.id = f.student_id and h2.id = f.friend_id;
select h1.id from highschooler h1 where h1.id not in (select f.student_id from friend f union select f.friend_id from friend f);
select distinct student_id from friend where student_id not in (   select distinct student_id   from friend   join highschooler on friend.student_id = highschooler.id   where grade = 'hs' ) and student_id not in (   select distinct friend_id   from friend   join highschooler on friend.friend_id = highschooler.id   where grade = 'hs' );
select name from highschooler where id not in (   select distinct student_id   from friend ) and id not in (   select distinct friend_id   from friend );
select name from highschooler where id not in (   select distinct student_id   from friend ) and id not in (   select distinct friend_id   from friend );
select distinct student_id from friend where student_id in (   select distinct student_id   from friend   join likes on friend.friend_id = likes.liked_id ) and student_id in (   select distinct liked_id   from likes );
select distinct student_id from friend where student_id in (   select distinct student_id   from friend ) and student_id in (   select distinct student_id   from likes ) and student_id not in (   select distinct student_id   from friend   join likes on friend.friend_id = likes.liked_id );
select h.name from highschooler h where h.id in (   select f.student_id   from friend f   union   select f.friend_id   from friend f ) and h.id in (   select l.liked_id   from likes l );
select h.name from highschooler h where h.id in (   select f.student_id   from friend f   union   select f.friend_id   from friend f ) and h.id in (   select l.student_id   from likes l );
select l.student_id, count(*) as num_likes from likes l group by l.student_id;
select count(*) as num_likes, l.student_id from likes l group by l.student_id;
select h.name, count(*) as num_likes from highschooler h join likes l on h.id = l.student_id group by h.id;
select highschooler.name, count(likes.liked_id) from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id having count(likes.liked_id) > 0;
select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id order by count(likes.liked_id) desc limit 1;
select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id order by count(likes.liked_id) desc limit 1;
select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id having count(likes.liked_id) >= 2;
select highschooler.name from highschooler join likes on highschooler.id = likes.student_id group by highschooler.id having count(likes.liked_id) >= 2;
select h.name from highschooler h join friend f on h.id = f.student_id where h.grade > 5 group by h.id having count(distinct f.friend_id) >= 2;
select h.name from highschooler h join friend f on h.id = f.student_id where h.grade > 5 group by h.id having count(distinct f.friend_id) >= 2;
select count(*) from likes where student_id = (select id from highschooler where name = 'kyle');
select count(*) from likes where student_id = (select id from highschooler where name = 'kyle');
select avg(h.grade) from highschooler h join friend f on h.id = f.student_id group by h.id having count(distinct f.friend_id) > 0;
select avg(highschooler.grade) from highschooler where highschooler.id in (   select friend.student_id   from friend );
select min(highschooler.grade) from highschooler where highschooler.id not in (   select friend.student_id   from friend );
select min(highschooler.grade) from highschooler where highschooler.id not in (   select friend.student_id   from friend );
select owners.state from owners where owners.state in (   select professionals.state   from professionals ) group by owners.state having count(distinct owners.owner_id) > 0 and count(distinct professionals.professional_id) > 0;
select owners.state from owners where owners.state in (   select professionals.state   from professionals ) group by owners.state having count(distinct owners.owner_id) > 0 and count(distinct professionals.professional_id) > 0;
select avg(dogs.age) from dogs join treatments on dogs.dog_id = treatments.dog_id;
select avg(dogs.age) from dogs join treatments on dogs.dog_id = treatments.dog_id;
select professionals.professional_id, professionals.last_name, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id where professionals.state = 'indiana' or  (select count(*) from treatments where treatments.professional_id = professionals.professional_id) > 2;
select professionals.professional_id, professionals.last_name, professionals.cell_number from professionals join treatments on professionals.professional_id = treatments.professional_id where professionals.state = 'indiana' or  (select count(*) from treatments where treatments.professional_id = professionals.professional_id) > 2;
select dogs.name from dogs join treatments on dogs.dog_id = treatments.dog_id where treatments.cost_of_treatment <= 1000;
select d.name from dogs d join owners o on d.owner_id = o.owner_id join treatments t on d.dog_id = t.dog_id join (     select t.professional_id, sum(t.cost_of_treatment) as total_cost     from treatments t     group by t.professional_id ) sub on t.professional_id = sub.professional_id where sub.total_cost <= 1000;
select distinct first_name from (     select first_name     from owners     union     select first_name     from professionals ) sub where first_name not in (     select name     from dogs );
select distinct first_name from (     select first_name     from owners     union     select first_name     from professionals ) sub where first_name not in (     select name     from dogs );
select p.professional_id, p.role_code, p.email_address from professionals p left join treatments t on p.professional_id = t.professional_id where t.treatment_id is null;
select p.professional_id, p.role_code, p.email_address from professionals p left join treatments t on p.professional_id = t.professional_id where t.treatment_id is null;
select owners.owner_id, owners.first_name, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count(dogs.dog_id) desc limit 1;
select owners.owner_id, owners.first_name, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count(dogs.dog_id) desc limit 1;
select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count(treatments.treatment_id) >= 2;
select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count(treatments.treatment_id) >= 2;
select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_name order by count(dogs.dog_id) desc limit 1;
select breeds.breed_name from dogs join breeds on dogs.breed_code = breeds.breed_code group by breeds.breed_name order by count(*) desc limit 1;
select owners.owner_id, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum(treatments.cost_of_treatment) desc limit 1;
select owners.owner_id, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id join treatments on dogs.dog_id = treatments.dog_id group by owners.owner_id order by sum(treatments.cost_of_treatment) limit 1;
select treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code group by treatment_types.treatment_type_description order by sum(treatments.cost_of_treatment) limit 1;
select treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code group by treatment_types.treatment_type_description order by sum(treatments.cost_of_treatment) limit 1;
select dogs.owner_id, owners.zip_code from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by sum((select charge_amount from charges where charge_type = 'adoption')) + sum((select cost_of_treatment from treatments where treatments.dog_id = dogs.dog_id)) desc limit 1;
select dogs.owner_id, owners.zip_code from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by sum((select charge_amount from charges where charge_type = 'adoption')) + sum((select cost_of_treatment from treatments where treatments.dog_id = dogs.dog_id)) desc limit 1;
select treatments.professional_id, professionals.cell_number from treatments join professionals on treatments.professional_id = professionals.professional_id group by treatments.professional_id having count(distinct treatments.treatment_type_code) >= 2;
select treatments.professional_id, professionals.cell_number from treatments join professionals on treatments.professional_id = professionals.professional_id group by treatments.professional_id having count(distinct treatments.treatment_type_code) >= 2;
select professionals.first_name, professionals.last_name from treatments join professionals on treatments.professional_id = professionals.professional_id where treatments.cost_of_treatment < (select avg(cost_of_treatment) from treatments) group by treatments.professional_id;
select professionals.first_name, professionals.last_name from treatments join professionals on treatments.professional_id = professionals.professional_id where treatments.cost_of_treatment < (select avg(cost_of_treatment) from treatments);
select treatments.date_of_treatment, professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id;
select treatments.date_of_treatment, professionals.first_name from treatments join professionals on treatments.professional_id = professionals.professional_id;
select treatments.cost_of_treatment, treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;
select treatments.cost_of_treatment, treatment_types.treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;
select owners.first_name, owners.last_name, sizes.size_description from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code;
select owners.first_name, owners.last_name, sizes.size_description from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code;
select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id;
select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id;
select dogs.name, treatments.date_of_treatment from dogs join breeds on dogs.breed_code = breeds.breed_code join treatments on dogs.dog_id = treatments.dog_id where breeds.breed_name = (select breed_name from breeds group by breed_name order by count(*) limit 1);
select d.name, t.date_of_treatment from dogs d join treatments t on d.dog_id = t.dog_id where d.breed_code in (     select breed_code     from breeds     where breed_name = 'rarest' );
select o.first_name, d.name from owners o join dogs d on o.owner_id = d.owner_id where o.state = 'virginia';
select o.first_name, d.name from owners o join dogs d on o.owner_id = d.owner_id where o.state = 'virginia';
select d.date_arrived, d.date_departed from dogs d join treatments t on d.dog_id = t.dog_id;
select d.date_arrived, d.date_departed from dogs d join treatments t on d.dog_id = t.dog_id;
select last_name from owners where owner_id = (   select owner_id   from dogs   where age = (     select min(age)     from dogs   ) );
select last_name from owners where owner_id = (   select owner_id   from dogs   where age = (     select min(age)     from dogs   ) );
select email_address from professionals where state = 'hawaii' or state = 'wisconsin';
select email_address from professionals where state = 'hawaii' or state = 'wisconsin';
select date_arrived, date_departed from dogs;
select date_arrived, date_departed from dogs;
select count(distinct dog_id) from treatments;
select count(distinct dog_id) from treatments;
select count(distinct professional_id) from treatments;
select count(distinct professional_id) from treatments;
select role_code, street, city, state from professionals where city like '%west%';
select role_code, street, city, state from professionals where city like '%west%';
select first_name, last_name, email_address from owners where state like '%north%';
select first_name, last_name, email_address from owners where state like '%north%';
select count(*) from dogs where age < (select avg(age) from dogs);
select count(*)  from dogs  where age < (select avg(age) from dogs);
select cost_of_treatment  from treatments  order by date_of_treatment desc  limit 1;
select cost_of_treatment  from treatments  order by date_of_treatment desc  limit 1;
select count(*)  from dogs  where dog_id not in (select dog_id from treatments);
select count(*)  from dogs  where dog_id not in (select dog_id from treatments);
select count(distinct owner_id) from dogs where owner_id not in (     select owner_id     from dogs     where date_departed is null );
select count(distinct owner_id) from owners where owner_id not in (     select owner_id     from dogs     where date_departed is null );
select count(distinct professional_id) from professionals where professional_id not in (     select professional_id     from treatments );
select count(distinct professional_id) from treatments where professional_id not in (     select professional_id     from dogs );
select name, age, weight from dogs where abandoned_yn = 1;
select name, age, weight from dogs where abandoned_yn = 1;
select avg(age) from dogs;
select avg(age) from dogs;
select max(age) from dogs;
select max(age) from dogs;
select charge_type, charge_amount from charges;
select charge_type, charge_amount from charges;
select max(charge_amount) from charges;
select max(charge_amount) from charges;
select email_address, home_phone, cell_number from professionals;
select email_address, home_phone, cell_number from professionals;
select breed_code, size_code from dogs group by breed_code, size_code;
select distinct breed_code, size_code from dogs;
select professionals.first_name, treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;
select professionals.first_name, treatment_types.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code group by professionals.first_name, treatment_types.treatment_type_description;
