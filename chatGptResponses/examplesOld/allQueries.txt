SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT singer_id) FROM singer_in_concert;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT country, COUNT(*) FROM singer GROUP BY country;
SELECT country, COUNT(*) FROM singer GROUP BY country;
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer);
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer);
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;
SELECT MAX(capacity), AVG(capacity) FROM stadium;
SELECT AVG(capacity), MAX(capacity) FROM stadium;
SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);
SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);
SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;
SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;
SELECT stadium.name, COUNT(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name;
SELECT stadium.name, COUNT(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name;
SELECT stadium.name, stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE year >= 2014 GROUP BY stadium.name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.name, stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE year > 2013 GROUP BY stadium.name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year, COUNT(*) FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);
SELECT DISTINCT s1.country FROM singer s1, singer s2 WHERE s1.age > 40 AND s2.age < 30 AND s1.country = s2.country;
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);
SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id;
SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id;
SELECT singer.name, COUNT(concert_id) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name;
SELECT singer.name, COUNT(concert_id) FROM singer_in_concert JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name;
SELECT DISTINCT singer.name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014;
SELECT DISTINCT singer.name FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_id JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE concert.year = 2014;
SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%';
SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%';
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2015);
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2015);
SELECT COUNT(concert_id) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1);
SELECT COUNT(concert_id) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1);
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT MIN(weight) FROM pets WHERE pettype = 'dog';
SELECT MIN(weight) FROM pets WHERE pettype = 'dog';
SELECT MAX(weight), pettype FROM pets GROUP BY pettype;
SELECT MAX(weight), pettype FROM pets GROUP BY pettype;
SELECT COUNT(*) FROM pets JOIN student ON pets.stuid = student.stuid WHERE student.age > 20;
SELECT COUNT(*) FROM pets JOIN student ON pets.stuid = student.stuid WHERE student.age > 20;
SELECT COUNT(*) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype = 'dog' AND student.sex = 'F';
SELECT COUNT(*) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname;
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname;
SELECT student.fname FROM student JOIN has_pet ON student.stuid
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.stuid FROM student WHERE student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.stuid FROM student WHERE student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (SELECT student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat');
SELECT pets.pettype, pets.weight FROM pets WHERE pets.pet_age = (SELECT MIN(pet_age) FROM pets);
SELECT pets.pettype, pets.weight FROM pets WHERE pets.pet_age = (SELECT MIN(pet_age) FROM pets);
SELECT has_pet.stuid, pets.weight FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age > 1;
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight) FROM pets GROUP BY pets.pettype;
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid;
SELECT DISTINCT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid;
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith';
SELECT has_pet.petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith';
SELECT COUNT(has_pet.petid), has_pet.stuid FROM has_pet GROUP BY has_pet.stuid;
SELECT COUNT(has_pet.petid), has_pet.stuid FROM has_pet GROUP BY has_pet.stuid;
SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT(has_pet.petid) > 1;
SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT(has_pet.petid) > 1;
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT AVG(student.age) FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet);
SELECT AVG(student.age) FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet);
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT continents.contid, continents.continent, COUNT(countries.countryid) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid;
SELECT continents.contid, continents.continent, COUNT(countries.countryid) FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid;
SELECT COUNT(countries.countryid) FROM countries;
SELECT COUNT(DISTINCT countries.countryname) FROM countries;
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.horsepower = (SELECT MIN(cars_data.horsepower) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.horsepower = (SELECT MIN(cars_data.horsepower) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < (SELECT AVG(cars_data.weight) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < (SELECT AVG(cars_data.weight) FROM cars_data);
SELECT DISTINCT car_makers.fullname FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970;
SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970;
SELECT car_names.make, MIN(cars_data.year) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id;
SELECT car_names.make, MIN(cars_data.year) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id;
SELECT DISTINCT car_names.make FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980;
SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.year > 1980;
SELECT continents.continent, COUNT(DISTINCT car_makers.id) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent;
SELECT continents.continent, COUNT(DISTINCT car_makers.id) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT(car_makers.id) DESC LIMIT 1;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid ORDER BY COUNT(car_makers.id) DESC LIMIT 1;
SELECT COUNT(model_list.modelid), car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car
SELECT COUNT(model_list.modelid) AS num_models, car_makers.id, car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet sportabout (sw)';
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet sportabout (sw)';
SELECT COUNT(car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France';
SELECT COUNT(car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France';
SELECT COUNT(model_list.modelid) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'usa';
SELECT COUNT(model_list.modelid) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States';
SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;
SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;
SELECT MIN(cars_data.weight) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974;
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT DISTINCT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country;
SELECT DISTINCT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country;
SELECT COUNT(*) FROM cars_data WHERE cars_data.horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE cars_data.horsepower > 150;
SELECT AVG(cars_data.weight), cars_data.year FROM cars_data GROUP BY cars_data.year;
SELECT AVG(cars_data.weight), cars_data.year FROM cars_data GROUP BY cars_data.year;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.id) >= 3;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.id) >= 3;
SELECT MAX(cars_data.horsepower), car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid WHERE cars_data.cylinders = 3;
SELECT MAX(cars_data.horsepower), car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid WHERE cars_data.cylinders = 3;
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT car_names.model FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT AVG(cars_data.horsepower) FROM cars_data WHERE cars_data.year < 1980;
SELECT AVG(cars_data.horsepower) FROM cars_data WHERE cars_data.year < 1980;
SELECT AVG(cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid JOIN car_makers ON car_names.makeid = car_makers.id WHERE car_makers.maker = 'volvo';
SELECT AVG(cars_data.edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.modelid JOIN car_makers ON car_names.makeid = car_makers.id WHERE car_makers.maker = 'volvo';
SELECT MAX(cars_data.accelerate), cars_data.cylinders FROM cars_data GROUP BY cars_data.cylinders;
SELECT MAX(cars_data.accelerate), cars_data.cylinders FROM cars_data GROUP BY cars_data.cylinders;
SELECT car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.modelid GROUP BY car_makers.fullname ORDER BY COUNT(DISTINCT car_names.make) DESC LIMIT 1;
SELECT car_names.model FROM car_names JOIN model_list ON car_names.modelid = model_list.modelid GROUP BY car_names.model ORDER BY COUNT(DISTINCT car_names.make) DESC LIMIT 1;
SELECT COUNT(*) FROM cars_data WHERE cars_data.cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE cars_data.cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE cars_data.year = 1980;
SELECT COUNT(*) FROM cars_data WHERE cars_data.year = 1980;
SELECT COUNT(DISTINCT car_names.model) FROM car_names JOIN car_makers ON car_names.make = car_makers.id WHERE car_makers.fullname = 'American Motors Corporation';
SELECT COUNT(DISTINCT car_names.model) FROM car_names JOIN car_makers ON car_names.make = car_makers.id WHERE car_makers.fullname = 'American Motors Corporation';
SELECT car_makers.fullname, car_makers.id FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid GROUP BY car_makers.id HAVING COUNT(DISTINCT car_names.model) > 3;
SELECT car_makers.fullname, COUNT(DISTINCT model_list.modelid) AS num_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname HAVING num_models > 3;
SELECT DISTINCT car_names.make FROM car_names JOIN model_list ON car_names.makeid = model_list.makeid JOIN cars_data ON model_list.modelid = cars_data.id WHERE car_names.makeid IN (SELECT car_makers.id FROM car_makers WHERE car_makers.fullname = 'General Motors') OR cars_data.weight > 3500;
SELECT DISTINCT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE model_list.makeid IN (SELECT car_makers.id FROM car_makers WHERE car_makers.fullname = 'General Motors') OR cars_data.weight > 3500;
SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000;
SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight < 4000 INTERSECT SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight > 3000;
SELECT cars_data.horsepower FROM cars_data ORDER BY cars_data.accelerate DESC LIMIT 1;
SELECT cars_data.horsepower FROM cars_data ORDER BY cars_data.accelerate DESC LIMIT 1;
SELECT MIN(cars_data.cylinders) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'volvo' ORDER BY cars_data.accelerate ASC LIMIT 1;
SELECT MIN(cars_data.cylinders) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'volvo' ORDER BY cars_data.accelerate ASC LIMIT 1;
SELECT COUNT(*) FROM cars_data WHERE cars_data.accelerate > (SELECT
SELECT COUNT(*) FROM cars_data WHERE cars_data.accelerate > (SELECT MAX(cars_data.horsepower) FROM cars_data);
SELECT COUNT(DISTINCT car_makers.country) FROM car_makers GROUP BY car_makers.country HAVING COUNT(*) > 2;
SELECT COUNT(DISTINCT car_makers.country) FROM car_makers GROUP BY car_makers.country HAVING COUNT(*) > 2;
SELECT COUNT(*) FROM cars_data WHERE cars_data.cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE cars_data.cylinders > 6;
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1;
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.cylinders = 4 AND cars_data.horsepower = (SELECT MAX(cars_data.horsepower) FROM cars_data WHERE cars_data.cylinders = 4);
SELECT car_names.makeid, car_names.make FROM car_names JOIN model_list ON car_names.makeid = model_list.makeid JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.cylinders <= 3 AND cars_data.horsepower > (SELECT MIN(cars_data.horsepower) FROM cars_data);
SELECT car_names.makeid, car_names.make FROM car_names JOIN model_list ON car_names.makeid = model_list.makeid JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.cylinders < 4 AND cars_data.horsepower > (SELECT MIN(cars_data.horsepower) FROM cars_data);
SELECT MAX(cars_data.mpg) FROM cars_data WHERE (cars_data.cylinders = 8 OR cars_data.year < 1980);
SELECT MAX(cars_data.mpg) FROM cars_data WHERE cars_data.cylinders = 8 OR cars_data.year < 1980;
SELECT DISTINCT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < 3500 AND car_names.make != 'Ford Motor Company';
SELECT DISTINCT car_names.model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < 3500 AND car_names.make != 'Ford Motor Company';
SELECT DISTINCT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.id IS NULL;
SELECT DISTINCT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.id IS NULL;
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.makeid GROUP BY car_makers.id HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.id) > 3;
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.makeid GROUP BY car_makers.id HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.id) > 3;
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryid IN (SELECT car_makers.country FROM car_makers WHERE car_makers.maker = 'fiat') OR countries.countryid IN (SELECT car_makers.country FROM car_makers GROUP BY car_makers.country HAVING COUNT(DISTINCT car_makers.id) > 3);
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryid IN (SELECT car_makers.country FROM car_makers WHERE car_makers.maker = 'fiat') OR countries.countryid IN (SELECT car_makers.country FROM car_makers GROUP BY car_makers.country HAVING COUNT(DISTINCT car_makers.id) > 3);
SELECT airlines.country FROM airlines WHERE airlines.airline = 'JetBlue Airways';
SELECT airlines.country FROM airlines WHERE airlines.airline = 'JetBlue Airways';
SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'JetBlue Airways';
SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'JetBlue Airways';
SELECT airlines.airline, airlines.abbreviation FROM airlines WHERE airlines.country = 'USA';
SELECT airlines.airline, airlines.abbreviation FROM airlines WHERE airlines.country = 'USA';
SELECT airports.airportcode, airports.airportname FROM airports WHERE airports.city = 'Anthony';
SELECT airports.airportcode, airports.airportname FROM airports WHERE airports.city = 'Anthony';
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT COUNT(*) FROM airlines WHERE airlines.country = 'USA';
SELECT COUNT(*) FROM airlines WHERE airlines.country = 'USA';
SELECT airports.city, airports.country FROM airports WHERE airports.airportcode = 'Alton';
SELECT airports.city, airports.country FROM airports WHERE airports.airportcode = 'Alton';
SELECT airports.airportname FROM airports WHERE airports.airportcode = 'AKO';
SELECT airports.airportname FROM airports WHERE airports.airportcode = 'AKO';
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen';
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE flights.sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE flights.sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE destairport = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE destairport = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley';
SELECT COUNT(*) FROM flights WHERE airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airline = 'United Airlines' AND airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airline = 'United Airlines' AND airports.city = 'Aberdeen';
SELECT airports.city, COUNT(*) AS num_arrivals FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY num_arrivals DESC LIMIT 1;
SELECT airports.city, COUNT(*) AS num_destinations FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY num_destinations DESC LIMIT 1;
SELECT airports.city, COUNT(*) AS num_departures FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY num_departures DESC LIMIT 1;
SELECT airports.city, COUNT(*) AS num_sources FROM flights JOIN airports ON flights.sourceairport
SELECT destairport, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights DESC LIMIT 1;
SELECT destairport, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights DESC LIMIT 1;
SELECT destairport, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights ASC LIMIT 1;
SELECT destairport, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights ASC LIMIT 1;
SELECT airline, COUNT(*) AS num_flights FROM flights GROUP BY airline ORDER BY num_flights DESC LIMIT 1;
SELECT airline, COUNT(*) AS num_flights FROM flights GROUP BY airline ORDER BY num_flights DESC LIMIT 1;
SELECT abbreviation, country FROM airlines WHERE uid = (SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) ASC LIMIT 1);
SELECT abbreviation, country FROM airlines WHERE uid = (SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) ASC LIMIT 1);
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'AHD';
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'AHD';
SELECT DISTINCT airline FROM flights WHERE destairport = 'AHD';
SELECT DISTINCT airline FROM flights WHERE destairport = 'AHD';
SELECT airline FROM flights WHERE sourceairport = 'APG' OR sourceairport = 'CVO' GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2;
SELECT airline FROM flights WHERE sourceairport = 'APG' OR sourceairport = 'CVO' GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2;
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND airline NOT IN (SELECT airline FROM flights WHERE sourceairport = 'APG');
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND airline NOT IN (SELECT airline FROM flights WHERE sourceairport = 'APG');
SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) >= 10;
SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) >= 10;
SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200;
SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200;
SELECT flightno FROM flights WHERE airline = 'United Airlines';
SELECT flightno FROM flights WHERE airline = 'United Airlines';
SELECT flightno FROM flights WHERE sourceairport = 'APG';
SELECT flightno FROM flights WHERE sourceairport = 'APG';
SELECT flightno FROM flights WHERE destairport = 'APG';
SELECT flightno FROM flights WHERE destairport = 'APG';
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen');
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen');
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen');
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen' OR city = 'Abilene');
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen' OR city = 'Abilene');
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT DISTINCT sourceairport FROM flights UNION SELECT DISTINCT destairport FROM flights);
SELECT airportname FROM airports WHERE airportcode NOT IN (SELECT DISTINCT sourceairport FROM flights UNION SELECT DISTINCT destairport FROM flights);
SELECT COUNT(*) FROM employee;
SELECT COUNT(*) FROM employee;
SELECT name FROM employee ORDER BY age ASC;
SELECT name, age FROM employee ORDER BY age ASC;
SELECT COUNT(*), city FROM employee GROUP BY city;
SELECT COUNT(*) AS num_employees, city FROM employee GROUP BY city;
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1;
SELECT COUNT(*) AS num_shops, location FROM shop GROUP BY location;
SELECT COUNT(*) AS num_shops, location FROM shop GROUP BY location;
SELECT manager_name, district FROM
SELECT shop.manager_name, shop.district FROM shop WHERE shop.number_products = (SELECT MAX(number_products) FROM shop);
SELECT MIN(number_products), MAX(number_products) FROM shop;
SELECT MIN(number_products), MAX(number_products) FROM shop;
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC;
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC;
SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id GROUP BY evaluation.employee_id ORDER BY SUM(evaluation.bonus) DESC LIMIT 1;
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id GROUP BY evaluation.employee_id ORDER BY SUM(evaluation.bonus) DESC LIMIT 1;
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id ORDER BY evaluation.bonus DESC LIMIT 1;
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id ORDER BY evaluation.bonus DESC LIMIT 1;
SELECT employee.name FROM evaluation JOIN employee ON evaluation.employee_id = employee.employee_id WHERE evaluation.year_awarded IS NULL;
SELECT employee.name FROM employee LEFT JOIN hiring ON employee.employee_id = hiring.employee_id WHERE hiring.employee_id IS NULL;
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id ORDER BY COUNT(hiring.employee_id) DESC LIMIT 1;
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id ORDER BY COUNT(hiring.employee_id) DESC LIMIT 1;
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL;
SELECT shop.name FROM shop WHERE shop.shop_id NOT IN (SELECT DISTINCT hiring.shop_id FROM hiring);
SELECT COUNT(hiring.employee_id), shop.name FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY hiring.shop_id;
SELECT COUNT(hiring.employee_id), shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id;
SELECT SUM(evaluation.bonus) FROM evaluation;
SELECT SUM(bonus) FROM evaluation;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT district FROM shop WHERE number_products < 3000 INTERSECT SELECT district FROM shop WHERE number_products > 10000;
SELECT district FROM shop WHERE number_products < 3000 INTERSECT SELECT district FROM shop WHERE number_products > 10000;
SELECT COUNT(DISTINCT shop.location) FROM shop;
SELECT COUNT(DISTINCT shop.location) FROM shop;
SELECT COUNT(document_id) FROM documents;
SELECT COUNT(document_id) FROM documents;
SELECT document_id, document_name, document_description FROM documents;
SELECT document_id, document_name, document_description FROM documents;
SELECT document_name, template_id FROM documents WHERE document_description LIKE '%w%';
SELECT document_name, template_id FROM documents WHERE document_description LIKE '%w%';
SELECT document_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV';
SELECT document_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV';
SELECT COUNT(DISTINCT template_id) FROM documents;
SELECT COUNT(DISTINCT template_id) FROM documents;
SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT');
SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT');
SELECT template_id, COUNT(*) FROM documents GROUP BY template_id;
SELECT template_id, COUNT(*) FROM documents GROUP BY template_id;
SELECT template_id, template_type_code FROM templates WHERE template_id = (SELECT template_id FROM documents GROUP BY template_id ORDER BY COUNT(*) DESC LIMIT 1);
SELECT template_id, template_type_code FROM templates WHERE template_id = (SELECT template_id FROM documents GROUP BY template_id ORDER BY COUNT(*) DESC LIMIT 1);
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(*) > 1;
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(*) > 1;
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents);
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents);
SELECT COUNT(DISTINCT template_id) FROM templates;
SELECT COUNT(DISTINCT template_id) FROM templates;
SELECT template_id, version_number, template_type_code FROM templates;
SELECT template_id, version_number, template_type_code FROM templates;
SELECT DISTINCT template_type_code FROM templates;
SELECT DISTINCT template_type_code FROM templates;
SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT');
SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT');
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT version_number, template_type_code FROM templates WHERE version_number > 5;
SELECT version_number, template_type_code FROM templates WHERE version_number > 5;
SELECT template_type_code, COUNT(*) FROM templates GROUP BY template_type_code;
SELECT template_type_code, COUNT(*) FROM templates GROUP BY template_type_code;
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 3;
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 3;
SELECT MIN(version_number), template_type_code FROM templates;
SELECT MIN(version_number), template_type_code FROM templates;
SELECT template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_name = 'Data base';
SELECT template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_name = 'Data base';
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK';
SELECT documents.document_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'BK';
SELECT template_type_code, COUNT(DISTINCT documents.document_id) FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY template_type_code;
SELECT template_type_code, COUNT(DISTINCT documents.document_id) FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY template_type_code;
SELECT template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY template_type_code ORDER BY COUNT(DISTINCT documents.document_id) DESC LIMIT 1;
SELECT template_type_code FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY template_type_code ORDER BY COUNT(DISTINCT documents.document_id) DESC LIMIT 1;
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (SELECT template_type_code FROM documents);
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (SELECT template_type_code FROM documents);
SELECT template_type_code, template_type_description FROM ref_template_types;
SELECT template_type_code, template_type_description FROM ref_template_types;
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD';
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD';
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';
SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id;
SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types JOIN templates
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation';
SELECT template_id FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation';
SELECT COUNT(*) FROM paragraphs;
SELECT COUNT(*) FROM paragraphs;
SELECT COUNT(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show';
SELECT COUNT(*) FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show';
SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea %';
SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea %';
SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Welcome to NY';
SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Welcome to NY';
SELECT paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Customer reviews';
SELECT paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Customer reviews';
SELECT documents.document_id, COUNT(paragraphs.paragraph_id) FROM documents LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id;
SELECT documents.document_id, COUNT(paragraphs.paragraph_id) FROM documents LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) FROM documents LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id;
SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id, documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) DESC LIMIT 1;
SELECT documents.document_id, documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) DESC LIMIT 1;
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) LIMIT 1;
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) LIMIT 1;
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT DISTINCT p1.document_id FROM paragraphs p1 JOIN paragraphs p2 ON p1.document_id = p2.document_id WHERE p1.paragraph_text = 'Brazil' AND p2.paragraph_text = 'Ireland';
SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id WHERE paragraph_text LIKE '%Brazil%' AND paragraph_text LIKE '%Ireland%';
SELECT COUNT(DISTINCT teacher_id) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT name FROM teacher ORDER BY age ASC;
SELECT name FROM teacher ORDER BY age ASC;
SELECT age, hometown FROM teacher;
SELECT age, hometown FROM teacher;
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';
SELECT name FROM teacher WHERE age IN (32, 33);
SELECT name FROM teacher WHERE age IN (32, 33);
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1;
SELECT hometown FROM teacher ORDER BY age ASC LIMIT 1;
SELECT hometown, COUNT(*) FROM teacher GROUP BY hometown;
SELECT hometown, COUNT(*) FROM teacher GROUP BY hometown;
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT 1;
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT 1;
SELECT t1.hometown FROM teacher t1 JOIN teacher t2 ON t1.teacher_id < t2.teacher_id AND t1.hometown = t2.hometown;
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(*) >= 2;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math';
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math';
SELECT teacher.name, COUNT(course_arrange.course_id) FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name;
SELECT teacher.name, COUNT(course_arrange.course_id) FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name FROM teacher
SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange);
SELECT COUNT(*) FROM visitor WHERE age < 30;
SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC;
SELECT AVG(age) FROM visitor WHERE level_of_membership <= 4;
SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age DESC;
SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum);
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009;
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum';
SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2010);
SELECT visitor.id, visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id HAVING COUNT(DISTINCT visit.museum_id) > 1;
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.total_spent) DESC LIMIT 1;
SELECT visit.museum_id, museum.name FROM visit JOIN museum ON visit.museum_id = museum.museum_id GROUP BY visit.museum_id ORDER BY COUNT(visit.visitor_id) DESC LIMIT 1;
SELECT museum.name FROM museum LEFT JOIN visit ON museum.museum_id = visit.museum_id WHERE visit.visitor_id IS NULL;
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.num_of_ticket ORDER BY visit.num_of_ticket DESC LIMIT 1;
SELECT AVG(visit.num_of_ticket), MAX(visit.num_of_ticket) FROM visit;
SELECT SUM(total_spent) FROM visit JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1;
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.id HAVING COUNT(DISTINCT museum.open_year) = 2;
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2010 OR museum.open_year IS NULL;
SELECT COUNT(DISTINCT museum.museum_id) FROM museum WHERE museum.open_year > 2013 OR museum.open_year < 2008;
SELECT COUNT(DISTINCT player_id) FROM players;
SELECT COUNT(DISTINCT player_id) FROM players;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) FROM matches;
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT AVG(loser_age), AVG(winner_age) FROM matches;
SELECT AVG(loser_age), AVG(winner_age) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT AVG(winner_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT MAX(loser_rank) FROM matches;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2;
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2;
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' AND EXISTS (SELECT * FROM matches WHERE matches.tourney_name = 'Australian Open' AND matches.winner_id = players.player_id);
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' AND EXISTS (SELECT * FROM matches WHERE matches.tourney_name = 'Australian Open' AND matches.winner_id = players.player_id);
SELECT players.first_name, players.country_code FROM players WHERE players.birth_date = (SELECT MIN(birth_date) FROM players);
SELECT players.first_name,
SELECT first_name, last_name FROM players ORDER BY birth_date;
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT players.country_code, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(tours) DESC LIMIT 1;
SELECT players.country_code, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(tours) DESC LIMIT 1;
SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT winner_name, winner_rank_points FROM matches WHERE winner_name = (SELECT winner_name FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY winner_rank_points DESC LIMIT 1;
SELECT winner_name, winner_rank_points FROM matches WHERE winner_name = (SELECT winner_name FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY winner_rank_points DESC LIMIT 1;
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1;
SELECT loser_name, winner_name FROM matches ORDER BY minutes DESC LIMIT 1;
SELECT loser_name, winner_name FROM matches ORDER BY minutes DESC LIMIT 1;
SELECT AVG(rankings.ranking) AS avg_ranking, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP
SELECT players.first_name, AVG(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT COUNT(*), country_code FROM players GROUP BY country_code;
SELECT COUNT(*), country_code FROM players GROUP BY country_code;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date;
SELECT year, COUNT(*) FROM matches GROUP BY year;
SELECT year, COUNT(*) FROM matches GROUP BY year;
SELECT winner_name, winner_rank, winner_age FROM matches ORDER BY winner_age ASC LIMIT 3;
SELECT winner_name, winner_rank, winner_age FROM matches ORDER BY winner_age ASC LIMIT 3;
SELECT COUNT(DISTINCT winner_name) FROM matches WHERE tourney_level = 'WTA Championships' AND winner_hand = 'L';
SELECT COUNT(DISTINCT winner_name) FROM matches WHERE tourney_level = 'WTA Championships' AND winner_hand = 'L';
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT player_id FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches) LIMIT 1);
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT player_id FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches) LIMIT 1);
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, date, result FROM battle;
SELECT MAX(killed), MIN(killed) FROM death;
SELECT AVG(injured) FROM death;
SELECT killed, injured FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE tonnage = 't');
SELECT id, name, result FROM battle WHERE bulgarian_commander != 'Boril';
SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.ship_type = 'Brig';
SELECT id, name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) > 10);
