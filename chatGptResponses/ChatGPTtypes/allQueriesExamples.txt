select count(*) from singer;
select count(distinct singer_id) from singer_in_concert;
select name, country, age from singer order by age desc;
select name, country, age from singer where country = 'france' order by age desc;
select avg(age), min(age), max(age) from singer where country = 'france';
select avg(age), min(age), max(age) from singer where country = 'french';
select song_name, song_release_year from singer where age = (select min(age) from singer);
select song_name, song_release_year from singer where age = (select min(age) from singer);
select distinct country from singer where age > 20;
select distinct country from singer where age > 20;
select singer.country, count(singer.singer_id) from singer group by singer.country;
select singer.song_name from singer where singer.age > (select avg(singer.age) from singer);
select stadium.location, stadium.name from stadium where stadium.capacity between 5000 and 10000;
select singer.song_name from singer where singer.age > (select avg(singer.age) from singer);
select *;
select location, name  from stadium  where capacity between 5000 and 10000;
select max(capacity), avg(capacity)  from stadium;
select avg(capacity), max(capacity)  from stadium;
select name, capacity  from stadium  where average = (select max(average) from stadium);
select name, capacity  from stadium  where average = (select max(average) from stadium);
select count(*)  from concert  where year = '2014' or year = '2015';
select count(*)  from concert  where year >= '2014';
select stadium.name, count(concert.concert_id)  from stadium  join concert on stadium.stadium_id = concert.stadium_id  group by stadium.name;
select stadium.name, count(concert.concert_id)  from stadium  left join concert on stadium.stadium_id = concert.stadium_id  group by stadium.name;
select stadium.name, stadium.capacity  from stadium  join concert on stadium.stadium_id = concert.stadium_id  where concert.year >= '2014'  group by stadium.name  order by count(concert.concert_id) desc  limit 1;
select name, capacity from stadium where stadium_id = (   select stadium_id   from concert   where year > 2013   group by stadium_id   order by count(*) desc   limit 1 );
select year from concert group by year order by count(*) desc limit 1;
select year from concert group by year order by count(*) desc limit 1;
select name from stadium where stadium_id not in (   select distinct stadium_id   from concert );
select name from stadium where stadium_id not in (   select distinct stadium_id   from concert );
select distinct s1.country from singer s1, singer s2, concert c, singer_in_concert sic1, singer_in_concert sic2 where s1.age > 40 and s2.age < 30 and s1.singer_id = sic1.singer_id and s2.singer_id = sic2.singer_id and sic1.concert_id = c.concert_id and sic2.concert_id = c.concert_id and s1.country = s2.country;
select distinct s.name from stadium s where s.stadium_id not in (     select distinct c.stadium_id     from concert c     where c.year = 2014 );
select distinct s.name from stadium s where s.stadium_id not in (     select distinct c.stadium_id     from concert c     where c.year = 2014 );
select c.concert_name, c.theme, count(sic.singer_id) from concert c, singer_in_concert sic where c.concert_id = sic.concert_id group by c.concert_id;
select c.concert_name, c.theme, count(sic.singer_id) from concert c, singer_in_concert sic where c.concert_id = sic.concert_id group by c.concert_id;
select singer.name, count(concert.concert_id)  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on concert.concert_id = singer_in_concert.concert_id  group by singer.name  order by count(concert.concert_id) desc;
select singer.name, count(concert.concert_id)  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on concert.concert_id = singer_in_concert.concert_id  group by singer.name  order by singer.name asc;
select singer.name  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on concert.concert_id = singer_in_concert.concert_id  where concert.year = '2014';
select distinct singer.name  from singer  join singer_in_concert on singer.singer_id = singer_in_concert.singer_id  join concert on concert.concert_id = singer_in_concert.concert_id  where concert.year = '2014';
select singer.name, singer.country  from singer  where singer.song_name like '%hey%';
select singer.name, singer.country from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on singer_in_concert.concert_id = concert.concert_id where song_name like '%hey%';
select stadium.name, stadium.location from stadium join concert on stadium.stadium_id = concert.stadium_id where year = '2014' and stadium.stadium_id in (     select stadium_id     from concert     where year = '2015' );
select stadium.name, stadium.location from stadium join concert on stadium.stadium_id = concert.stadium_id where year = '2014' and stadium.stadium_id in (     select stadium_id     from concert     where year = '2015' );
select count(*) from concert where stadium_id = (     select stadium_id     from stadium     order by capacity desc     limit 1 );
select count(*) from concert where stadium_id = (     select stadium_id     from stadium     order by capacity desc     limit 1 );
select count(*)  from pets  where weight > 10;
select count(*)  from pets  where weight > 10;
select min(weight)  from pets  where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog');
select min(weight)  from pets  where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog');
select max(weight), pettype  from pets  group by pettype;
select max(weight), pettype from pets group by pettype;
select count(petid) from has_pet join student on has_pet.stuid = student.stuid where age > 20;
select count(petid) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where age > 20;
select count(petid) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where pettype = 'dog' and sex = 'f';
select count(petid) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where pettype = 'dog' and sex = 'f';
select count(distinct pettype) from pets;
select count(distinct pettype) from pets;
select fname from student where stuid in (select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype in ('cat', 'dog'));
select distinct fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pettype in ('cat', 'dog');
select fname from student where stuid in (select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype = 'cat') and stuid in (select stuid from has_pet join pets on has_pet.petid = pets.petid where pettype = 'dog');
select student.fname  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat' and student.stuid in      (select student.stuid       from student       join has_pet on student.stuid = has_pet.stuid       join pets on has_pet.petid = pets.petid       where pets.pettype = 'dog');
select student.major, student.age  from student  where student.stuid not in      (select has_pet.stuid       from has_pet       join pets on has_pet.petid = pets.petid       where pets.pettype = 'cat');
select student.major, student.age  from student  where student.stuid not in      (select has_pet.stuid       from has_pet       join pets on has_pet.petid = pets.petid       where pets.pettype = 'cat') group by student.major, student.age;
select student.stuid  from student  where student.stuid not in      (select has_pet.stuid       from has_pet       join pets on has_pet.petid = pets.petid       where pets.pettype = 'cat');
select student.stuid  from student  where student.stuid not in      (select has_pet.stuid       from has_pet       join pets on has_pet.petid = pets.petid       where pets.pettype = 'cat');
select s.fname, s.age from student s join has_pet hp on s.stuid = hp.stuid join pets p on hp.petid = p.petid where p.pettype = 'dog' and s.stuid not in (   select s.stuid   from student s   join has_pet hp on s.stuid = hp.stuid   join pets p on hp.petid = p.petid   where p.pettype = 'cat' );
select distinct s.fname from student s join has_pet hp on s.stuid = hp.stuid join pets p on hp.petid = p.petid where p.pettype = 'dog' and s.stuid not in (   select s.stuid   from student s   join has_pet hp on s.stuid = hp.stuid   join pets p on hp.petid = p.petid   where p.pettype = 'cat' );
select p.pettype, p.weight from pets p where p.pet_age = (   select min(pet_age)   from pets );
select p.pettype, p.weight from pets p where p.pet_age = (   select min(pet_age)   from pets );
select p.petid, p.weight from pets p where p.pet_age > 1;
select pets.petid, pets.weight from pets where pets.pet_age > 1;
select pets.pettype, avg(pets.pet_age), max(pets.pet_age) from pets group by pets.pettype;
select pets.pettype, avg(pets.pet_age), max(pets.pet_age) from pets group by pets.pettype;
select pets.pettype, avg(pets.weight) from pets group by pets.pettype;
select pets.pettype, avg(pets.weight) from pets group by pets.pettype;
select student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid;
select distinct student.fname, student.age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid;
select has_pet.petid from student join has_pet on student.stuid = has_pet.stuid where student.lname = 'smith';
select pets.petid from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where student.lname = 'smith';
select count(pets.petid), student.stuid from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid group by student.stuid;
select has_pet.stuid, count(pets.petid)  from has_pet  join pets on has_pet.petid = pets.petid  group by has_pet.stuid  having count(pets.petid) > 0;
select student.fname, student.sex  from student  join has_pet on student.stuid = has_pet.stuid  group by student.stuid  having count(has_pet.petid) > 1;
select student.fname, student.sex  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat'  group by student.stuid  having count(pets.petid) > 1;
select student.lname  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat' and pets.pet_age = 3;
select student.lname  from student  join has_pet on student.stuid = has_pet.stuid  join pets on has_pet.petid = pets.petid  where pets.pettype = 'cat' and pets.pet_age = 3;
select avg(age)  from student  where stuid not in (select stuid from has_pet);
select avg(age)  from student  where stuid not in (select stuid from has_pet);
select count(*)  from continents;
select count(*)  from continents;
select c.contid, c.continent, count(*)  from countries as co  join continents as c on co.continent = c.contid  group by c.contid, c.continent;
select continents.contid, continents.continent, count(countries.countryid) from continents join countries on continents.contid = countries.continent group by continents.contid;
select count(countryid) from countries;
select count(distinct countryid) from countries;
select car_makers.fullname, car_makers.id, count(model_list.modelid) from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id;
select car_makers.fullname, car_makers.id, count(model_list.modelid) from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id;
select maker  from car_makers  join model_list on car_makers.id = model_list.maker  join cars_data on model_list.modelid = cars_data.id  where horsepower = (select min(horsepower) from cars_data);
select model  from car_names  join cars_data on car_names.makeid = cars_data.id  where horsepower = (select min(horsepower) from cars_data);
select model  from car_names  join cars_data on car_names.makeid = cars_data.id  where weight < (select avg(weight) from cars_data);
select model  from car_names  join cars_data on car_names.makeid = cars_data.id  where weight < (select avg(weight) from cars_data);
select distinct maker  from car_makers  join model_list on car_makers.id = model_list.maker  join cars_data on model_list.modelid = cars_data.id  where year = 1970;
select distinct car_makers.maker  from car_makers  join cars_data on car_makers.id = cars_data.id  where cars_data.year = 1970;
select car_names.make, min(cars_data.year)  from car_names  join cars_data on car_names.makeid = cars_data.id  group by car_names.make  order by cars_data.year asc  limit 1;
select car_names.make || ' ' || model_list.model, min(cars_data.year)  from car_names  join model_list on car_names.modelid = model_list.modelid  join cars_data on model_list.modelid = cars_data.id  group by car_names.make, model_list.model  order by cars_data.year asc  limit 1;
select distinct car_names.make  from car_names  join model_list on car_names.modelid = model_list.modelid  join cars_data on model_list.modelid = cars_data.id  where cars_data.year > 1980;
select distinct model_list.model  from car_names  join model_list on car_names.modelid = model_list.modelid  join cars_data on model_list.modelid = cars_data.id  where cars_data.year > 1980  and car_names.make = 'plymouth';
select continents.continent, count(distinct car_makers.id)  from continents  join countries on continents.contid = countries.continent  join car_makers on countries.countryid = car_makers.country  group by continents.continent;
select continents.continent, count(distinct car_makers.id)  from continents  join countries on continents.contid = countries.continent  join car_makers on countries.countryid = car_makers.country  group by continents.continent;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryname  order by count(distinct car_makers.id) desc  limit 1;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryname  order by count(distinct car_makers.id) desc  limit 1;
select count(distinct model_list.modelid), car_makers.fullname  from car_makers  join model_list on car_makers.id = model_list.maker  group by car_makers.fullname;
select count(model_list.model) as num_models, car_makers.id, car_makers.fullname from car_makers join model_list on car_makers.id = model_list.maker group by car_makers.id order by car_makers.id;
select cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid where car_names.model = 'amc hornet sportabout (sw)';
select cars_data.accelerate from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id where car_makers.fullname = 'amc' and car_names.make = 'hornet sportabout (sw)';
select count(car_makers.id) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france';
select count(distinct car_makers.id) from car_makers join countries on car_makers.country = countries.countryid where countries.countryname = 'france';
select count(distinct model_list.model)  from model_list  join car_makers on model_list.maker = car_makers.id  where car_makers.country = 'usa';
select count(distinct model_list.model)  from model_list  join car_makers on model_list.maker = car_makers.id  join countries on car_makers.country = countries.countryid  where countries.countryname = 'united states';
select avg(cars_data.mpg)  from cars_data  where cars_data.cylinders = 4;
select avg(cars_data.mpg)  from cars_data  where cars_data.cylinders = 4;
select min(cars_data.weight)  from cars_data  join model_list on cars_data.id = model_list.modelid  where cars_data.cylinders = 8 and cars_data.year = 1974;
select min(weight)  from cars_data  where cylinders = 8 and year = 1974;
select maker, model  from car_names  join model_list on car_names.modelid = model_list.modelid  join car_makers on model_list.maker = car_makers.id;
select car_makers.id, car_names.model  from car_names  join model_list on car_names.modelid = model_list.modelid  join car_makers on model_list.maker = car_makers.id;
select countries.countryname, countries.countryid  from countries  join car_makers on countries.countryname = car_makers.country  group by countries.countryname;
select distinct countries.countryname, countries.countryid  from countries  join car_makers on countries.countryname = car_makers.country;
select count(*)  from cars_data  where cast(horsepower as integer) > 150;
select count(*)  from cars_data  where cast(horsepower as integer) > 150;
select avg(weight), year  from cars_data  group by year;
select avg(weight), year  from cars_data  group by year;
select countries.countryname  from countries  join car_makers on countries.countryid = car_makers.country  where countries.continent = 'europe'  group by countries.countryname  having count(distinct car_makers.id) >= 3;
select countries.countryname from countries join car_makers on countries.countryname = car_makers.country group by countries.countryname having count(distinct car_makers.id) >= 3 and countries.continent = 'europe';
select max(cars_data.horsepower), car_names.make from cars_data join car_names on cars_data.makeid = car_names.makeid join model_list on car_names.model = model_list.model where cars_data.cylinders = 3;
select max(cars_data.horsepower), car_names.make from cars_data join car_names on cars_data.makeid = car_names.makeid join model_list on car_names.model = model_list.model where cars_data.cylinders = 3;
select car_names.make from car_names join cars_data on car_names.makeid = cars_data.makeid where cars_data.mpg = (select max(mpg) from cars_data);
select car_names.model from car_names join cars_data on car_names.makeid = cars_data.makeid where cars_data.mpg = (select max(mpg) from cars_data);
select avg(horsepower) from cars_data where year < 1980;
select avg(horsepower) from cars_data;
select avg(edispl) from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id where car_makers.maker = 'volvo';
select avg(edispl) from cars_data join car_names on cars_data.id = car_names.makeid join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id where car_makers.maker = 'volvo';
select max(accelerate), cylinders from cars_data group by cylinders;
select max(accelerate), cylinders from cars_data;
select car_names.make from car_names join cars_data on car_names.makeid = cars_data.id group by car_names.make order by count(distinct cars_data.cylinders) desc limit 1;
select model_list.model from model_list join car_names on model_list.modelid = car_names.model join cars_data on car_names.makeid = cars_data.id group by model_list.model order by count(distinct car_names.makeid) desc limit 1;
select count(*) from cars_data where cylinders > 4;
select count(*) from cars_data where cylinders > 4;
select count(*)  from cars_data  where year = 1980;
select count(*)  from cars_data  where year = 1980;
select count(distinct model_list.model)  from car_makers  join model_list on car_makers.id = model_list.maker  where car_makers.fullname = 'american motor company';
select count(distinct model_list.model)  from car_makers  join model_list on car_makers.id = model_list.maker  where car_makers.fullname = 'american motor company';
select car_makers.fullname, car_makers.id  from car_makers  join model_list on car_makers.id = model_list.maker  group by car_makers.id  having count(distinct model_list.model) > 3;
select car_makers.fullname, car_makers.id from car_makers where car_makers.id in (   select model_list.maker   from model_list   group by model_list.maker   having count(model_list.modelid) > 3 );
select distinct car_names.model from car_names where car_names.makeid in (   select model_list.modelid   from model_list   join car_makers on model_list.maker = car_makers.id   where car_makers.fullname = 'general motors'   union   select cars_data.id   from cars_data   where cars_data.weight > 3500 );
select distinct car_names.model from car_names where car_names.makeid in (   select model_list.modelid   from model_list   join car_makers on model_list.maker = car_makers.id   where car_makers.fullname = 'general motors'   union   select cars_data.id   from cars_data   where cars_data.weight > 3500 );
select distinct cars_data.year from cars_data where cars_data.weight >= 3000 and cars_data.weight <= 4000;
select distinct cars_data.year from cars_data where cars_data.weight < 4000 intersect select distinct cars_data.year from cars_data where cars_data.weight > 3000;
select horsepower  from cars_data  where accelerate = (select max(accelerate) from cars_data);
select horsepower  from cars_data  where accelerate = (select max(accelerate) from cars_data);
select cylinders  from cars_data  where modelid = (select modelid from model_list where model = 'volvo')  order by accelerate  limit 1;
select cylinders  from cars_data  where modelid = (select modelid from model_list where model = 'volvo')  order by accelerate  limit 1;
select count(*)  from cars_data  where accelerate > (select accelerate from cars_data where horsepower = (select max(horsepower) from cars_data));
select count(*)  from cars_data  where accelerate > (select max(horsepower) from cars_data);
select count(distinct countries.countryid)  from countries  join car_makers on countries.countryid = car_makers.country  group by countries.countryid  having count(distinct car_makers.id) > 2;
select count(*)  from (select count(distinct car_makers.id) as num_makers        from countries        join car_makers on countries.countryid = car_makers.country        group by countries.countryid)  where num_makers > 2;
select count(*)  from cars_data  where cylinders > 6;
select count(*)  from cars_data  where cylinders > 6;
select car_names.makeid, car_names.make  from cars_data  join car_names on cars_data.id = car_names.makeid  where cars_data.cylinders = 4  order by cars_data.horsepower desc  limit 1;
select car_names.makeid, car_names.make  from cars_data  join car_names on cars_data.id = car_names.makeid  where cars_data.cylinders = 4  order by cars_data.horsepower desc  limit 1;
select car_names.makeid, car_names.make  from cars_data  join car_names on cars_data.id = car_names.makeid  where cars_data.cylinders <= 3  and cars_data.horsepower > (select min(horsepower) from cars_data)  order by car_names.makeid asc  limit 1;
select car_names.makeid, car_names.make  from cars_data  join car_names on cars_data.id = car_names.makeid  where cars_data.cylinders < 4  and cars_data.horsepower > (select min(horsepower) from cars_data where cylinders >= 4)  order by car_names.makeid asc;
select max(cars_data.mpg)  from cars_data  join car_names on cars_data.id = car_names.makeid  where (cars_data.cylinders = 8 or cars_data.year < 1980)  and cars_data.mpg != 'null';
select max(mpg)  from cars_data  where (cylinders = 8 or year < 1980);
select model  from model_list  join cars_data on model_list.modelid = cars_data.id  join car_makers on model_list.maker = car_makers.id  where weight < 3500 and maker != (select id from car_makers where maker = 'ford motor company');
select distinct model  from model_list  join cars_data on model_list.modelid = cars_data.id  join car_makers on model_list.maker = car_makers.id  where weight < 3500 and maker != (select id from car_makers where maker = 'ford motor company');
select countryname  from countries  where countryid not in (select distinct country from car_makers);
select countryname  from countries  where countryid not in (select distinct country from car_makers);
select car_makers.id, car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.modelid = car_names.makeid group by car_makers.id having count(distinct model_list.model) >= 2 and count(distinct car_makers.maker) > 3;
select car_makers.id, car_makers.maker from car_makers join model_list on car_makers.id = model_list.maker join car_names on model_list.modelid = car_names.makeid group by car_makers.id having count(distinct model_list.model) >= 2 and count(distinct car_names.make) > 3;
select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.id = model_list.maker join car_names on model_list.modelid = car_names.makeid where countries.countryid in (   select car_makers.country   from car_makers   join model_list on car_makers.id = model_list.maker   join car_names on model_list.modelid = car_names.makeid   where car_names.model = 'fiat' ) or countries.countryid in (   select car_makers.country   from car_makers   group by car_makers.country   having count(distinct car_makers.maker) > 3 );
select countries.countryid, countries.countryname from countries join car_makers on countries.countryid = car_makers.country join model_list on car_makers.id = model_list.maker join car_names on model_list.modelid = car_names.makeid where countries.countryid in (   select car_makers.country   from car_makers   join model_list on car_makers.id = model_list.maker   join car_names on model_list.modelid = car_names.makeid   where car_names.model = 'fiat' ) or countries.countryid in (   select car_makers.country   from car_makers   group by car_makers.country   having count(distinct car_makers.maker) > 3 );
select distinct countries.country from airlines join countries on airlines.country = countries.countryname where airlines.airline = 'jetblue airways';
select country  from airlines  where airline = 'jetblue airways';
select abbreviation  from airlines  where airline = 'jetblue airways';
select abbreviation  from airlines  where airline = 'jetblue airways';
select airline, abbreviation  from airlines  where country = 'usa';
select airline, abbreviation  from airlines  where country = 'usa';
select airportcode, airportname from airports where city = 'anthony';
select airportcode, airportname from airports where city = 'anthony';
select count(*) from airlines;
select count(distinct airline) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select airline from airlines where abbreviation = 'ual';
select airline from airlines where abbreviation = 'ual';
select count(*)  from airlines  where country = 'usa';
select count(*)  from airlines  where country = 'usa';
select city, country  from airports  where airportcode = 'alton';
select city, country  from airports  where airportcode = 'alton';
select airportname  from airports  where airportcode = 'ako';
select airportname  from airports  where airportcode = 'ako';
select airportname  from airports  where city = 'aberdeen';
select airportname  from airports  where city like '%aberdeen%';
select count(*)  from flights  where sourceairport = 'apg';
select count(*)  from flights  where sourceairport = 'apg';
select count(*)  from flights  where destairport = 'ato';
select count(*)  from flights  where destairport = 'ato';
select count(*)  from flights  where sourceairport = 'aberdeen';
select count(*)  from flights  where sourceairport = 'aberdeen';
select count(*)  from flights  where destairport = 'aberdeen';
select count(*) from flights where destairport = 'aberdeen';
select count(*) from flights where airline = (select uid from airlines where airline = 'jetblue airways');
select count(*) from flights where airline = (select uid from airlines where airline = 'jetblue airways');
select count(*) from flights where airline = (select uid from airlines where airline = 'united airlines') and destairport = 'asy';
select count(*) from flights where airline = (select uid from airlines where airline = 'united airlines') and destairport = 'asy';
select count(*)  from flights  where airline = (select uid from airlines where airline = 'united airlines')  and sourceairport = 'ahd';
select count(*)  from flights  where airline = (select uid from airlines where airline = 'united airlines')  and sourceairport = 'ahd';
select count(*)  from flights  where airline = (select uid from airlines where airline = 'united airlines')  and destairport in (select airportcode from airports where city = 'aberdeen');
select count(*)  from flights  where airline = (select uid from airlines where airline = 'united airlines')  and destairport = (select airportcode from airports where city = 'aberdeen');
select destairport, count(*)  from flights  group by destairport  order by count(*) desc  limit 1;
select airports.city from flights join airports on flights.destairport = airports.airportcode group by airports.city order by count(*) desc limit 1;
select airports.city from flights join airports on flights.sourceairport = airports.airportcode group by airports.city order by count(*) desc limit 1;
select airports.city from flights join airports on flights.sourceairport = airports.airportcode group by airports.city order by count(*) desc limit 1;
select flights.sourceairport from flights group by flights.sourceairport order by count(*) desc limit 1;
select flights.destairport from flights group by flights.destairport order by count(*) desc limit 1;
select sourceairport as airportcode, count(*) as num_flights from flights group by sourceairport order by num_flights asc limit 1;
select destairport as airportcode, count(*) as num_flights from flights group by destairport order by num_flights asc limit 1;
select airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.uid order by count(*) desc limit 1;
select airlines.airline from airlines join flights on airlines.uid = flights.airline group by airlines.uid order by count(*) desc limit 1;
select abbreviation, country from airlines join flights on airlines.uid = flights.airline group by airlines.uid order by count(*) asc limit 1;
select abbreviation, country from airlines where uid = (   select airline   from flights   group by airline   order by count(*) asc   limit 1 ) and abbreviation is not null;
select distinct airline from flights join airports on flights.sourceairport = airports.airportcode where airports.airportcode = 'ahd';
select distinct airlines.airline from flights join airports on flights.sourceairport = airports.airportcode join airlines on flights.airline = airlines.uid where airports.airportcode = 'ahd';
select distinct airline from flights join airports on flights.destairport = airports.airportcode where airports.airportcode = 'ahd';
select distinct airlines.airline from flights join airports on flights.destairport = airports.airportcode join airlines on flights.airline = airlines.uid where airports.airportcode = 'ahd';
select distinct airlines.airline  from airlines  join flights on airlines.uid = flights.airline  where flights.sourceairport = 'apg'  and airlines.airline in (select airlines.airline                           from airlines                           join flights on airlines.uid = flights.airline                           where flights.sourceairport = 'cvo');
select distinct airlines.airline  from airlines  join flights on airlines.uid = flights.airline  where flights.sourceairport = 'apg'  and airlines.airline in (select airlines.airline                           from airlines                           join flights on airlines.uid = flights.airline                           where flights.sourceairport = 'cvo') and airlines.airline in (select airlines.airline                           from airlines                           join flights on airlines.uid = flights.airline                           where flights.sourceairport = 'cvo');
select distinct airlines.airline  from airlines  join flights on airlines.uid = flights.airline  where flights.sourceairport = 'cvo'  and airlines.airline not in (select airlines.airline                               from airlines                               join flights on airlines.uid = flights.airline                               where flights.sourceairport = 'apg');
select distinct airlines.airline  from airlines  join flights on airlines.uid = flights.airline  where flights.sourceairport = 'cvo'  and airlines.airline not in (select airlines.airline                               from airlines                               join flights on airlines.uid = flights.airline                               where flights.sourceairport = 'apg') and airlines.airline in (select airlines.airline                           from airlines                           join flights on airlines.uid = flights.airline                           where flights.sourceairport = 'cvo');
select airlines.airline  from airlines  join flights on airlines.uid = flights.airline  group by airlines.airline  having count(*) >= 10;
select airlines.airline  from airlines  join flights on airlines.uid = flights.airline  group by airlines.uid  having count(flights.flightno) >= 10;
select airlines.airline  from airlines  join flights on airlines.uid = flights.airline  group by airlines.uid  having count(flights.flightno) < 200;
select airlines.airline  from airlines  join flights on airlines.uid = flights.airline  group by airlines.uid  having count(flights.flightno) < 200;
select flights.flightno  from flights  join airlines on flights.airline = airlines.uid  where airlines.airline = 'united airlines';
select flights.flightno  from flights  join airlines on flights.airline = airlines.uid  where airlines.airline = 'united airlines';
select flightno  from flights  where sourceairport = "apg";
select flightno  from flights  where sourceairport = "apg";
select flightno  from flights  where destairport = "apg";
select flightno  from flights  where destairport = "apg";
select flightno  from flights  join airports on flights.sourceairport = airports.airportcode  where airports.city = "aberdeen";
select flightno  from flights  where sourceairport = 'aberdeen';
select flightno  from flights  where destairport = 'aberdeen';
select flightno  from flights  where destairport = 'aberdeen';
select count(*)  from flights  where destairport in ('aberdeen', 'abilene');
select count(*)  from flights  where destairport in ('aberdeen', 'abilene');
select airportname  from airports  where airportcode not in      (select sourceairport from flights       union       select destairport from flights);
select airportname  from airports  where airportcode not in      (select sourceairport from flights       union       select destairport from flights);
select count(*)  from employee;
select count(*)  from employee;
select name  from employee  order by age asc;
select name from employee order by age asc;
select city, count(*) as num_employees from employee group by city;
select city, count(*) as num_employees from employee group by city;
select city from employee where age < 30 group by city having count(*) > 1;
select city from employee where age < 30 group by city having count(*) > 1;
select count(shop_id), location from shop group by location;
select count(shop_id), location from shop group by location;
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select min(number_products), max(number_products) from shop;
select min(number_products), max(number_products) from shop;
select name, location, district from shop order by number_products desc;
select name, location, district from shop order by number_products desc;
select name from shop where number_products > (select avg(number_products) from shop);
select name from shop where number_products > (select avg(number_products) from shop);
select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by employee.employee_id order by count(evaluation.bonus) desc limit 1;
select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id group by employee.employee_id order by sum(evaluation.bonus) desc limit 1;
select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id where evaluation.bonus = (select max(bonus) from evaluation) limit 1;
select employee.name from employee join evaluation on employee.employee_id = evaluation.employee_id order by evaluation.bonus desc limit 1;
select employee.name from employee left join evaluation on employee.employee_id = evaluation.employee_id where evaluation.employee_id is null;
select employee.name from employee where employee.employee_id not in (   select evaluation.employee_id   from evaluation );
select shop.name from shop where shop.shop_id = (   select hiring.shop_id   from hiring   group by hiring.shop_id   order by count(hiring.employee_id) desc   limit 1 );
select shop.name from shop where shop.shop_id = (   select hiring.shop_id   from hiring   group by hiring.shop_id   order by count(hiring.employee_id) desc   limit 1 );
select shop.name from shop where shop.shop_id not in (   select hiring.shop_id   from hiring );
select shop.name from shop where shop.shop_id not in (   select hiring.shop_id   from hiring );
select count(employee_id), shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.name;
select count(employee_id), shop.name from hiring join shop on hiring.shop_id = shop.shop_id group by shop.name;
select sum(bonus) from evaluation;
select sum(bonus) from evaluation;
select * from hiring;
select * from hiring;
select distinct district from shop where number_products < 3000 and district in (     select district     from shop     where number_products > 10000 );
select distinct district from shop where number_products < 3000 and district in (     select district     from shop     where number_products > 10000 );
select count(distinct location) from shop;
select count(distinct location) from shop;
select count(*) from documents;
select count(*) from documents;
select document_id, document_name, document_description from documents;
select document_id, document_name, document_description from documents;
select document_name, template_id from documents where document_description like '%w%';
select documents.document_name, documents.template_id from documents where documents.document_description like '%w%';
select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = 'robbin cv';
select documents.document_id, documents.template_id, documents.document_description from documents where documents.document_name = 'robbin cv';
select count(distinct documents.template_id) from documents;
select count(distinct documents.template_id) from documents;
select count(distinct documents.document_id) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'ppt';
select count(distinct documents.document_id) from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = 'ppt';
select templates.template_id, count(distinct documents.document_id) from templates left join documents on templates.template_id = documents.template_id group by templates.template_id;
select documents.template_id, count(distinct documents.document_id) from documents group by documents.template_id;
select templates.template_id, templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_id order by count(distinct documents.document_id) desc limit 1;
select templates.template_id, templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_id order by count(documents.document_id) desc limit 1;
select templates.template_id from templates join documents on templates.template_id = documents.template_id group by templates.template_id having count(distinct documents.document_id) > 1;
select templates.template_id from templates join documents on templates.template_id = documents.template_id group by templates.template_id having count(distinct documents.document_id) > 1;
select templates.template_id from templates left join documents on templates.template_id = documents.template_id where documents.document_id is null;
select templates.template_id from templates left join documents on templates.template_id = documents.template_id where documents.document_id is null;
select count(distinct template_id) from templates;
select count(distinct template_id) from templates;
select template_id, version_number, template_type_code from templates;
select template_id, version_number, template_type_code from templates;
select distinct template_type_code from templates;
select distinct template_type_code from ref_template_types;
select template_id from templates where template_type_code = 'pp' or template_type_code = 'ppt';
select template_id from templates where template_type_code in ('pp', 'ppt');
select count(*) from templates where template_type_code = 'cv';
select count(*) from templates where template_type_code = 'cv';
select version_number, template_type_code from templates where version_number > 5 order by version_number asc limit 1;
select version_number, template_type_code from templates where version_number > 5;
select template_type_code, count(template_id) from templates group by template_type_code;
select template_type_code, count(template_id) from templates group by template_type_code having count(template_id) = 3;
select template_type_code from templates group by template_type_code order by count(template_id) desc limit 1;
select template_type_code from templates group by template_type_code order by count(*) desc limit 1;
select template_type_code from templates group by template_type_code having count(*) < 3;
select template_type_code from templates group by template_type_code having count(*) < 3;
select min(version_number), template_type_code from templates group by template_type_code order by min(version_number) limit 1;
select min(version_number), template_type_code from templates group by template_type_code order by min(version_number) limit 1;
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = "data base";
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id where documents.document_name = "data base";
select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = "bk";
select documents.document_name from documents join templates on documents.template_id = templates.template_id where templates.template_type_code = "bk";
select templates.template_type_code, count(documents.document_id) from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code;
select templates.template_type_code, count(documents.document_id) from templates left join documents on templates.template_id = documents.template_id group by templates.template_type_code;
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count(documents.document_id) desc limit 1;
select templates.template_type_code from templates join documents on templates.template_id = documents.template_id group by templates.template_type_code order by count(distinct documents.document_id) desc limit 1;
select ref_template_types.template_type_code from ref_template_types left join templates on ref_template_types.template_type_code = templates.template_type_code where templates.template_id is null;
select ref_template_types.template_type_code from ref_template_types left join templates on ref_template_types.template_type_code = templates.template_type_code left join documents on templates.template_id = documents.template_id where documents.document_id is null;
select template_type_code, template_type_description from ref_template_types;
select template_type_code, template_type_description from ref_template_types;
select template_type_description from ref_template_types where template_type_code = 'ad';
select template_type_description from ref_template_types where template_type_code = 'ad';
select template_type_code from ref_template_types where template_type_description = 'book';
select template_type_code  from ref_template_types  where template_type_description = 'book';
select distinct ref_template_types.template_type_description  from ref_template_types  join templates on ref_template_types.template_type_code = templates.template_type_code  join documents on templates.template_id = documents.template_id;
select distinct ref_template_types.template_type_description  from ref_template_types  join templates on ref_template_types.template_type_code = templates.template_type_code  join documents on templates.template_id = documents.template_id  join paragraphs on documents.document_id = paragraphs.document_id;
select templates.template_id  from templates  join ref_template_types on templates.template_type_code = ref_template_types.template_type_code  where ref_template_types.template_type_description = 'presentation';
select templates.template_id  from templates  join ref_template_types on templates.template_type_code = ref_template_types.template_type_code  where ref_template_types.template_type_description = 'presentation';
select count(paragraph_id)  from paragraphs;
select count(paragraph_id)  from paragraphs;
select count(paragraph_id)  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'summer show' );
select count(paragraph_id)  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'summer show' );
select * from paragraphs  where paragraph_text = 'korea';
select paragraph_id, paragraph_text  from paragraphs  where paragraph_text like '%korea %';
select paragraph_id, paragraph_text  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'welcome to ny' );
select paragraph_id, paragraph_text  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'welcome to ny' );
select paragraph_text  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'customer reviews' );
select paragraph_text  from paragraphs  where document_id = (   select document_id    from documents    where document_name = 'customer reviews' );
select documents.document_id, count(paragraphs.paragraph_id)  from documents  left join paragraphs on documents.document_id = paragraphs.document_id  group by documents.document_id  order by documents.document_id;
select paragraphs.document_id, count(paragraphs.paragraph_id)  from paragraphs  group by paragraphs.document_id  order by paragraphs.document_id;
select documents.document_id, documents.document_name, count(paragraphs.paragraph_id)  from documents  left join paragraphs on documents.document_id = paragraphs.document_id  group by documents.document_id  order by documents.document_id;
select documents.document_id, documents.document_name, count(paragraphs.paragraph_id)  from documents  left join paragraphs on documents.document_id = paragraphs.document_id  group by documents.document_id  order by documents.document_id;
select paragraphs.document_id  from paragraphs  group by paragraphs.document_id  having count(paragraphs.paragraph_id) >= 2;
select document_id  from paragraphs  group by document_id  having count(*) >= 2;
select documents.document_id, documents.document_name  from documents  join (select document_id, count(*) as num_paragraphs        from paragraphs        group by document_id        order by num_paragraphs desc        limit 1) as max_paragraphs  on documents.document_id = max_paragraphs.document_id;
select documents.document_id, documents.document_name  from documents  join (select document_id, count(*) as num_paragraphs        from paragraphs        group by document_id        order by num_paragraphs desc        limit 1) as max_paragraphs  on documents.document_id = max_paragraphs.document_id;
select document_id  from paragraphs  group by document_id  order by count(*) asc  limit 1;
select document_id  from paragraphs  group by document_id  order by count(*) asc  limit 1;
select document_id  from paragraphs  group by document_id  having count(distinct paragraph_id) between 1 and 2;
select document_id  from paragraphs  group by document_id  having count(distinct paragraph_id) between 1 and 2;
select distinct p.document_id  from paragraphs p  where p.paragraph_text = 'brazil'  and exists (select 1 from paragraphs where document_id = p.document_id and paragraph_text = 'ireland');
select distinct p.document_id  from paragraphs p  where p.paragraph_text = 'brazil'  and exists (select 1 from paragraphs where document_id = p.document_id and paragraph_text = 'ireland');
select count(distinct teacher_id)  from teacher;
select count(*) from teacher;
select name from teacher order by age asc;
select name from teacher order by age asc;
select age, hometown from teacher;
select age, hometown from teacher;
select name  from teacher  where hometown != 'little lever urban district';
select name  from teacher  where hometown != 'little lever urban district';
select name  from teacher  where age in ('32', '33');
select name  from teacher  where age in ('32', '33');
select hometown  from teacher  where age = (select min(age) from teacher);
select hometown  from teacher  order by age asc  limit 1;
select hometown, count(*)  from teacher  group by hometown;
select hometown, count(*)  from teacher  group by hometown  order by count(*) desc;
select hometown  from teacher  group by hometown  order by count(*) desc  limit 1;
select hometown  from teacher  group by hometown  having count(*) = (   select max(count)    from (     select count(*) as count      from teacher      group by hometown   ) );
select distinct t1.hometown from teacher t1 inner join teacher t2 on t1.hometown = t2.hometown and t1.teacher_id <> t2.teacher_id;
select hometown from teacher group by hometown having count(*) > 1;
select t.name, c.course from teacher t inner join course_arrange ca on t.teacher_id = ca.teacher_id inner join course c on ca.course_id = c.course_id;
select t.name, c.course from teacher t inner join course_arrange ca on t.teacher_id = ca.teacher_id inner join course c on ca.course_id = c.course_id;
select t.name, c.course from teacher t inner join course_arrange ca on t.teacher_id = ca.teacher_id inner join course c on ca.course_id = c.course_id order by t.name asc;
select teacher.name, course.course from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id order by teacher.name asc;
select teacher.name from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math';
select teacher.name from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id join course on course_arrange.course_id = course.course_id where course.course = 'math';
select teacher.name, count(course_arrange.course_id) as num_courses from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id group by teacher.name;
select teacher.name, count(course_arrange.course_id) as num_courses from teacher join course_arrange on teacher.teacher_id = course_arrange.teacher_id group by teacher.name;
select teacher.name  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(distinct course_arrange.course_id) >= 2;
select teacher.name  from teacher  join course_arrange on teacher.teacher_id = course_arrange.teacher_id  group by teacher.name  having count(distinct course_arrange.course_id) >= 2;
select teacher.name  from teacher  left join course_arrange on teacher.teacher_id = course_arrange.teacher_id  where course_arrange.course_id is null;
select teacher.name  from teacher  left join course_arrange on teacher.teacher_id = course_arrange.teacher_id  where course_arrange.course_id is null;
select count(*)  from visitor  where age < 30;
select name  from visitor  where level_of_membership > 4  order by level_of_membership desc;
select avg(age)  from visitor  where level_of_membership <= 4;
select name, level_of_membership  from visitor  where level_of_membership > 4  order by age desc;
select museum_id, name  from museum  where num_of_staff = (select max(num_of_staff) from museum);
select avg(num_of_staff)  from museum  where open_year < 2009;
select open_year, num_of_staff from museum where name = 'plaza museum';
select name from museum where num_of_staff > (select min(num_of_staff) from museum where open_year > 2010);
select visitor.id, visitor.name, visitor.age from visitor inner join visit on visitor.id = visit.visitor_id group by visitor.id having count(distinct visit.museum_id) > 1;
select visitor.id, visitor.name, visitor.level_of_membership from visitor inner join visit on visitor.id = visit.visitor_id group by visitor.id order by sum(visit.total_spent) desc limit 1;
select museum_id, name from visit inner join museum on visit.museum_id = museum.museum_id group by museum_id order by count(*) desc limit 1;
select museum.name from museum left join visit on museum.museum_id = visit.museum_id where visit.museum_id is null;
select visitor.name, visitor.age from visitor join visit on visitor.id = visit.visitor_id where visit.num_of_ticket = (   select max(num_of_ticket)   from visit );
select avg(num_of_ticket), max(num_of_ticket) from visit;
select sum(total_spent) from visit join visitor on visit.visitor_id = visitor.id where visitor.level_of_membership = 1;
select visitor.name from visitor join visit on visitor.id = visit.visitor_id join museum on visit.museum_id = museum.museum_id where museum.open_year < 2009 and museum.open_year > 2011 group by visitor.id having count(distinct museum.museum_id) = 2;
select count(distinct visitor_id) from visit where museum_id not in (   select museum_id   from museum   where open_year > 2010 );
select count(*) from museum where open_year > 2013 or open_year < 2008;
select count(*) from players;
select count(distinct player_id) from players;
select count(*) from matches;
select count(*) from matches;
select first_name, birth_date from players where country_code = 'usa';
select first_name, birth_date from players where country_code = 'usa';
select avg(loser_age), avg(winner_age) from matches;
select avg(loser_age), avg(winner_age) from matches;
select avg(winner_rank)  from matches;
select avg(winner_rank)  from matches;
select max(loser_rank)  from matches;
select max(loser_rank)  from matches;
select count(distinct country_code)  from players;
select count(distinct country_code)  from players;
select count(distinct loser_name)  from matches;
select count(distinct loser_name)  from matches;
select tourney_name  from matches  group by tourney_name  having count(*) > 10;
select tourney_name  from matches  group by tourney_name  having count(*) > 10;
select distinct winner_name from matches where year = 2013 and winner_name in (   select winner_name   from matches   where year = 2016 );
select distinct winner_name from matches where year = 2013 and winner_name in (   select winner_name   from matches   where year = 2016 );
select count(*) from matches where year = 2013 or year = 2016;
select count(*) from matches where year = 2013 or year = 2016;
select distinct country_code, first_name from players where player_id in (   select winner_id   from matches   where tourney_name = 'wta championships' ) and player_id in (   select winner_id   from matches   where tourney_name = 'australian open' );
select p.first_name, p.country_code from players p join matches m1 on p.player_id = m1.winner_id join matches m2 on p.player_id = m2.loser_id where m1.tourney_name = 'wta championships' and m2.tourney_name = 'australian open';
select p.first_name, p.country_code from players p where p.birth_date = (select min(birth_date) from players);
select p.first_name, p.country_code from players p order by p.birth_date limit 1;
select p.first_name, p.last_name from players p order by p.birth_date;
select p.first_name || ' ' || p.last_name as full_name from players p order by p.birth_date;
select first_name, last_name from players where hand = 'l' order by birth_date;
select first_name, last_name from players where hand = 'l' order by birth_date;
select first_name, country_code from players join rankings on players.player_id = rankings.player_id where tours = (select max(tours) from rankings);
select first_name, country_code from players join (select player_id, max(tours) as max_tours from rankings) as max_rankings on players.player_id = max_rankings.player_id join rankings on players.player_id = rankings.player_id and rankings.tours = max_rankings.max_tours;
select year from matches group by year order by count(*) desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select winner_name, winner_rank_points from matches group by winner_name order by count(*) desc, winner_rank_points desc limit 1;
select winner_name, winner_rank_points from matches group by winner_name order by sum(winner_rank_points) desc limit 1;
select winner_name from matches where tourney_name = 'australian open' and winner_rank_points = (     select max(winner_rank_points)     from matches     where tourney_name = 'australian open' );
select winner_name from matches where tourney_name = 'australian open' group by winner_name order by max(winner_rank_points) desc limit 1;
select loser_name, winner_name from matches where minutes = (select max(minutes) from matches);
select loser_name, winner_name from matches where minutes = (select max(minutes) from matches);
select avg(rankings.ranking_points), players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name;
select avg(rankings.ranking_points), players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name;
select sum(rankings.ranking_points), players.first_name from players join rankings on players.player_id = rankings.player_id group by players.first_name;
select first_name, sum(ranking_points) as total_points from players join rankings on players.player_id = rankings.player_id group by first_name order by total_points desc limit 1;
select country_code, count(distinct player_id) as num_players from players group by country_code order by num_players desc limit 1;
select country_code, count(distinct player_id) as num_players from players group by country_code;
select country_code, count(distinct player_id) as num_players from players group by country_code order by num_players desc limit 1;
select country_code, count(distinct player_id) as num_players from players group by country_code order by num_players desc limit 1;
select country_code from players group by country_code having count(player_id) > 50;
select country_code from players group by country_code having count(player_id) > 50;
select ranking_date, sum(tours) from rankings group by ranking_date;
select sum(tours) from rankings group by ranking_date;
select year, count(match_num) from matches group by year;
select year, count(*)  from matches  group by year;
select count(distinct winner_name)  from matches  where winner_hand = 'l' and tourney_name = 'wta championships';
select count(distinct winner_name)  from matches  where winner_hand = 'l' and tourney_name = 'wta championships';
select first_name, country_code, birth_date  from players  where player_id = (   select winner_id    from matches    where winner_rank_points = (     select max(winner_rank_points)      from matches   ) );
select first_name, country_code, birth_date  from players  where player_id = (   select winner_id    from matches    where winner_rank_points = (     select max(winner_rank_points)      from matches   ) );
select hand, count(*) as num_players from players group by hand;
select hand, count(distinct player_id) as num_players from players group by hand;
select count(*) as num_captured from ship where disposition_of_ship = 'captured';
select name, tonnage from ship order by name desc;
select name, date, result from battle;
select max(killed + injured) as max_death, min(killed + injured) as min_death from death;
select avg(injured) as avg_injuries from death;
select sum(killed) as total_killed, sum(injured) as total_injured from death where caused_by_ship_id in (   select id   from ship   where tonnage = 't' );
select name, result from battle where bulgarian_commander != 'boril';
select distinct battle.id, battle.name from battle join ship on battle.id = ship.id where ship_type = 'brig' and lost_in_battle = 1;
select battle.id, battle.name from battle join ship on battle.id = ship.id join death on ship.id = death.caused_by_ship_id group by battle.id having sum(death.killed) + sum(death.injured) > 10;
select death.caused_by_ship_id, ship.name from death join ship on death.caused_by_ship_id = ship.id group by death.caused_by_ship_id order by sum(death.injured) desc limit 1;
select distinct battle.name from battle where battle.bulgarian_commander = 'kaloyan' and battle.latin_commander = 'baldwin i';
select count(distinct battle.result) from battle;
select count(distinct battle.id) from battle left join ship on battle.id = ship.id and ship.tonnage = '225' where ship.id is null;
select battle.name, battle.date from battle join ship as s1 on battle.id = s1.lost_in_battle join ship as s2 on battle.id = s2.lost_in_battle where s1.name = 'lettice' and s2.name = 'hms atalanta';
select battle.name, battle.result, battle.bulgarian_commander from battle left join ship on battle.id = ship.lost_in_battle where ship.location = 'english channel' or ship.location is null;
select note from death where note like '%east%';
select line_1, line_2 from addresses;
select line_1, line_2 from addresses;
select count(*)  from courses;
select count(distinct course_id)  from courses;
select course_description  from courses  where course_name = 'math';
select course_description  from courses  where course_name like 'math%';
select zip_postcode  from addresses  where city = 'port chelsea';
select zip_postcode  from addresses  where city = 'port chelsea';
select departments.department_name, departments.department_id  from departments  join degree_programs on departments.department_id = degree_programs.department_id  group by departments.department_id  order by count(degree_programs.degree_program_id) desc  limit 1;
select departments.department_name, departments.department_id  from departments  join degree_programs on departments.department_id = degree_programs.department_id  group by departments.department_id  order by count(degree_programs.degree_program_id) desc  limit 1;
select count(distinct department_id)  from degree_programs;
select count(distinct departments.department_id)  from departments  join degree_programs on departments.department_id = degree_programs.department_id;
select count(distinct degree_summary_name)  from degree_programs;
select count(distinct degree_program_id)  from student_enrolment;
select count(distinct degree_program_id)  from degree_programs  where department_id = (select department_id from departments where department_name = 'engineering');
select count(distinct degree_summary_name)  from degree_programs  where department_id = (select department_id from departments where department_name = 'engineering');
select section_name, section_description  from sections;
select section_name, section_description from sections;
select course_name, course_id from courses where course_id in (   select course_id   from sections   group by course_id   having count(*) <= 2 );
select course_name, course_id from courses where course_id in (   select course_id   from sections   group by course_id   having count(*) < 2 );
select section_name from sections order by section_name desc;
select section_name from sections order by section_name desc;
select semesters.semester_name, student_enrolment.student_id from student_enrolment join semesters on student_enrolment.semester_id = semesters.semester_id group by student_enrolment.semester_id order by count(student_enrolment.student_id) desc limit 1;
select semesters.semester_name, student_enrolment.student_id from student_enrolment join semesters on student_enrolment.semester_id = semesters.semester_id group by student_enrolment.semester_id order by count(student_enrolment.student_id) desc;
select department_description from departments where department_name like '%computer%';
select department_description from departments where department_name like '%computer%';
select students.first_name, students.middle_name, students.last_name, students.student_id from student_enrolment join students on student_enrolment.student_id = students.student_id where student_enrolment.degree_program_id in (     select degree_program_id     from student_enrolment     group by student_id     having count(distinct degree_program_id) = 2 ) group by students.student_id having count(distinct student_enrolment.degree_program_id) = 2;
select s.first_name, s.middle_name, s.last_name, s.student_id from students s join student_enrolment se on s.student_id = se.student_id group by s.student_id having count(distinct se.degree_program_id) = 2;
select s.first_name, s.middle_name, s.last_name from students s join student_enrolment se on s.student_id = se.student_id join degree_programs dp on se.degree_program_id = dp.degree_program_id where dp.degree_summary_name = 'bachelor';
select s.first_name, s.middle_name, s.last_name from students s join student_enrolment se on s.student_id = se.student_id join degree_programs dp on se.degree_program_id = dp.degree_program_id where dp.degree_summary_name = 'bachelor';
select dp.degree_summary_name from degree_programs dp join student_enrolment se on dp.degree_program_id = se.degree_program_id group by dp.degree_summary_name order by count(distinct se.student_id) desc limit 1;
select dp.degree_summary_name from degree_programs dp join student_enrolment se on dp.degree_program_id = se.degree_program_id group by dp.degree_summary_name order by count(distinct se.student_id) desc limit 1;
select degree_program_id, degree_summary_name as summary from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by degree_program_id order by count(student_id) desc limit 1;
select degree_program_id, degree_summary_name as summary from student_enrolment join degree_programs on student_enrolment.degree_program_id = degree_programs.degree_program_id group by degree_program_id order by count(student_id) desc limit 1;
select student_id, first_name, middle_name, last_name, count(*) as num_enrollments from student_enrolment join students on student_enrolment.student_id = students.student_id group by student_id order by num_enrollments desc limit 1;
select students.student_id, first_name, middle_name, last_name, count(*) as num_enrollments from student_enrolment join students on student_enrolment.student_id = students.student_id group by students.student_id order by num_enrollments desc limit 1;
select semester_name from semesters where semester_id not in (   select semester_id   from student_enrolment   group by semester_id );
select semester_name  from semesters  where semester_id not in      (select semester_id       from student_enrolment);
select distinct course_name  from courses  where course_id in      (select course_id       from student_enrolment_courses);
select distinct course_name  from courses  where course_id in      (select course_id       from student_enrolment_courses);
select course_name  from courses  where course_id =      (select course_id       from student_enrolment_courses       group by course_id       order by count(student_course_id) desc       limit 1);
select course_name  from courses  where course_id =      (select course_id       from student_enrolment_courses       group by course_id       order by count(distinct student_id) desc       limit 1);
select last_name from students where current_address_id in (   select address_id   from addresses   where state_province_county = 'north carolina' ) and student_id not in (   select student_id   from student_enrolment );
select last_name from students where current_address_id in (   select address_id   from addresses   where state_province_county = 'north carolina' ) and student_id not in (   select student_id   from student_enrolment );
select transcript_date, transcript_id from transcripts where transcript_id in (   select transcript_id   from transcript_contents   group by transcript_id   having count(distinct student_course_id) >= 2 );
select transcript_date, transcript_id from transcripts where transcript_id in (   select transcript_id   from transcript_contents   group by transcript_id   having count(distinct student_course_id) >= 2 );
select cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward';
select cell_mobile_number  from students  where first_name = 'timmothy' and last_name = 'ward';
select first_name, middle_name, last_name  from students  order by date_first_registered  limit 1;
select first_name, middle_name, last_name  from students  where date_first_registered = (select min(date_first_registered) from students)  limit 1;
select first_name, middle_name, last_name  from students  where student_id in (select student_id from student_enrolment where degree_program_id in (select degree_program_id from degree_programs where degree_summary_name like '%graduate%'))  order by date_left  limit 1;
select first_name, middle_name, last_name  from students  where student_id in (select student_id from student_enrolment where degree_program_id in (select degree_program_id from degree_programs where degree_summary_name like '%graduate%') order by student_id limit 1)  limit 1;
select first_name from students where current_address_id != permanent_address_id;
select first_name from students where current_address_id != permanent_address_id limit 1;
select a.address_id, a.line_1, a.line_2 from addresses a join students s on a.address_id = s.current_address_id group by a.address_id order by count(*) desc limit 1;
select a.address_id, a.line_1, a.line_2 from addresses a join students s on a.address_id = s.current_address_id group by a.address_id order by count(*) desc limit 1;
select avg(strftime('%y', transcript_date)) from transcripts;
select avg(transcript_date) from transcripts;
select transcript_date, other_details from transcripts order by transcript_date limit 1;
select transcript_date, other_details from transcripts order by transcript_date limit 1;
select count(*) from transcripts;
select count(distinct transcript_id) from transcript_contents;
select transcript_date  from transcripts  order by transcript_date desc  limit 1;
select transcript_date  from transcripts  order by transcript_date desc  limit 1;
select count(student_course_id), student_course_id  from transcript_contents  group by student_course_id  order by count(student_course_id) desc  limit 1;
select count(student_course_id), student_course_id  from transcript_contents  group by student_course_id  order by count(student_course_id) desc  limit 1;
select transcript_date, transcript_id  from transcripts  where transcript_id in (     select transcript_id      from transcript_contents      group by transcript_id      order by count(student_course_id) asc      limit 1 );
select transcript_date, transcript_id from transcripts where transcript_id in (   select transcript_id   from transcript_contents   group by transcript_id   order by count(*) asc   limit 1 );
select semester_id from student_enrolment where degree_program_id in (   select degree_program_id   from degree_programs   where degree_summary_name like '%master%' ) and semester_id in (   select semester_id   from student_enrolment   where degree_program_id in (     select degree_program_id     from degree_programs     where degree_summary_name like '%bachelor%'   ) ) group by semester_id;
select semester_id from student_enrolment where degree_program_id in (   select degree_program_id   from degree_programs   where degree_summary_name like '%master%' ) and semester_id in (   select semester_id   from student_enrolment   where degree_program_id in (     select degree_program_id     from degree_programs     where degree_summary_name like '%bachelor%'   ) ) group by semester_id having count(distinct degree_program_id) = 2;
select count(distinct current_address_id) from students;
select distinct line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details from addresses where address_id in (   select current_address_id   from students );
select * from students order by last_name desc;
select other_student_details from students order by last_name desc;
select * from sections where section_name = 'h';
select section_description from sections where section_name = 'h';
select first_name from students where permanent_address_id in (select address_id from addresses where country = 'haiti') or cell_mobile_number = '09700166582';
select first_name  from students  where permanent_address_id in (select address_id from addresses where country = 'haiti')  or cell_mobile_number = '09700166582';
select title  from cartoon  order by title asc;
select title  from cartoon  order by title asc;
select title  from cartoon  where directed_by = 'ben jones';
select title  from cartoon  where directed_by = 'ben jones';
select count(*)  from cartoon  where written_by = "joseph kuhr";
select count(*)  from cartoon  where written_by = "joseph kuhr";
select title, directed_by  from cartoon  order by air_date;
select title, directed_by  from cartoon  order by air_date;
select title  from cartoon  where directed_by = "ben jones" or directed_by = "brandon vietti";
select title  from cartoon  where directed_by = 'ben jones' or directed_by = 'brandon vietti';
select country, count(*)  from tv_channel  group by country  order by count(*) desc  limit 1;
select country, count(*)  from tv_channel  group by country  order by count(*) desc  limit 1;
select count(distinct series_name), count(distinct content)  from tv_channel;
select count(distinct series_name) + count(distinct content)  from tv_channel;
select content from tv_channel where series_name = "sky radio";
select content from tv_channel where series_name = "sky radio";
select package_option from tv_channel where series_name = "sky radio";
select distinct package_option from tv_channel where series_name = "sky radio";
select count(*) from tv_channel where language = "english";
select count(distinct id) from tv_channel where language = 'english';
select language, count(distinct id) as num_channels  from tv_channel  group by language  order by num_channels asc  limit 1;
select language, count(distinct id) as num_channels  from tv_channel  group by language  having num_channels = (select count(distinct id)                        from tv_channel                        group by language                        order by count(distinct id) asc                        limit 1);
select language, count(distinct id) as num_channels  from tv_channel  group by language;
select language, count(distinct id) as num_channels  from tv_channel  group by language;
select tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = "the rise of the blue beetle!";
select tv_channel.series_name from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.title = "the rise of the blue beetle!";
select cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = "sky radio";
select cartoon.title from cartoon join tv_channel on cartoon.channel = tv_channel.id where tv_channel.series_name = "sky radio";
select tv_series.episode from tv_series order by tv_series.rating desc;
select episode  from tv_series  order by rating desc;
select min(share), max(share)  from tv_series;
select min(share), max(share)  from tv_series;
select air_date  from tv_series  where episode = 'a love of a lifetime';
select air_date  from tv_series  where episode = 'a love of a lifetime';
select weekly_rank  from tv_series  where episode = "a love of a lifetime";
select weekly_rank  from tv_series  where episode = "a love of a lifetime";
select tv_channel.series_name  from tv_channel  join tv_series on tv_channel.id = tv_series.channel  where tv_series.episode = "a love of a lifetime";
select tv_channel.series_name  from tv_channel  join tv_series on tv_channel.id = tv_series.channel  where tv_series.episode = "a love of a lifetime";
select episode  from tv_series  join tv_channel on tv_series.channel = tv_channel.id  where tv_channel.series_name = "sky radio";
select episode  from tv_series  where series_name = 'sky radio';
select count(*) as num_cartoons, directed_by  from cartoon  group by directed_by  having directed_by = 'ben jones';
select count(*) as num_cartoons, directed_by  from cartoon  group by directed_by  having directed_by = 'ben jones';
select production_code, channel  from cartoon  where original_air_date = (select max(original_air_date) from cartoon);
select production_code, channel  from cartoon  order by original_air_date desc  limit 1;
select tv_channel.package_option, tv_channel.series_name from tv_channel where tv_channel.hight_definition_tv = 'yes';
select tv_channel.package_option, tv_channel.series_name from tv_channel where tv_channel.hight_definition_tv = 'yes';
select distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'todd casey';
select distinct tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by = 'todd casey';
select distinct tv_channel.country from tv_channel left join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by != 'todd casey' or cartoon.written_by is null;
select distinct tv_channel.country from tv_channel left join cartoon on tv_channel.id = cartoon.channel where cartoon.written_by != 'todd casey' or cartoon.written_by is null;
select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by in ('ben jones', 'michael chang') group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2;
select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by in ('ben jones', 'michael chang') group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2 intersect select tv_channel.series_name, tv_channel.country from tv_channel join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by = 'ben jones' or cartoon.directed_by = 'michael chang' group by tv_channel.series_name, tv_channel.country having count(distinct cartoon.directed_by) = 2;
select tv_channel.pixel_aspect_ratio_par, tv_channel.country from tv_channel where tv_channel.language != 'english';
select tv_channel.pixel_aspect_ratio_par, tv_channel.country from tv_channel where tv_channel.language != 'english';
select id from tv_channel where country in (   select country   from tv_channel   group by country   having count(*) > 2 );
select id from tv_channel where id in (   select id   from tv_channel   group by id   having count(*) > 2 );
select id from tv_channel where id not in (   select distinct channel   from cartoon   where directed_by = 'ben jones' );
select id from tv_channel where id not in (   select distinct channel   from cartoon   where directed_by = 'ben jones' );
select package_option from tv_channel where id not in (   select distinct channel   from cartoon   where directed_by = 'ben jones' );
select distinct tv_channel.package_option from tv_channel left join cartoon on tv_channel.id = cartoon.channel where cartoon.directed_by != 'ben jones' or cartoon.directed_by is null;
select count(distinct poker_player_id) from poker_player;
select count(*) from poker_player;
select earnings from poker_player order by earnings desc limit 1;
select earnings from poker_player order by earnings desc;
select final_table_made, best_finish from poker_player;
select final_table_made, best_finish from poker_player;
select avg(earnings) from poker_player;
select avg(earnings) from poker_player;
select money_rank from poker_player where earnings = (select max(earnings) from poker_player);
select money_rank  from poker_player  where earnings = (select max(earnings) from poker_player);
select max(final_table_made)  from poker_player  where earnings < 200000;
select max(final_table_made)  from poker_player  where earnings < 200000;
select name  from people  where people_id in (select people_id from poker_player);
select name  from people;
select p.name from poker_player pp join people p on pp.people_id = p.people_id where pp.earnings > 300000;
select p.name from poker_player pp join people p on pp.people_id = p.people_id where pp.earnings > 300000;
select p.name from poker_player pp join people p on pp.people_id = p.people_id order by pp.final_table_made asc;
select p.name from poker_player pp join people p on pp.people_id = p.people_id order by pp.final_table_made asc;
select p.birth_date from poker_player pp join people p on pp.people_id = p.people_id where pp.earnings = (select min(earnings) from poker_player);
select birth_date  from people  join poker_player on people.people_id = poker_player.people_id  where earnings = (select min(earnings) from poker_player);
select money_rank  from poker_player  join people on poker_player.people_id = people.people_id  where height = (select max(height) from people);
select money_rank  from poker_player  join people on poker_player.people_id = people.people_id  where height = (select max(height) from people);
select avg(earnings)  from poker_player  join people on poker_player.people_id = people.people_id  where height > 200;
select avg(earnings)  from poker_player  join people on poker_player.people_id = people.people_id  where height > 200;
select p.name from poker_player pp join people p on pp.people_id = p.people_id order by pp.earnings desc;
select p.name from poker_player pp join people p on pp.people_id = p.people_id order by pp.earnings desc;
select p.nationality, count(*) from people p group by p.nationality;
select p.nationality, count(*) from people p group by p.nationality;
select p.nationality from people p group by p.nationality order by count(*) desc limit 1;
select nationality from people group by nationality order by count(*) desc limit 1;
select distinct p1.nationality from people p1 join people p2 on p1.nationality = p2.nationality and p1.people_id <> p2.people_id;
select nationality from people group by nationality having count(*) >= 2;
select name, birth_date from people order by name asc;
select name, birth_date from people order by name asc;
select p.name from people p where p.nationality != 'russia';
select p.name from people p where p.nationality <> 'russia';
select p.name from people p where p.people_id not in (select pp.people_id from poker_player pp);
select p.name from people p where p.people_id not in (select pp.people_id from poker_player pp);
select count(distinct p.nationality) from people p;
select count(distinct nationality) from people;
select count(distinct state) from area_code_state;
select contestant_number, contestant_name from contestants order by contestant_name desc;
select vote_id, phone_number, state from votes;
select max(area_code), min(area_code) from area_code_state;
select max(created)  from votes  where state = 'ca';
select contestant_name  from contestants  where contestant_name != 'jessie alloway';
select distinct state, created  from votes;
select contestant_number, contestant_name  from contestants  where contestant_number in      (select contestant_number       from votes       group by contestant_number       having count(*) >= 2);
select contestant_number, contestant_name  from contestants  where contestant_number =      (select contestant_number       from votes       group by contestant_number       order by count(*) asc       limit 1);
select count(*)  from votes  where state = 'ny' or state = 'ca';
select count(*)  from contestants  where contestant_number not in (select contestant_number from votes);
select area_code  from area_code_state  where area_code in (select area_code from votes group by area_code order by count(*) desc limit 1);
select created, state, phone_number  from votes  where contestant_number = (select contestant_number from contestants where contestant_name = 'tabatha gehling');
select area_code  from votes  where contestant_number = (select contestant_number from contestants where contestant_name = 'tabatha gehling')  and area_code in (select area_code from votes where contestant_number = (select contestant_number from contestants where contestant_name = 'kelly clauss'));
select contestant_name from contestants where contestant_name like '%al%';
select name from country where indepyear > 1950;
select name from country where indepyear > 1950;
select count(*) from country where governmentform like '%republic%';
select count(*) from country where governmentform like '%republic%';
select sum(surfacearea)  from country  where region = 'caribbean';
select sum(surfacearea)  from country  where region = 'caribbean';
select continent  from country  where name = 'anguilla';
select continent  from country  where name = 'anguilla';
select region  from city  where name = 'kabul';
select region  from country  where code = (select countrycode from city where name = 'kabul');
select language  from countrylanguage  where countrycode = 'abw'  order by percentage desc  limit 1;
select language  from countrylanguage  where countrycode = 'abw' and isofficial = 't';
select population, lifeexpectancy  from country  where code = 'bra';
select population, lifeexpectancy  from country  where name = 'brazil';
select country.region, country.population from country where country.name = 'angola';
select country.region, country.population from country where country.name = 'angola';
select avg(country.lifeexpectancy) from country where country.region = 'central africa';
select avg(country.lifeexpectancy) from country where country.region = 'central africa';
select country.name from country where country.continent = 'asia' order by country.lifeexpectancy asc limit 1;
select name  from country  where continent = 'asia'  order by lifeexpectancy asc  limit 1;
select sum(population), max(gnp)  from country  where continent = 'asia';
select sum(population), max(gnp)  from country  where continent = 'asia';
select avg(lifeexpectancy)  from country  where continent = 'africa' and governmentform like '%republic%';
select avg(lifeexpectancy)  from country  where continent = 'africa' and governmentform like '%republic%';
select sum(surfacearea)  from country  where continent in ('asia', 'europe');
select sum(surfacearea)  from country  where continent in ('asia', 'europe');
select sum(population)  from city  where district = 'gelderland';
select population  from city  where district = 'gelderland';
select avg(gnp), sum(population)  from country  where governmentform like '%us territory%';
select avg(gnp), sum(population) from country where continent = 'north america' and governmentform like '%us territory%';
select count(distinct language) from countrylanguage;
select count(distinct language) from countrylanguage;
select count(distinct governmentform) from country where continent = 'africa';
select count(distinct governmentform) from country where continent = 'africa';
select count(distinct language)  from countrylanguage  where countrycode = 'abw';
select count(distinct language)  from countrylanguage  where countrycode = 'abw' and isofficial = 't';
select count(distinct language)  from countrylanguage  where countrycode = 'afg' and isofficial = 't';
select count(distinct language)  from countrylanguage  where countrycode = 'afg' and isofficial = 't';
select country.name  from country  join countrylanguage on country.code = countrylanguage.countrycode  group by country.code  order by count(distinct countrylanguage.language) desc  limit 1;
select country.name  from country  join countrylanguage on country.code = countrylanguage.countrycode  where countrylanguage.language in ('english', 'dutch')  group by country.code  order by count(distinct countrylanguage.language) desc  limit 1;
select country.continent  from country  join countrylanguage on country.code = countrylanguage.countrycode  group by country.continent  order by count(distinct countrylanguage.language) desc  limit 1;
select country.continent  from country  join countrylanguage on country.code = countrylanguage.countrycode  group by country.continent  order by count(distinct countrylanguage.language) desc  limit 1;
select count(distinct countrylanguage.countrycode)  from countrylanguage  where countrylanguage.language in ('english', 'dutch')  group by countrylanguage.countrycode  having count(distinct countrylanguage.language) = 2;
select count(distinct countrylanguage.countrycode)  from countrylanguage  where countrylanguage.language in ('english', 'dutch');
select distinct c.name from country c join countrylanguage cl1 on c.code = cl1.countrycode and cl1.language = 'english' and cl1.isofficial = 't' join countrylanguage cl2 on c.code = cl2.countrycode and cl2.language = 'french' and cl2.isofficial = 't';
select distinct c.name from country c join countrylanguage cl1 on c.code = cl1.countrycode and cl1.language = 'english' join countrylanguage cl2 on c.code = cl2.countrycode and cl2.language = 'french' where c.name not in (     select distinct c.name     from country c     join countrylanguage cl1 on c.code = cl1.countrycode and cl1.language = 'english' and cl1.isofficial = 'f'     join countrylanguage cl2 on c.code = cl2.countrycode and cl2.language = 'french' and cl2.isofficial = 'f' );
select distinct c.name from country c join countrylanguage cl1 on c.code = cl1.countrycode and cl1.language = 'english' and cl1.isofficial = 't' join countrylanguage cl2 on c.code = cl2.countrycode and cl2.language = 'french' and cl2.isofficial = 't';
select distinct c.name from country c join countrylanguage cl1 on c.code = cl1.countrycode and cl1.language = 'english' and cl1.isofficial = 't' join countrylanguage cl2 on c.code = cl2.countrycode and cl2.language = 'french' and cl2.isofficial = 't';
select count(distinct c.continent) from country c join countrylanguage cl on c.code = cl.countrycode and cl.language = 'chinese' and cl.isofficial = 't';
select count(distinct country.continent) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language = 'chinese';
select distinct region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch');
select distinct country.region from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch');
select distinct country.code, country.name from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.language in ('english', 'dutch') and countrylanguage.isofficial = 't';
select * from country where code in (   select distinct countrycode   from countrylanguage   where language in ('english', 'dutch') and isofficial = 't' );
select language from countrylanguage join country on countrylanguage.countrycode = country.code where continent = 'asia' group by language order by sum(case when continent = 'asia' then 1 else 0 end * percentage) desc limit 1;
select language from countrylanguage join country on countrylanguage.countrycode = country.code where continent = 'asia' group by language having count(distinct country.name) = (   select max(num_countries)   from (     select count(distinct country.name) as num_countries     from countrylanguage     join country on countrylanguage.countrycode = country.code     where continent = 'asia'     group by language   ) );
select language from countrylanguage join country on countrylanguage.countrycode = country.code where governmentform like '%republic%' group by language having count(distinct country.name) = 1;
select language from countrylanguage join country on countrylanguage.countrycode = country.code where governmentform like '%republic%' group by language having count(distinct country.name) = 1;
select city.name, city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' order by city.population desc limit 1;
select city.name, city.population from city join countrylanguage on city.countrycode = countrylanguage.countrycode where countrylanguage.language = 'english' order by city.population desc limit 1;
select country.name, country.population, country.lifeexpectancy from country where continent = 'asia' order by surfacearea desc limit 1;
select country.name, country.population, country.lifeexpectancy from country where continent = 'asia' order by surfacearea desc limit 1;
select avg(country.lifeexpectancy) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 'f' and countrylanguage.language = 'english';
select avg(country.lifeexpectancy) from country join countrylanguage on country.code = countrylanguage.countrycode where countrylanguage.isofficial = 'f' and countrylanguage.language = 'english';
select sum(population)  from country  where code not in      (select countrycode       from countrylanguage       where language = 'english');
select sum(population)  from country  where code in      (select countrycode       from countrylanguage       where language != 'english'       and isofficial = 't');
select language  from countrylanguage  where countrycode =      (select code       from country       where headofstate = 'beatrix'       and governmentform like '%monarchy%');
select language  from countrylanguage  where countrycode =      (select code       from country       where headofstate = 'beatrix'       and governmentform like '%monarchy%'       and isofficial = 't');
select count(distinct language)  from countrylanguage  where countrycode in      (select code       from country       where indepyear < 1930)  and isofficial = 't';
select count(distinct language) from countrylanguage where countrycode in (   select code   from country   where indepyear < 1930 );
select name from country where surfacearea > (   select max(surfacearea)   from country   where continent = 'europe' );
select name from country where surfacearea > (   select max(surfacearea)   from country   where continent = 'europe' );
select name from country where continent = 'africa' and population < (   select min(population)   from country   where continent = 'asia' );
select name from country where continent = 'africa' and population < (   select min(population)   from country   where continent = 'asia' );
select c.code from country c where c.continent = 'asia' and c.population > (select max(population) from country where continent = 'africa');
select c.code from country c where c.continent = 'asia' and c.population > all(select population from country where continent = 'africa');
select distinct cl.countrycode from countrylanguage cl where cl.language != 'english';
select distinct cl.countrycode from countrylanguage cl where cl.language != 'english';
select distinct cl.countrycode from countrylanguage cl where cl.countrycode not in (select countrycode from countrylanguage where language = 'english');
select distinct countrycode from countrylanguage where language != 'english';
select distinct countrycode from countrylanguage where language != 'english' and governmentform != 'republic';
select distinct countrycode from countrylanguage where language != 'english' and governmentform not like '%republic%';
select city.name from city join country on city.countrycode = country.code join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'europe' and countrylanguage.language != 'english' and countrylanguage.isofficial = 't';
select city.name from city join country on city.countrycode = country.code join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'europe' and countrylanguage.language != 'english' and countrylanguage.isofficial = 't';
select distinct city.name from city join country on city.countrycode = country.code join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'asia' and countrylanguage.language = 'chinese' and countrylanguage.isofficial = 't' order by city.name;
select distinct city.name from city join country on city.countrycode = country.code join countrylanguage on country.code = countrylanguage.countrycode where country.continent = 'asia' and countrylanguage.language = 'chinese' and countrylanguage.isofficial = 't' order by city.name;
select country.name, country.indepyear, country.surfacearea from country where country.population = (select min(population) from country);
select country.name, country.indepyear, country.surfacearea from country where country.population = (select min(population) from country);
select country.name, country.headofstate, country.population from country where country.surfacearea = (select max(surfacearea) from country);
select name, population, headofstate from country where surfacearea = (select max(surfacearea) from country);
select country.name, count(countrylanguage.language) from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name having count(countrylanguage.language) >= 3;
select country.name, count(countrylanguage.language) from country join countrylanguage on country.code = countrylanguage.countrycode group by country.name having count(countrylanguage.language) > 2;
select district, count(id) from city where population > (select avg(population) from city) group by district;
select district, count(id) from city where population > (select avg(population) from city) group by district;
select governmentform, sum(population) as total_population from country where lifeexpectancy > 72 group by governmentform;
select governmentform, sum(population) as total_population from country where lifeexpectancy > 72 group by governmentform;
select continent, avg(lifeexpectancy) as avg_life_expectancy, sum(population) as total_population from country where lifeexpectancy < 72 group by continent;
select continent, avg(lifeexpectancy) as avg_life_expectancy, sum(population) as total_population from country where lifeexpectancy < 72 group by continent;
select count(*) as num_countries from country where continent = 'asia';
select count(*)  from country  where continent = 'asia';
select name  from country  where continent = 'europe' and population = 80000;
select name  from country  where continent = 'europe' and population = 80000;
select sum(population), avg(surfacearea)  from country  where continent = 'north america' and surfacearea > 3000;
select sum(population), avg(surfacearea)  from country  where continent = 'north america' and surfacearea > 3000;
select name  from city  where population between 160000 and 900000;
select name  from city  where population between 160000 and 900000;
select language  from countrylanguage  group by language  order by count(distinct countrycode) desc  limit 1;
select language  from countrylanguage  group by language  order by count(distinct countrycode) desc  limit 1;
select countrylanguage.language, countrylanguage.countrycode, max(countrylanguage.percentage)  from countrylanguage  join (select countrycode, max(percentage) as max_percentage        from countrylanguage        group by countrycode) as subquery  on countrylanguage.countrycode = subquery.countrycode and countrylanguage.percentage = subquery.max_percentage  group by countrylanguage.countrycode;
select cl.language, c.code, max(cl.percentage) from countrylanguage cl join country c on cl.countrycode = c.code group by c.code;
select count(distinct cl.countrycode), max(cl.percentage) from countrylanguage cl where cl.language = 'spanish';
select count(distinct cl.countrycode), max(cl.percentage) from countrylanguage cl where cl.language = 'spanish' and cl.isofficial = 't';
select cl.countrycode, max(cl.percentage) from countrylanguage cl where cl.language = 'spanish' group by cl.countrycode order by max(cl.percentage) desc limit 1;
select cl.countrycode, max(cl.percentage) from countrylanguage cl where cl.language = 'spanish' and cl.isofficial = 't' group by cl.countrycode order by max(cl.percentage) desc limit 1;
select count(conductor_id)  from conductor;
select count(distinct name)  from conductor;
select name  from conductor  order by age asc;
select name  from conductor  order by age;
select name  from conductor  where nationality != 'usa';
select conductor.name from conductor where conductor.nationality != 'usa';
select orchestra.record_company from orchestra order by orchestra.year_of_founded desc;
select orchestra.record_company from orchestra order by orchestra.year_of_founded desc limit 1;
select avg(show.attendance) from show;
select avg(show.attendance) from show;
select max(share), min(share) from performance where type != 'live final';
select max(share), min(share) from performance where type <> 'live final';
select count(distinct nationality) from conductor;
select count(distinct nationality) from conductor;
select name from conductor order by year_of_work desc;
select name  from conductor  order by year_of_work desc  limit 1;
select name  from conductor  order by year_of_work desc  limit 1;
select name  from conductor  order by year_of_work desc  limit 1;
select conductor.name, orchestra.orchestra  from conductor  join orchestra on conductor.conductor_id = orchestra.conductor_id;
select conductor.name, orchestra.orchestra  from conductor  join orchestra on conductor.conductor_id = orchestra.conductor_id;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count(distinct orchestra.orchestra_id) > 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name having count(distinct orchestra.orchestra_id) > 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name order by count(distinct orchestra.orchestra_id) desc limit 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id group by conductor.name order by count(distinct orchestra.orchestra_id) desc limit 1;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008;
select conductor.name from conductor join orchestra on conductor.conductor_id = orchestra.conductor_id where orchestra.year_of_founded > 2008;
select record_company, count(distinct orchestra_id) from orchestra group by record_company;
select record_company, count(distinct orchestra_id) from orchestra group by record_company having count(distinct orchestra_id) = 1;
select major_record_format, count(orchestra_id) from orchestra group by major_record_format order by count(orchestra_id) asc;
select major_record_format, count(orchestra_id) from orchestra group by major_record_format order by count(orchestra_id) desc;
select record_company from orchestra group by record_company order by count(distinct orchestra_id) desc limit 1;
select record_company from orchestra group by record_company having count(distinct orchestra_id) = (   select max(count_orchestras)   from (     select count(distinct orchestra_id) as count_orchestras     from orchestra     group by record_company   ) );
select orchestra from orchestra where orchestra_id not in (   select orchestra_id   from performance );
select orchestra from orchestra where orchestra_id not in (   select orchestra_id   from performance );
select record_company from orchestra where year_of_founded < 2003 group by record_company intersect select record_company from orchestra where year_of_founded >= 2003 group by record_company;
select o.record_company from orchestra o join (   select orchestra_id   from performance   join orchestra on performance.orchestra_id = orchestra.orchestra_id   where orchestra.year_of_founded < 2003   group by orchestra_id ) o1 on o.orchestra_id = o1.orchestra_id join (   select orchestra_id   from performance   join orchestra on performance.orchestra_id = orchestra.orchestra_id   where orchestra.year_of_founded >= 2003   group by orchestra_id ) o2 on o.orchestra_id = o2.orchestra_id group by o.record_company having count(distinct o.orchestra_id) > 1;
select count(distinct orchestra_id) from orchestra where major_record_format in ('cd', 'dvd');
select count(distinct orchestra_id) from orchestra where major_record_format in ('cd', 'dvd');
select distinct year_of_founded from orchestra where orchestra_id in (   select orchestra_id   from performance   group by orchestra_id   having count(distinct performance_id) > 1 );
select year_of_founded from orchestra where orchestra_id in (   select orchestra_id   from performance   group by orchestra_id   having count(distinct performance_id) > 1 );
select count(*) from highschooler;
select count(*) from highschooler;
select name, grade from highschooler;
select name, grade from highschooler;
select distinct grade from highschooler;
select grade from highschooler;
select grade from highschooler where name = 'kyle';
select grade from highschooler where name = 'kyle';
select name from highschooler where grade = 10;
select name from highschooler where grade = 10;
select id from highschooler where name = 'kyle';
select id from highschooler where name = 'kyle';
select count(*) from highschooler where grade in (9, 10);
select count(*) from highschooler where grade in (9, 10);
select grade, count(*) from highschooler group by grade;
select grade, count(*)  from highschooler  group by grade;
select grade  from highschooler  group by grade  order by count(*) desc  limit 1;
select grade  from highschooler  group by grade  having count(*) = (   select max(count)    from (     select count(*) as count      from highschooler      group by grade   ) );
select grade  from highschooler  group by grade  having count(*) >= 4;
select grade  from highschooler  group by grade  having count(*) >= 4;
select friend.student_id, count(friend.friend_id)  from friend  group by friend.student_id;
select friend.student_id, count(friend.friend_id)  from friend  group by friend.student_id  having friend.student_id = 1101;
select highschooler.name, count(friend.friend_id)  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.name;
select highschooler.name, count(friend.friend_id)  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.name  having highschooler.name = 'haley';
select highschooler.name  from highschooler  join friend on highschooler.id = friend.student_id  group by highschooler.name  order by count(friend.friend_id) desc  limit 1;
select h.name from highschooler h join friend f on h.id = f.student_id group by h.id order by count(f.friend_id) desc limit 1;
select h.name from highschooler h join friend f on h.id = f.student_id group by h.id having count(f.friend_id) >= 3;
select h.name from highschooler h join friend f on h.id = f.student_id group by h.id having count(f.friend_id) >= 3;
select count(f.friend_id) from highschooler h join friend f on h.id = f.student_id where h.name = 'kyle';
select count(f.friend_id) from highschooler h join friend f on h.id = f.student_id where h.name = 'kyle';
select student_id  from highschooler  where student_id not in (select student_id from friend union select friend_id from friend);
select id  from highschooler  where id not in (select student_id from friend union select friend_id from friend);
select name  from highschooler  where id not in (select student_id from friend union select friend_id from friend);
select name  from highschooler  where id not in (select student_id from friend union select friend_id from friend);
select distinct student_id  from friend  inner join likes on friend.friend_id = likes.liked_id  where friend.student_id in (select student_id from friend);
select distinct f1.student_id  from friend f1  join friend f2 on f1.friend_id = f2.student_id  join likes l on f2.friend_id = l.liked_id and f1.student_id = l.student_id;
select student_id, count(*)  from likes  group by student_id;
select student_id, sum(1)  from likes  group by student_id;
select h.name, count(*)  from highschooler h  join likes l on h.id = l.student_id  group by h.name;
select h.name, count(*)  from highschooler h  join likes l on h.id = l.student_id  group by h.name;
select h.name from highschooler h join likes l on h.id = l.student_id group by h.id order by count(l.liked_id) desc limit 1;
select h.name from highschooler h join likes l on h.id = l.student_id group by h.id order by count(l.liked_id) desc limit 1;
select h.name from highschooler h join likes l on h.id = l.student_id group by h.id having count(l.liked_id) >= 2;
select h.name from highschooler h join likes l on h.id = l.student_id group by h.id having count(l.liked_id) >= 2;
select h.name from highschooler h join friend f on h.id = f.student_id where h.grade > 5 group by h.id having count(f.friend_id) >= 2;
select h.name from highschooler h join friend f on h.id = f.student_id where h.grade > 5 group by h.id having count(f.friend_id) >= 2;
select count(*) from likes where student_id = (select id from highschooler where name = 'kyle');
select count(*) from likes where student_id = (select id from highschooler where name = 'kyle');
select avg(h.grade) from highschooler h join friend f on h.id = f.student_id group by h.id having count(f.friend_id) > 0;
select avg(h.grade) from highschooler h join friend f on h.id = f.student_id group by h.id having count(f.friend_id) > 0;
select min(grade)  from highschooler  where id not in (select student_id from friend union select friend_id from friend);
select min(grade)  from highschooler  where id not in (select student_id from friend union select friend_id from friend);
select distinct state  from owners  where state in (select state from professionals)  group by state  having count(distinct owners.owner_id) > 0 and count(distinct professionals.professional_id) > 0;
select distinct state  from owners  where state in (select state from professionals)  group by state  having count(distinct owners.owner_id) > 0 and count(distinct professionals.professional_id) > 0;
select avg(age)  from dogs  where dog_id in (select dog_id from treatments);
select avg(age)  from dogs  inner join treatments on dogs.dog_id = treatments.dog_id;
select professionals.professional_id, professionals.last_name, professionals.cell_number  from professionals  left join treatments on professionals.professional_id = treatments.professional_id  where professionals.state = 'indiana' or (select count(*) from treatments where treatments.professional_id = professionals.professional_id) > 2;
select professionals.professional_id, professionals.last_name, professionals.cell_number  from professionals  left join treatments on professionals.professional_id = treatments.professional_id  where professionals.state = 'indiana' or (select count(*) from treatments where treatments.professional_id = professionals.professional_id) > 2;
select dogs.name  from dogs  left join treatments on dogs.dog_id = treatments.dog_id  where treatments.cost_of_treatment <= 1000 or treatments.cost_of_treatment is null;
select dogs.name  from dogs  left join treatments on dogs.dog_id = treatments.dog_id  left join owners on dogs.owner_id = owners.owner_id  where (select sum(cost_of_treatment) from treatments where treatments.dog_id = dogs.dog_id) <= 1000 or (select sum(cost_of_treatment) from treatments where treatments.dog_id = dogs.dog_id) is null;
select distinct p.first_name from professionals p where p.role_code in ('professional', 'owner') and p.first_name not in (   select d.name   from dogs d ) limit 1;
select distinct o.first_name from owners o where o.first_name not in (   select d.name   from dogs d ) union select distinct p.first_name from professionals p where p.role_code in ('professional', 'owner') and p.first_name not in (   select d.name   from dogs d );
select p.professional_id, p.role_code, p.email_address from professionals p where p.professional_id not in (   select t.professional_id   from treatments t );
select p.professional_id, p.role_code, p.email_address from professionals p where p.professional_id not in (   select t.professional_id   from treatments t );
select d.owner_id, o.first_name, o.last_name from dogs d join owners o on d.owner_id = o.owner_id group by d.owner_id order by count(*) desc limit 1;
select owners.owner_id, owners.first_name, owners.last_name from owners join dogs on owners.owner_id = dogs.owner_id group by owners.owner_id order by count(dogs.dog_id) desc limit 1;
select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count(treatments.treatment_id) >= 2;
select professionals.professional_id, professionals.role_code, professionals.first_name from professionals join treatments on professionals.professional_id = treatments.professional_id group by professionals.professional_id having count(treatments.treatment_id) >= 2;
select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_code order by count(dogs.dog_id) desc limit 1;
select breeds.breed_name from breeds join dogs on breeds.breed_code = dogs.breed_code group by breeds.breed_code order by count(dogs.dog_id) desc limit 1;
select dogs.owner_id, owners.last_name from dogs join owners on dogs.owner_id = owners.owner_id join treatments on dogs.dog_id = treatments.dog_id group by dogs.owner_id order by sum(treatments.cost_of_treatment) desc limit 1;
select dogs.owner_id, owners.last_name from dogs join owners on dogs.owner_id = owners.owner_id join treatments on dogs.dog_id = treatments.dog_id group by dogs.owner_id order by sum(treatments.cost_of_treatment) desc limit 1;
select treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum(treatments.cost_of_treatment) limit 1;
select treatment_types.treatment_type_description from treatment_types join treatments on treatment_types.treatment_type_code = treatments.treatment_type_code group by treatments.treatment_type_code order by sum(treatments.cost_of_treatment) limit 1;
select dogs.owner_id, owners.zip_code from dogs join owners on dogs.owner_id = owners.owner_id group by dogs.owner_id order by sum(dogs.weight * 0.5) desc limit 1;
select o.owner_id, o.zip_code from owners o join dogs d on o.owner_id = d.owner_id join treatments t on d.dog_id = t.dog_id group by o.owner_id order by sum(t.cost_of_treatment) desc limit 1;
select p.professional_id, p.cell_number from professionals p join treatments t on p.professional_id = t.professional_id group by p.professional_id having count(distinct t.treatment_type_code) >= 2;
select p.professional_id, p.cell_number from professionals p join treatments t on p.professional_id = t.professional_id group by p.professional_id having count(distinct t.treatment_type_code) >= 2;
select t.date_of_treatment, p.first_name from treatments t join professionals p on t.professional_id = p.professional_id;
select t.date_of_treatment, p.first_name from treatments t join professionals p on t.professional_id = p.professional_id;
select cost_of_treatment, treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;
select cost_of_treatment, treatment_type_description from treatments join treatment_types on treatments.treatment_type_code = treatment_types.treatment_type_code;
select owners.first_name, owners.last_name, sizes.size_description from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code;
select owners.first_name, owners.last_name, sizes.size_description from owners join dogs on owners.owner_id = dogs.owner_id join sizes on dogs.size_code = sizes.size_code;
select owners.first_name, dogs.name from owners join dogs on owners.owner_id = dogs.owner_id;
select o.first_name, d.name from owners o join dogs d on o.owner_id = d.owner_id where o.first_name = 'jaclyn';
select d.name, t.date_of_treatment from dogs d join breeds b on d.breed_code = b.breed_code join treatments t on d.dog_id = t.dog_id where b.breed_name = (   select breed_name   from breeds   order by breed_code desc   limit 1 ) order by t.date_of_treatment asc limit 1;
select d.name, t.date_of_treatment from dogs d join breeds b on d.breed_code = b.breed_code join treatments t on d.dog_id = t.dog_id where b.breed_name = (   select breed_name   from breeds   order by breed_code desc   limit 1 );
select o.first_name, d.name from owners o join dogs d on o.owner_id = d.owner_id where o.state = 'virginia';
select o.first_name, d.name from owners o join dogs d on o.owner_id = d.owner_id where o.state = 'virginia';
select min(date_arrived) as arriving_date, max(date_departed) as departing_date from dogs where dog_id in (   select dog_id   from treatments );
select min(date_arrived) as arriving_date, max(date_departed) as departing_date from dogs where dog_id in (   select dog_id   from treatments );
select last_name from owners where owner_id = (   select owner_id   from dogs   where age = (     select min(age)     from dogs   ) );
select last_name from owners where owner_id = (   select owner_id   from dogs   where age = (     select min(age)     from dogs   ) );
select email_address from professionals where state = 'hawaii' or state = 'wisconsin';
select email_address from professionals where state = 'hawaii' or state = 'wisconsin';
select min(date_arrived) || ' ' || min(date_arrived_time), max(date_departed) || ' ' || max(date_departed_time) from dogs;
select date_arrived || ' ' || date_arrived_time, date_departed || ' ' || date_departed_time from dogs;
select count(distinct dog_id) from treatments;
select count(distinct dog_id) from treatments;
select count(distinct professional_id) from treatments where treatment_type_code in (   select treatment_type_code   from treatment_types   where treatment_type_description like '%dog%' );
select count(distinct professional_id) from treatments;
select role_code, street, city, state from professionals where city like '%west%';
select role_code, street, city, state from professionals where city like '%west%';
select first_name, last_name, email_address from owners where state like '%north%';
select first_name, last_name, email_address from owners where state like '%north%' limit 1;
select count(*) from dogs where age < (select avg(age) from dogs);
select count(*) from dogs where age < (select avg(age) from dogs);
select cost_of_treatment from treatments order by date_of_treatment desc limit 1;
select max(cost_of_treatment) from treatments where date_of_treatment = (select max(date_of_treatment) from treatments);
select count(*)  from dogs  where dog_id not in (select dog_id from treatments);
select count(*)  from dogs  where dog_id not in (select dog_id from treatments);
select count(*)  from owners  where owner_id not in (select owner_id from dogs where date_departed is null);
select count(*)  from owners  where owner_id not in (select owner_id from dogs where date_departed is null);
select count(distinct professional_id)  from professionals  where professional_id not in (select professional_id from treatments);
select count(distinct professional_id)  from treatments  where dog_id in (     select dog_id      from dogs      where abandoned_yn = '1' );
select name, age, weight  from dogs  where abandoned_yn = '1';
select name, age, weight  from dogs  where abandoned_yn = '1';
select avg(age)  from dogs;
select avg(age)  from dogs;
select max(age) from dogs;
select age from dogs order by age desc limit 1;
select charge_type, charge_amount from charges;
select charge_type, charge_amount from charges;
select max(charge_amount) from charges;
select max(charge_amount)  from charges;
select email_address, cell_number, home_phone  from professionals;
select email_address, cell_number, home_phone  from professionals;
select distinct breed_code, size_code  from dogs;
select distinct breed_code, size_code  from dogs;
select professionals.first_name, treatments.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id;
select professionals.first_name, treatments.treatment_type_description from professionals join treatments on professionals.professional_id = treatments.professional_id;
select count(*) from singer;
select count(*) from singer;
select name from singer order by net_worth_millions asc;
select name from singer order by net_worth_millions asc;
select birth_year, citizenship from singer;
select birth_year, citizenship from singer;
select name from singer where citizenship != 'france';
select name from singer where citizenship != 'france';
select name  from singer  where birth_year = 1948 or birth_year = 1949;
select name  from singer  where birth_year = 1948 or birth_year = 1949;
select name  from singer  order by net_worth_millions desc  limit 1;
select name  from singer  order by net_worth_millions desc  limit 1;
select citizenship, count(*)  from singer  group by citizenship;
select citizenship, count(*)  from singer  group by citizenship  having count(*) = 1;
select citizenship  from singer  group by citizenship  order by count(*) desc  limit 1;
select citizenship  from singer  group by citizenship  order by count(*) desc  limit 1;
select citizenship, max(net_worth_millions)  from singer  group by citizenship;
select citizenship, max(net_worth_millions)  from singer  group by citizenship;