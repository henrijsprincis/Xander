SELECT COUNT(*) FROM singer;
SELECT COUNT(DISTINCT singer_id) FROM singer_in_concert;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT singer.country, COUNT(singer.singer_id) FROM singer GROUP BY singer.country;
SELECT singer.country, COUNT(singer.singer_id) FROM singer GROUP BY singer.country;
SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG(age) FROM singer);
SELECT singer.song_name FROM singer WHERE singer.age > (SELECT AVG(age) FROM singer);
SELECT stadium.location, stadium.name FROM stadium WHERE stadium.capacity BETWEEN 5000 AND 10000;
SELECT location, name  FROM stadium  WHERE capacity BETWEEN 5000 AND 10000;
SELECT MAX(capacity), AVG(capacity)  FROM stadium;
SELECT AVG(capacity), MAX(capacity)  FROM stadium;
SELECT name, capacity  FROM stadium  WHERE average = (SELECT MAX(average) FROM stadium);
SELECT name, capacity  FROM stadium  WHERE average = (SELECT MAX(average) FROM stadium);
SELECT COUNT(*)  FROM concert  WHERE year = 2014 OR year = 2015;
SELECT COUNT(*)  FROM concert  WHERE year = 2014 OR year = 2015;
SELECT stadium.name, COUNT(concert.concert_id)  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name;
SELECT stadium.name, COUNT(concert.concert_id)  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name;
SELECT stadium.name, stadium.capacity  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year >= 2014  GROUP BY stadium.name  ORDER BY COUNT(concert.concert_id) DESC  LIMIT 1;
SELECT name, capacity FROM stadium WHERE stadium_id = (   SELECT stadium_id   FROM concert   WHERE year > 2013   GROUP BY stadium_id   ORDER BY COUNT(*) DESC   LIMIT 1 );
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT name FROM stadium WHERE stadium_id NOT IN (   SELECT DISTINCT stadium_id   FROM concert );
SELECT name FROM stadium WHERE stadium_id NOT IN (   SELECT DISTINCT stadium_id   FROM concert );
SELECT DISTINCT s1.country FROM singer s1, singer s2, concert c, singer_in_concert sc1, singer_in_concert sc2 WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = c.concert_id AND sc2.concert_id = c.concert_id;
SELECT DISTINCT s.name FROM stadium s WHERE s.stadium_id NOT IN (     SELECT DISTINCT c.stadium_id     FROM concert c     WHERE c.year = 2014 );
SELECT DISTINCT s.name FROM stadium s WHERE s.stadium_id NOT IN (     SELECT DISTINCT c.stadium_id     FROM concert c     WHERE c.year = 2014 );
SELECT c.concert_name, c.theme, COUNT(sc.singer_id) FROM concert c, singer_in_concert sc WHERE c.concert_id = sc.concert_id GROUP BY c.concert_id;
SELECT c.concert_name, c.theme, COUNT(sc.singer_id) FROM concert c, singer_in_concert sc WHERE c.concert_id = sc.concert_id GROUP BY c.concert_id;
SELECT singer.name, COUNT(concert.concert_id) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.name;
SELECT singer.name, COUNT(concert.concert_id) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.name;
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014;
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014;
SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%';
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE song_name LIKE '%Hey%';
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT stadium_id FROM concert WHERE year = 2015 );
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT stadium_id FROM concert WHERE year = 2015 );
SELECT COUNT(*) FROM concert WHERE stadium_id = (     SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE stadium_id = (     SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog');
SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog');
SELECT MAX(weight), pettype FROM pets GROUP BY pettype;
SELECT MAX(weight), pettype  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  GROUP BY pettype;
SELECT COUNT(*)  FROM has_pet  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20;
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20;
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.sex = 'F';
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.sex = 'F';
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype IN ('cat', 'dog'));
SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype IN ('cat', 'dog'));
SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' INTERSECT SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'dog');
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND student.stuid IN      (SELECT student.stuid       FROM student       JOIN has_pet ON student.stuid = has_pet.stuid       JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'dog');
SELECT student.major, student.age  FROM student  WHERE student.stuid NOT IN      (SELECT student.stuid       FROM student       JOIN has_pet ON student.stuid = has_pet.stuid       JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'cat');
SELECT student.major, student.age  FROM student  WHERE student.stuid NOT IN      (SELECT student.stuid       FROM student       JOIN has_pet ON student.stuid = has_pet.stuid       JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'cat')  GROUP BY student.major, student.age;
SELECT student.stuid  FROM student  WHERE student.stuid NOT IN      (SELECT student.stuid       FROM student       JOIN has_pet ON student.stuid = has_pet.stuid       JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'cat');
SELECT student.stuid  FROM student  WHERE student.stuid NOT IN      (SELECT student.stuid       FROM student       JOIN has_pet ON student.stuid = has_pet.stuid       JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'cat');
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (   SELECT student.stuid   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid   WHERE pets.pettype = 'cat' );
SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (   SELECT student.stuid   FROM student   JOIN has_pet ON student.stuid = has_pet.stuid   JOIN pets ON has_pet.petid = pets.petid   WHERE pets.pettype = 'cat' );
SELECT pettype, weight FROM pets WHERE pet_age = (   SELECT MIN(pet_age)   FROM pets );
SELECT pettype, weight FROM pets WHERE pet_age = (   SELECT MIN(pet_age)   FROM pets );
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1;
SELECT pets.petid, pets.weight FROM pets WHERE pets.pet_age > 1;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight) FROM pets GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight) FROM pets GROUP BY pets.pettype;
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid;
SELECT DISTINCT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid;
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith';
SELECT has_pet.petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith';
SELECT COUNT(pets.petid), student.stuid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY student.stuid;
SELECT has_pet.stuid, COUNT(pets.petid)  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  GROUP BY has_pet.stuid;
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.stuid  HAVING COUNT(has_pet.petid) > 1;
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'  GROUP BY student.stuid  HAVING COUNT(pets.petid) > 1;
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT AVG(age)  FROM student  WHERE stuid NOT IN (SELECT stuid FROM has_pet);
SELECT AVG(age)  FROM student  WHERE stuid NOT IN (SELECT stuid FROM has_pet);
SELECT COUNT(DISTINCT continent)  FROM countries;
SELECT COUNT(DISTINCT continent)  FROM countries;
SELECT continents.contid, continents.continent, COUNT(countries.countryid)  FROM continents  LEFT JOIN countries ON continents.contid = countries.continent  GROUP BY continents.contid, continents.continent;
SELECT continents.contid, continents.continent, COUNT(countries.countryid)  FROM continents  JOIN countries ON continents.continent = countries.continent  GROUP BY continents.continent;
SELECT COUNT(countryid)  FROM countries;
SELECT COUNT(DISTINCT countryname)  FROM countries;
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid)  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id;
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid)  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id;
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);
SELECT model_list.model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);
SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.year = 1970 GROUP BY car_makers.maker;
SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.modelid = cars_data.id  WHERE cars_data.year = 1970;
SELECT car_names.make, MIN(cars_data.year)  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  GROUP BY car_names.make;
SELECT car_names.make, cars_data.year  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = (SELECT MIN(year) FROM cars_data);
SELECT DISTINCT car_names.make  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980;
SELECT DISTINCT car_names.model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980;
SELECT c.continent, COUNT(DISTINCT cm.country) FROM continents c JOIN countries co ON c.contid = co.continent JOIN car_makers cm ON co.countryid = cm.country GROUP BY c.continent;
SELECT c.continent, COUNT(DISTINCT cm.country) FROM continents c JOIN countries co ON c.contid = co.continent JOIN car_makers cm ON co.countryid = cm.country GROUP BY c.continent;
SELECT cm.country FROM car_makers cm GROUP BY cm.country ORDER BY COUNT(DISTINCT cm.maker) DESC LIMIT 1;
SELECT co.countryname FROM countries co JOIN car_makers cm ON co.countryid = cm.country GROUP BY co.countryname ORDER BY COUNT(DISTINCT cm.maker) DESC LIMIT 1;
SELECT COUNT(DISTINCT cl.model), cm.fullname FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN car_names cn ON ml.modelid = cn.modelid JOIN cars_data cd ON cn.makeid = cd.id GROUP BY cm.fullname;
SELECT COUNT(model_list.modelid) AS num_models, car_makers.id, car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id;
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'amc hornet sportabout (sw)';
SELECT cars_data.accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company' AND car_names.make = 'amc hornet sportabout (sw)';
SELECT COUNT(car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France';
SELECT COUNT(DISTINCT car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'France';
SELECT COUNT(DISTINCT model)  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States';
SELECT COUNT(DISTINCT model)  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States';
SELECT AVG(mpg)  FROM cars_data  WHERE cylinders = 4;
SELECT AVG(mpg)  FROM cars_data  WHERE cylinders = 4;
SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974;
SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974;
SELECT car_makers.maker, model_list.model  FROM car_makers  JOIN model_list ON car_makers.id = model_list.makerid;
SELECT car_makers.maker, car_names.make  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid;
SELECT DISTINCT countries.countryname, countries.countryid  FROM countries  JOIN car_makers ON countries.countryname = car_makers.country;
SELECT DISTINCT countries.countryname, countries.countryid  FROM countries  JOIN car_makers ON countries.countryname = car_makers.country;
SELECT COUNT(*)  FROM cars_data  WHERE horsepower > 150;
SELECT COUNT(*)  FROM cars_data  WHERE horsepower > 150;
SELECT AVG(weight), year  FROM cars_data  GROUP BY year;
SELECT AVG(weight), year  FROM cars_data  GROUP BY year;
SELECT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  WHERE countries.continent = 'europe'  GROUP BY countries.countryname  HAVING COUNT(DISTINCT car_makers.maker) >= 3;
SELECT DISTINCT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  JOIN cars_data ON car_makers.id = cars_data.id  WHERE countries.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(DISTINCT car_makers.maker) >= 3;
SELECT MAX(cars_data.horsepower), car_names.make  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE cars_data.cylinders = 3;
SELECT MAX(cars_data.horsepower), car_names.make  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE cars_data.cylinders = 3;
SELECT car_names.make  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT car_names.model  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT AVG(horsepower)  FROM cars_data  WHERE year < 1980;
SELECT AVG(horsepower)  FROM cars_data;
SELECT AVG(edispl)  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE model = 'volvo';
SELECT AVG(edispl)  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE maker = 'volvo';
SELECT MAX(accelerate), cylinders  FROM cars_data  GROUP BY cylinders;
SELECT MAX(accelerate), cylinders FROM cars_data GROUP BY cylinders;
SELECT model, COUNT(DISTINCT make) AS num_versions FROM car_names GROUP BY model ORDER BY num_versions DESC LIMIT 1;
SELECT model, COUNT(DISTINCT make) AS num_versions FROM car_names GROUP BY model HAVING num_versions = (   SELECT MAX(num_versions)   FROM (     SELECT COUNT(DISTINCT make) AS num_versions     FROM car_names     GROUP BY model   ) );
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;
SELECT COUNT(*) AS num_cars FROM cars_data WHERE cylinders > 4;
SELECT COUNT(*)  FROM cars_data  WHERE year = 1980;
SELECT COUNT(*)  FROM cars_data  WHERE year = 1980;
SELECT COUNT(DISTINCT model)  FROM model_list  WHERE maker = (SELECT id                 FROM car_makers                 WHERE fullname = 'American Motor Company');
SELECT COUNT(DISTINCT model)  FROM model_list  WHERE maker = (SELECT id                 FROM car_makers                 WHERE fullname = 'American Motor Company');
SELECT car_makers.fullname, car_makers.id  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id  HAVING COUNT(DISTINCT model_list.model) > 3;
SELECT car_makers.fullname, car_makers.id  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id  HAVING COUNT(model_list.modelid) > 3;
SELECT DISTINCT car_names.model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.modelid = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500);
SELECT DISTINCT car_names.model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.modelid = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500;
SELECT DISTINCT cars_data.year  FROM cars_data  WHERE cars_data.weight >= 3000 AND cars_data.weight <= 4000;
SELECT DISTINCT cars_data.year  FROM cars_data  WHERE cars_data.weight < 4000  AND cars_data.year IN (SELECT DISTINCT cars_data.year                         FROM cars_data                         WHERE cars_data.weight > 3000);
SELECT MAX(horsepower)  FROM cars_data  WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);
SELECT horsepower  FROM cars_data  WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);
SELECT MIN(cylinders)  FROM cars_data  WHERE modelid = (SELECT modelid FROM model_list WHERE model = 'volvo')  AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE modelid = (SELECT modelid FROM model_list WHERE model = 'volvo'));
SELECT MIN(cylinders)  FROM cars_data  WHERE makeid = (SELECT makeid FROM car_names WHERE model = 'volvo')  AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE makeid = (SELECT makeid FROM car_names WHERE model = 'volvo'));
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data));
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);
SELECT COUNT(DISTINCT countries.countryid)  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.id) > 2;
SELECT COUNT(*)  FROM (SELECT COUNT(DISTINCT car_makers.id)        FROM car_makers        GROUP BY car_makers.country        HAVING COUNT(DISTINCT car_makers.id) > 2);
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;
SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1;
SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1;
SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders <= 3 AND cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) ORDER BY car_names.makeid ASC;
SELECT car_names.makeid, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders < 4 AND cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data WHERE cylinders >= 4) ORDER BY car_names.makeid ASC;
SELECT MAX(cars_data.mpg) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 8 AND cars_data.year < 1980;
SELECT MAX(mpg)  FROM cars_data  WHERE (cylinders = 8 OR year < 1980);
SELECT DISTINCT model  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE weight < 3500 AND maker != 'Ford Motor Company';
SELECT DISTINCT model  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE weight < 3500 AND maker != 'Ford Motor Company';
SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);
SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.maker) > 3;
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker JOIN car_names ON car_makers.id = car_names.makeid GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_names.make) > 3;
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.maker = model_list.maker JOIN car_names ON car_makers.id = car_names.makeid WHERE countries.countryname IN (   SELECT countries.countryname   FROM countries   JOIN car_makers ON countries.countryid = car_makers.country   WHERE COUNT(DISTINCT car_makers.maker) > 3   UNION   SELECT countries.countryname   FROM countries   JOIN car_makers ON countries.countryid = car_makers.country   JOIN car_names ON car_makers.id = car_names.makeid   WHERE car_names.model = 'fiat' ) GROUP BY countries.countryid, countries.countryname;
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.maker = model_list.maker JOIN car_names ON car_makers.id = car_names.makeid WHERE countries.countryname IN (   SELECT countries.countryname   FROM countries   JOIN car_makers ON countries.countryid = car_makers.country   WHERE COUNT(DISTINCT car_makers.maker) > 3   UNION   SELECT countries.countryname   FROM countries   JOIN car_makers ON countries.countryid = car_makers.country   JOIN car_names ON car_makers.id = car_names.makeid   WHERE car_names.model = 'fiat' ) GROUP BY countries.countryid, countries.countryname;
SELECT countries.country FROM airlines JOIN airports ON airlines.country = airports.countryabbrev JOIN flights ON airlines.uid = flights.airline JOIN airports AS source ON flights.sourceairport = source.airportcode JOIN airports AS dest ON flights.destairport = dest.airportcode WHERE airlines.airline = 'JetBlue Airways' GROUP BY countries.country;
SELECT airlines.country  FROM airlines  WHERE airlines.airline = 'Jetblue Airways';
SELECT airlines.abbreviation  FROM airlines  WHERE airlines.airline = 'JetBlue Airways';
SELECT airlines.abbreviation  FROM airlines  WHERE airlines.airline = 'Jetblue Airways';
SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE airlines.country = 'USA';
SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE airlines.country = 'USA';
SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';
SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';
SELECT COUNT(*)  FROM airlines;
SELECT SUM(uid)  FROM airlines;
SELECT COUNT(*)  FROM airports;
SELECT COUNT(DISTINCT airportcode) FROM airports;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT COUNT(DISTINCT airline)  FROM airlines  WHERE country = 'USA';
SELECT COUNT(DISTINCT airline)  FROM airlines  WHERE country = 'USA';
SELECT city, country  FROM airports  WHERE airportcode = 'Alton';
SELECT city, country  FROM airports  WHERE airportcode = 'Alton';
SELECT airportname  FROM airports  WHERE airportcode = 'AKO';
SELECT airportname  FROM airports  WHERE airportcode = 'AKO';
SELECT airportname  FROM airports  WHERE city = 'Aberdeen';
SELECT airportname  FROM airports  WHERE city LIKE '%Aberdeen%';
SELECT COUNT(*)  FROM flights  WHERE sourceairport = 'APG';
SELECT COUNT(*)  FROM flights  WHERE sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*)  FROM flights  WHERE destairport = 'Aberdeen';
SELECT COUNT(*)  FROM flights  WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley';
SELECT COUNT(*)  FROM flights  WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley';
SELECT COUNT(*)  FROM flights  WHERE airline = 'JetBlue Airways';
SELECT COUNT(*)  FROM flights  WHERE airline = 'JetBlue Airways';
SELECT COUNT(*)  FROM flights  WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*)  FROM flights  WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*)  FROM flights  WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*)  FROM flights  WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*)  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airline = 'United Airlines' AND airports.city = 'Aberdeen';
SELECT COUNT(*)  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' AND flights.airline = 'United Airlines';
SELECT airports.city, COUNT(*) AS num_arrivals  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  GROUP BY airports.city  ORDER BY num_arrivals DESC  LIMIT 1;
SELECT airports.city, COUNT(*) AS num_destinations  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  GROUP BY airports.city  ORDER BY num_destinations DESC  LIMIT 1;
SELECT airports.city, COUNT(*) AS num_departures  FROM flights  JOIN airports ON flights.sourceairport = airports.airportcode  GROUP BY airports.city  ORDER BY num_departures DESC  LIMIT 1;
SELECT airports.city, COUNT(*) AS num_sources  FROM flights  JOIN airports ON flights.sourceairport = airports.airportcode  GROUP BY airports.city  ORDER BY num_sources DESC  LIMIT 1;
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT airportcode FROM (     SELECT sourceairport AS airportcode, COUNT(*) AS num_flights     FROM flights     GROUP BY sourceairport     UNION ALL     SELECT destairport AS airportcode, COUNT(*) AS num_flights     FROM flights     GROUP BY destairport ) GROUP BY airportcode ORDER BY SUM(num_flights) DESC LIMIT 1;
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT airportcode FROM (     SELECT sourceairport AS airportcode, COUNT(*) AS num_flights     FROM flights     GROUP BY sourceairport     UNION ALL     SELECT destairport AS airportcode, COUNT(*) AS num_flights     FROM flights     GROUP BY destairport ) GROUP BY airportcode ORDER BY SUM(num_flights) ASC LIMIT 1;
SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1;
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.uid  ORDER BY COUNT(flights.flightno) DESC  LIMIT 1;
SELECT airlines.abbreviation, airlines.country  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.uid  ORDER BY COUNT(flights.flightno) ASC  LIMIT 1;
SELECT airlines.abbreviation, airlines.country  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.uid  ORDER BY COUNT(flights.flightno) ASC  LIMIT 1;
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'AHD';
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'AHD';
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.destairport = 'AHD';
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.destairport = 'AHD';
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'APG'  AND airlines.airline IN (   SELECT airlines.airline    FROM airlines    JOIN flights ON airlines.uid = flights.airline    WHERE flights.sourceairport = 'CVO' );
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'APG'  AND airlines.airline IN (   SELECT airlines.airline    FROM airlines    JOIN flights ON airlines.uid = flights.airline    WHERE flights.sourceairport = 'CVO' ) UNION  SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'CVO'  AND airlines.airline IN (   SELECT airlines.airline    FROM airlines    JOIN flights ON airlines.uid = flights.airline    WHERE flights.sourceairport = 'APG' );
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'CVO'  AND airlines.airline NOT IN (   SELECT airlines.airline    FROM airlines    JOIN flights ON airlines.uid = flights.airline    WHERE flights.sourceairport = 'APG' );
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'CVO'  AND airlines.airline NOT IN  (SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'APG');
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(flights.flightno) >= 10;
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(flights.flightno) >= 10;
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(flights.flightno) < 200;
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(flights.flightno) < 200;
SELECT flightno  FROM flights  WHERE airline = (SELECT uid FROM airlines WHERE airline = 'United Airlines');
SELECT flightno  FROM flights  WHERE airline = (SELECT uid FROM airlines WHERE airline = 'United Airlines');
SELECT flightno  FROM flights  WHERE sourceairport = 'APG';
SELECT flightno  FROM flights  WHERE sourceairport = 'APG';
SELECT flightno  FROM flights  WHERE destairport = 'APG';
SELECT flights.flightno  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'APG';
SELECT flights.flightno  FROM flights  JOIN airports ON flights.sourceairport = airports.airportcode  WHERE airports.city = 'Aberdeen';
SELECT flights.flightno  FROM flights  JOIN airports ON flights.sourceairport = airports.airportcode  WHERE airports.airportname = 'Aberdeen Regional Airport';
SELECT flights.flightno  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen';
SELECT flights.flightno  FROM flights  JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.airportname = 'Aberdeen Regional Airport';
SELECT COUNT(*)  FROM flights  WHERE destairport IN ('Aberdeen', 'Abilene');
SELECT COUNT(*)  FROM flights  WHERE destairport IN ('Aberdeen', 'Abilene') OR sourceairport IN ('Aberdeen', 'Abilene');
SELECT airportname  FROM airports  WHERE airportcode NOT IN (SELECT DISTINCT destairport FROM flights UNION SELECT DISTINCT sourceairport FROM flights);
SELECT airportname  FROM airports  WHERE airportcode NOT IN (SELECT DISTINCT destairport FROM flights) AND airportcode NOT IN (SELECT DISTINCT sourceairport FROM flights);
SELECT COUNT(*)  FROM employee;
SELECT COUNT(employee_id) FROM employee;
SELECT name FROM employee ORDER BY age ASC;
SELECT name FROM employee ORDER BY age ASC;
SELECT COUNT(employee_id), city FROM employee GROUP BY city;
SELECT COUNT(employee_id), city FROM employee GROUP BY city;
SELECT DISTINCT e.city FROM employee e WHERE e.age < 30 AND e.employee_id IN (   SELECT h.employee_id   FROM hiring h ) GROUP BY e.city HAVING COUNT(DISTINCT e.employee_id) > 1;
SELECT e.city FROM employee e WHERE e.age < 30 GROUP BY e.city HAVING COUNT(DISTINCT e.employee_id) > 1;
SELECT COUNT(s.shop_id), s.location FROM shop s GROUP BY s.location;
SELECT COUNT(s.shop_id), s.location FROM shop s GROUP BY s.location;
SELECT s.manager_name, s.district FROM shop s WHERE s.number_products = (   SELECT MAX(s2.number_products)   FROM shop s2 );
SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop);
SELECT MIN(number_products), MAX(number_products) FROM shop;
SELECT MIN(number_products), MAX(number_products) FROM shop;
SELECT name, location, district FROM shop ORDER BY number_products DESC;
SELECT name, location, district FROM shop ORDER BY number_products DESC;
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT employee.name  FROM employee  WHERE employee.employee_id = (SELECT evaluation.employee_id                                FROM evaluation                                GROUP BY evaluation.employee_id                                ORDER BY SUM(evaluation.bonus) DESC                                LIMIT 1);
SELECT employee.name  FROM employee  WHERE employee.employee_id = (SELECT evaluation.employee_id                                FROM evaluation                                GROUP BY evaluation.employee_id                                ORDER BY COUNT(evaluation.year_awarded) DESC                                LIMIT 1);
SELECT employee.name  FROM employee  WHERE employee.employee_id = (SELECT evaluation.employee_id                                FROM evaluation                                ORDER BY evaluation.bonus DESC                                LIMIT 1);
SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation);
SELECT employee.name FROM employee LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE evaluation.employee_id IS NULL;
SELECT employee.name FROM employee LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE evaluation.employee_id IS NULL;
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name ORDER BY COUNT(hiring.employee_id) DESC LIMIT 1;
SELECT shop.name FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name ORDER BY COUNT(hiring.employee_id) DESC LIMIT 1;
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL;
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL;
SELECT COUNT(hiring.employee_id), shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.name;
SELECT COUNT(hiring.employee_id), shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.name;
SELECT SUM(evaluation.bonus)  FROM evaluation;
SELECT SUM(bonus)  FROM evaluation;
SELECT *  FROM hiring;
SELECT *  FROM hiring;
SELECT DISTINCT district  FROM shop  WHERE number_products < 3000  AND district IN (SELECT district FROM shop WHERE number_products > 10000);
SELECT DISTINCT district  FROM shop  WHERE number_products < 3000  AND district IN (SELECT district FROM shop WHERE number_products > 10000);
SELECT COUNT(DISTINCT location)  FROM shop;
SELECT COUNT(DISTINCT location)  FROM shop;
SELECT COUNT(*)  FROM documents;
SELECT COUNT(*)  FROM documents;
SELECT document_id, document_name, document_description  FROM documents;
SELECT documents.document_id, documents.document_name, documents.document_description FROM documents;
SELECT documents.document_name, documents.template_id FROM documents WHERE documents.document_description LIKE '%w%';
SELECT documents.document_name, documents.template_id FROM documents WHERE documents.document_description LIKE '%w%';
SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV';
SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV';
SELECT COUNT(DISTINCT template_type_code)  FROM templates  JOIN documents ON templates.template_id = documents.template_id;
SELECT COUNT(DISTINCT documents.template_id)  FROM documents  JOIN templates ON documents.template_id = templates.template_id;
SELECT COUNT(*)  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT';
SELECT COUNT(*)  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT';
SELECT templates.template_id, COUNT(documents.document_id)  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id;
SELECT template_id, COUNT(template_id)  FROM documents  GROUP BY template_id  ORDER BY COUNT(template_id) DESC;
SELECT template_id, template_type_code  FROM templates  WHERE template_id = (   SELECT template_id    FROM documents    GROUP BY template_id    ORDER BY COUNT(document_id) DESC    LIMIT 1 );
SELECT template_id, template_type_code  FROM templates  WHERE template_id = (   SELECT template_id    FROM (     SELECT template_id, COUNT(document_id) AS doc_count      FROM documents      GROUP BY template_id      ORDER BY doc_count DESC      LIMIT 1   )  );
SELECT template_id  FROM documents  GROUP BY template_id  HAVING COUNT(DISTINCT document_id) > 1;
SELECT DISTINCT template_id  FROM documents  GROUP BY template_id  HAVING COUNT(DISTINCT document_id) > 1;
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_id IS NULL;
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_id IS NULL;
SELECT COUNT(*)  FROM templates;
SELECT COUNT(*)  FROM templates;
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates;
SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates;
SELECT DISTINCT templates.template_type_code FROM templates;
SELECT DISTINCT template_type_code FROM ref_template_types;
SELECT templates.template_id FROM templates WHERE templates.template_type_code IN ('PP', 'PPT');
SELECT templates.template_id FROM templates WHERE templates.template_type_code IN ('PP', 'PPT');
SELECT COUNT(*)  FROM templates  WHERE template_type_code = 'CV';
SELECT COUNT(*)  FROM templates  WHERE template_type_code = 'CV';
SELECT version_number, template_type_code  FROM templates  WHERE version_number > 5;
SELECT version_number, template_type_code  FROM templates  WHERE version_number > 5;
SELECT template_type_code, COUNT(*)  FROM templates  GROUP BY template_type_code;
SELECT template_type_code, COUNT(*)  FROM templates  GROUP BY template_type_code;
SELECT template_type_code  FROM templates  GROUP BY template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT template_type_code  FROM templates  GROUP BY template_type_code  HAVING COUNT(*) = (   SELECT MAX(template_count)    FROM (     SELECT COUNT(*) AS template_count      FROM templates      GROUP BY template_type_code   ) );
SELECT template_type_code  FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 3;
SELECT DISTINCT template_type_code  FROM templates  WHERE template_type_code NOT IN (   SELECT template_type_code    FROM templates    GROUP BY template_type_code    HAVING COUNT(*) >= 3 );
SELECT MIN(version_number), template_type_code  FROM templates  GROUP BY template_type_code  ORDER BY MIN(version_number) ASC  LIMIT 1;
SELECT MIN(version_number), template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_name = "Data base";
SELECT template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_name = "Data base";
SELECT template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE documents.document_name = "Data base";
SELECT documents.document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = "BK";
SELECT documents.document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK';
SELECT templates.template_type_code, COUNT(documents.document_id)  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code;
SELECT templates.template_type_code, COUNT(documents.document_id)  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code;
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1;
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1;
SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN      (SELECT template_type_code       FROM templates       JOIN documents ON templates.template_id = documents.template_id);
SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN      (SELECT template_type_code       FROM templates       JOIN documents ON templates.template_id = documents.template_id);
SELECT template_type_code, template_type_description  FROM ref_template_types;
SELECT template_type_code, template_type_description  FROM ref_template_types;
SELECT template_type_description  FROM ref_template_types  WHERE template_type_code = 'AD';
SELECT template_type_description  FROM ref_template_types  WHERE template_type_code = 'AD';
SELECT template_type_code  FROM ref_template_types  WHERE template_type_description = 'Book';
SELECT template_type_code  FROM ref_template_types  WHERE template_type_description = 'Book';
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id;
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id;
SELECT templates.template_id  FROM templates  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation';
SELECT templates.template_id  FROM templates  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation';
SELECT COUNT(*)  FROM paragraphs;
SELECT COUNT(*)  FROM paragraphs;
SELECT COUNT(*)  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Summer Show';
SELECT COUNT(paragraph_id)  FROM paragraphs  WHERE document_id = (   SELECT document_id    FROM documents    WHERE document_name = 'Summer Show' );
SELECT paragraph_id, other_details  FROM paragraphs  WHERE paragraph_text = 'Korea ';
SELECT *  FROM paragraphs  WHERE paragraph_text LIKE '%Korea %';
SELECT paragraph_id, paragraph_text  FROM paragraphs  WHERE document_id = (   SELECT document_id    FROM documents    WHERE document_name = 'Welcome to NY' );
SELECT paragraph_id, paragraph_text  FROM paragraphs  WHERE document_id = (   SELECT document_id    FROM documents    WHERE document_name = 'Welcome to NY' );
SELECT paragraphs.paragraph_text  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE documents.document_name = 'Customer reviews';
SELECT paragraphs.paragraph_text  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE documents.document_name = 'Customer reviews';
SELECT documents.document_id, COUNT(paragraphs.paragraph_id)  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, COUNT(paragraphs.paragraph_id)  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id)  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id;
SELECT paragraphs.document_id FROM paragraphs GROUP BY paragraphs.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id, documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) DESC LIMIT 1;
SELECT documents.document_id, documents.document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) DESC LIMIT 1;
SELECT document_id  FROM paragraphs  GROUP BY document_id  ORDER BY COUNT(*) ASC  LIMIT 1;
SELECT document_id  FROM paragraphs  GROUP BY document_id  ORDER BY COUNT(*) ASC  LIMIT 1;
SELECT document_id  FROM paragraphs  GROUP BY document_id  HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT document_id  FROM paragraphs  GROUP BY document_id  HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT document_id  FROM paragraphs  WHERE paragraph_text LIKE '%Brazil%'  INTERSECT  SELECT document_id  FROM paragraphs  WHERE paragraph_text LIKE '%Ireland%';
SELECT DISTINCT documents.document_id  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%'  AND documents.document_id IN      (SELECT document_id       FROM paragraphs       WHERE paragraph_text LIKE '%Ireland%');
SELECT COUNT(DISTINCT teacher_id)  FROM teacher;
SELECT COUNT(*)  FROM teacher;
SELECT name  FROM teacher  ORDER BY age ASC;
SELECT name  FROM teacher  ORDER BY age ASC;
SELECT age, hometown  FROM teacher;
SELECT name, age, hometown  FROM teacher;
SELECT name  FROM teacher  WHERE hometown != 'Little Lever Urban District';
SELECT name  FROM teacher  WHERE hometown != 'Little Lever Urban District';
SELECT name  FROM teacher  WHERE age IN (32, 33);
SELECT name  FROM teacher  WHERE age = 32 OR age = 33;
SELECT hometown  FROM teacher  WHERE age = (SELECT MIN(age) FROM teacher);
SELECT hometown  FROM teacher  WHERE age = (SELECT MIN(age) FROM teacher);
SELECT hometown, COUNT(*)  FROM teacher  GROUP BY hometown;
SELECT hometown, COUNT(*)  FROM teacher  GROUP BY hometown;
SELECT teacher.hometown FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY COUNT(*) DESC LIMIT 1;
SELECT teacher.hometown, COUNT(*) as count FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1;
SELECT DISTINCT t1.hometown FROM teacher t1 JOIN teacher t2 ON t1.hometown = t2.hometown AND t1.teacher_id != t2.teacher_id;
SELECT t.hometown, COUNT(*) as count FROM teacher t GROUP BY t.hometown HAVING count > 1;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC;
SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math';
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'Math';
SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name;
SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.name HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL;
SELECT DISTINCT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL;
SELECT COUNT(*)  FROM visitor  WHERE age < 30;
SELECT visitor.name  FROM visitor  WHERE level_of_membership > 4  ORDER BY level_of_membership DESC;
SELECT AVG(age)  FROM visitor  WHERE level_of_membership <= 4;
SELECT visitor.name, visitor.level_of_membership  FROM visitor  WHERE level_of_membership > 4  ORDER BY age DESC;
SELECT museum_id, name  FROM museum  WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum);
SELECT AVG(num_of_staff)  FROM museum  WHERE open_year < 2009;
SELECT open_year, num_of_staff  FROM museum  WHERE name = 'Plaza Museum';
SELECT name  FROM museum  WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2010);
SELECT visitor.id, visitor.name, visitor.age  FROM visitor  INNER JOIN visit ON visitor.id = visit.visitor_id  GROUP BY visitor.id  HAVING COUNT(DISTINCT visit.museum_id) > 1;
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.total_spent) DESC LIMIT 1;
SELECT museum.museum_id, museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY museum.museum_id ORDER BY COUNT(visit.visitor_id) DESC LIMIT 1;
SELECT museum.name FROM museum LEFT JOIN visit ON museum.museum_id = visit.museum_id WHERE visit.visitor_id IS NULL;
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id ORDER BY SUM(visit.num_of_ticket) DESC LIMIT 1;
SELECT AVG(visit.num_of_ticket), MAX(visit.num_of_ticket) FROM visit;
SELECT SUM(total_spent)  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1;
SELECT visitor.name  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009  AND museum.open_year > 2011  GROUP BY visitor.id  HAVING COUNT(DISTINCT museum.museum_id) = 2;
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year > 2010  OR museum.open_year IS NULL;
SELECT COUNT(DISTINCT museum_id)  FROM museum  WHERE open_year > 2013  OR open_year < 2008;
SELECT COUNT(DISTINCT player_id)  FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM matches;
SELECT COUNT(*) AS count FROM matches;
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT AVG(loser_age) as avg_loser_age, AVG(winner_age) as avg_winner_age FROM matches;
SELECT AVG(loser_age) as avg_loser_age, AVG(winner_age) as avg_winner_age FROM matches;
SELECT AVG(winner_rank) as avg_winner_rank FROM matches;
SELECT AVG(winner_rank) as avg_winner_rank FROM matches;
SELECT MAX(loser_rank) as max_loser_rank FROM matches;
SELECT MAX(loser_rank) FROM matches WHERE loser_rank NOT NULL;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (   SELECT winner_name   FROM matches   WHERE year = 2016 );
SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (   SELECT winner_name   FROM matches   WHERE year = 2016 );
SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2016;
SELECT COUNT(*)  FROM matches  WHERE year = 2013 OR year = 2016;
SELECT players.country_code, players.first_name  FROM players  JOIN matches AS m1 ON players.player_id = m1.winner_id  JOIN matches AS m2 ON players.player_id = m2.winner_id  WHERE m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open';
SELECT players.first_name, players.country_code  FROM players  JOIN matches AS m1 ON players.player_id = m1.winner_id  JOIN matches AS m2 ON players.player_id = m2.winner_id  WHERE m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open'  GROUP BY players.player_id  HAVING COUNT(*) = 2;
SELECT players.first_name, players.country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT players.first_name, players.country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, last_name FROM players ORDER BY birth_date;
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT players.country_code, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = (SELECT MAX(tours) FROM rankings);
SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT matches.year, COUNT(*) AS num_matches FROM matches GROUP BY matches.year ORDER BY num_matches DESC LIMIT 1;
SELECT players.first_name || ' ' || players.last_name AS winner_name, MAX(rankings.ranking_points) AS max_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT players.first_name || ' ' || players.last_name AS winner_name, MAX(rankings.ranking_points) AS max_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(*) DESC, max_points DESC LIMIT 1;
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1;
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1;
SELECT loser_name, winner_name  FROM matches  ORDER BY minutes DESC  LIMIT 1;
SELECT loser_name, winner_name  FROM matches  ORDER BY minutes DESC  LIMIT 1;
SELECT AVG(rankings.ranking), players.first_name  FROM rankings  JOIN players ON rankings.player_id = players.player_id  GROUP BY players.player_id;
SELECT players.first_name, AVG(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.first_name;
SELECT country_code, COUNT(DISTINCT player_id)  FROM players  GROUP BY country_code;
SELECT country_code, COUNT(DISTINCT player_id)  FROM players  GROUP BY country_code;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) = (   SELECT MAX(player_count)   FROM (     SELECT COUNT(player_id) AS player_count     FROM players     GROUP BY country_code   ) );
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT SUM(tours) AS total_tours, ranking_date FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours)  FROM rankings  GROUP BY ranking_date;
SELECT year, COUNT(*)  FROM matches  GROUP BY year;
SELECT year, COUNT(*)  FROM (SELECT winner_name, loser_name, year FROM matches)  GROUP BY year;
SELECT winner_name, winner_rank, winner_age  FROM matches  ORDER BY winner_age ASC  LIMIT 3;
SELECT winner_name, winner_rank, winner_age  FROM matches  WHERE winner_age IN (SELECT winner_age FROM matches ORDER BY winner_age ASC LIMIT 3)  ORDER BY winner_age ASC;
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (   SELECT winner_id   FROM matches   WHERE winner_rank_points = (     SELECT MAX(winner_rank_points)     FROM matches   ) );
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (   SELECT player_id   FROM rankings   WHERE ranking_points = (     SELECT MAX(ranking_points)     FROM rankings   ) );
SELECT COUNT(player_id), hand FROM players GROUP BY hand;
SELECT COUNT(*) AS count, hand  FROM players  GROUP BY hand;
SELECT COUNT(*) AS count  FROM ship  WHERE disposition_of_ship = 'Captured';
SELECT name, tonnage  FROM ship  ORDER BY name DESC;
SELECT name, date, result  FROM battle;
SELECT MAX(killed) AS max_killed, MIN(killed) AS min_killed  FROM death;
SELECT AVG(death.injured)  FROM death;
SELECT death.killed, death.injured  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  WHERE ship.tonnage = 't';
SELECT battle.name, battle.result  FROM battle  WHERE battle.bulgarian_commander != 'Boril';
SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id  HAVING COUNT(ship.id) > 0;
SELECT battle.id, battle.name  FROM battle  JOIN death ON death.caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = battle.id)  GROUP BY battle.id  HAVING SUM(death.killed) > 10;