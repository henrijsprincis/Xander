SELECT COUNT(*) FROM singer;
SELECT SUM(1) FROM singer;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';
SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'France';
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);
SELECT DISTINCT country FROM singer WHERE age > 20;
SELECT country FROM singer WHERE age > 20;
SELECT singer.country, COUNT(singer.singer_id) AS num_singers    FROM singer    GROUP BY singer.country;
SELECT singer.country, COUNT(singer.singer_id) AS num_singers    FROM singer    GROUP BY singer.country;
SELECT singer.song_name    FROM singer    WHERE singer.age > (SELECT AVG(age) FROM singer);
SELECT singer.song_name    FROM singer    WHERE singer.age > (SELECT AVG(age) FROM singer);
SELECT stadium.location, stadium.name    FROM stadium    WHERE stadium.capacity BETWEEN 5000 AND 10000;
SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;
SELECT MAX(capacity), AVG(capacity) FROM stadium;
SELECT AVG(capacity), MAX(capacity) FROM stadium;
SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);
SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);
SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;
SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;
SELECT stadium.name, COUNT(concert.concert_id) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;
SELECT stadium.name, COUNT(concert.concert_id) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.name ORDER BY COUNT(concert.concert_id) DESC LIMIT 1;
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      WHERE year > 2013      GROUP BY stadium_id      ORDER BY COUNT(*) DESC      LIMIT 1 );
SELECT year, COUNT(*) AS num_concerts  FROM concert  GROUP BY year  ORDER BY num_concerts DESC  LIMIT 1;
SELECT year  FROM concert  GROUP BY year  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT name  FROM stadium  WHERE stadium_id NOT IN (     SELECT DISTINCT stadium_id      FROM concert );
SELECT name  FROM stadium  WHERE stadium_id NOT IN (     SELECT DISTINCT stadium_id      FROM concert );
SELECT DISTINCT s1.country  FROM singer s1, singer s2, concert c, singer_in_concert sc1, singer_in_concert sc2  WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = c.concert_id AND sc2.concert_id = c.concert_id;
SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);
SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);
SELECT c.concert_name, c.theme, COUNT(sc.singer_id)  FROM concert c, singer_in_concert sc  WHERE c.concert_id = sc.concert_id  GROUP BY c.concert_id;
SELECT c.concert_name, c.theme, COUNT(sc.singer_id)  FROM concert c, singer_in_concert sc  WHERE c.concert_id = sc.concert_id  GROUP BY c.concert_id;
SELECT singer.name, COUNT(singer_in_concert.concert_id) AS num_concerts    FROM singer    JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id    GROUP BY singer.name;
SELECT singer.name, COUNT(singer_in_concert.concert_id) AS num_concerts    FROM singer    JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id    GROUP BY singer.name;
SELECT singer.name    FROM singer    JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id    JOIN concert ON singer_in_concert.concert_id = concert.concert_id    WHERE concert.year = 2014;
SELECT singer.name    FROM singer    JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id    JOIN concert ON singer_in_concert.concert_id = concert.concert_id    WHERE concert.year = 2014;
SELECT singer.name, singer.country    FROM singer    WHERE singer.song_name LIKE '%Hey%';
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE song_name LIKE '%Hey%';
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT stadium_id FROM concert WHERE year = 2015 );
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT stadium_id FROM concert WHERE year = 2015 );
SELECT COUNT(*) FROM concert WHERE stadium_id = (     SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE stadium_id = (     SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT COUNT(*) FROM pets WHERE weight > 10;
SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog');
SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog');
SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;
SELECT pettype, MAX(weight)  FROM pets  GROUP BY pettype;
SELECT COUNT(*)  FROM has_pet  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20;
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20;
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pettype = 'dog' AND student.sex = 'F';
SELECT COUNT(*)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pettype = 'dog' AND student.sex = 'F';
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT COUNT(DISTINCT pettype) FROM pets;
SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype IN ('cat', 'dog'));
SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype IN ('cat', 'dog'));
SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'dog'));
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'  INTERSECT  SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog';
SELECT student.major, student.age  FROM student  WHERE student.stuid NOT IN  (SELECT has_pet.stuid  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat');
SELECT student.major, student.age  FROM student  WHERE student.stuid NOT IN  (SELECT has_pet.stuid  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat')  AND student.stuid IN  (SELECT has_pet.stuid  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat');
SELECT student.stuid  FROM student  WHERE student.stuid NOT IN  (SELECT has_pet.stuid  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat');
SELECT student.stuid  FROM student  WHERE student.stuid NOT IN  (SELECT has_pet.stuid  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat');
SELECT student.fname, student.age    FROM student    JOIN has_pet ON student.stuid = has_pet.stuid    JOIN pets ON has_pet.petid = pets.petid    WHERE pets.pettype = 'dog' AND student.stuid NOT IN    (SELECT student.stuid    FROM student    JOIN has_pet ON student.stuid = has_pet.stuid    JOIN pets ON has_pet.petid = pets.petid    WHERE pets.pettype = 'cat');
SELECT student.fname    FROM student    JOIN has_pet ON student.stuid = has_pet.stuid    JOIN pets ON has_pet.petid = pets.petid    WHERE pets.pettype = 'dog' AND student.stuid NOT IN    (SELECT student.stuid    FROM student    JOIN has_pet ON student.stuid = has_pet.stuid    JOIN pets ON has_pet.petid = pets.petid    WHERE pets.pettype = 'cat');
SELECT pettype, weight    FROM pets    WHERE pet_age = (SELECT MIN(pet_age) FROM pets);
SELECT pettype, weight    FROM pets    WHERE pet_age = (SELECT MIN(pet_age) FROM pets);
SELECT pets.petid, pets.weight    FROM pets    WHERE pets.pet_age > 1;
SELECT pets.petid, pets.weight     FROM pets     WHERE pets.pet_age > 1;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age)     FROM pets     GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.pet_age), MAX(pets.pet_age)     FROM pets     GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight)     FROM pets     GROUP BY pets.pettype;
SELECT pets.pettype, AVG(pets.weight)     FROM pets     GROUP BY pets.pettype;
SELECT student.fname, student.age    FROM student    INNER JOIN has_pet ON student.stuid = has_pet.stuid    INNER JOIN pets ON has_pet.petid = pets.petid;
SELECT DISTINCT student.fname, student.age    FROM student    INNER JOIN has_pet ON student.stuid = has_pet.stuid    INNER JOIN pets ON has_pet.petid = pets.petid;
SELECT pets.petid    FROM student    INNER JOIN has_pet ON student.stuid = has_pet.stuid    INNER JOIN pets ON has_pet.petid = pets.petid    WHERE student.lname = 'Smith';
SELECT pets.petid    FROM student    INNER JOIN has_pet ON student.stuid = has_pet.stuid    INNER JOIN pets ON has_pet.petid = pets.petid    WHERE student.lname = 'Smith';
SELECT student.stuid, COUNT(pets.petid) AS num_pets    FROM student    INNER JOIN has_pet ON student.stuid = has_pet.stuid    INNER JOIN pets ON has_pet.petid = pets.petid    GROUP BY student.stuid;
SELECT student.stuid, COUNT(has_pet.petid) AS num_pets FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' GROUP BY student.stuid;
SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT(has_pet.petid) > 1;
SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY student.stuid HAVING COUNT(pets.petid) > 1;
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND pets.pet_age = 3;
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT continents.contid, continents.continent, COUNT(countries.countryid)     FROM continents LEFT JOIN countries ON continents.continent = countries.continent     GROUP BY continents.contid, continents.continent;
SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries    FROM continents    JOIN countries ON continents.continent = countries.continent    GROUP BY continents.contid;
SELECT COUNT(countryid) AS num_countries    FROM countries;
SELECT COUNT(DISTINCT countryname) AS num_countries    FROM countries;
SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models    FROM car_makers    JOIN model_list ON car_makers.id = model_list.maker    GROUP BY car_makers.id;
SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models    FROM car_makers    JOIN model_list ON car_makers.id = model_list.maker    GROUP BY car_makers.id;
SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data);
SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data);
SELECT model FROM cars_data WHERE weight < (SELECT AVG(weight) FROM cars_data);
SELECT model FROM cars_data WHERE weight < (SELECT AVG(weight) FROM cars_data);
SELECT DISTINCT maker FROM car_makers WHERE id IN (SELECT DISTINCT maker FROM cars_data WHERE year = 1970);
SELECT DISTINCT car_makers.maker     FROM car_makers     JOIN car_names ON car_makers.id = car_names.makeid     JOIN cars_data ON car_names.modelid = cars_data.model     WHERE cars_data.year = 1970;
SELECT car_names.make, cars_data.year     FROM car_names     JOIN cars_data ON car_names.modelid = cars_data.id     WHERE cars_data.year = (SELECT MIN(year) FROM cars_data);
SELECT car_makers.maker, cars_data.year     FROM car_makers     JOIN car_names ON car_makers.id = car_names.makeid     JOIN cars_data ON car_names.modelid = cars_data.model     WHERE cars_data.year = (SELECT MIN(year) FROM cars_data);
SELECT DISTINCT car_names.model     FROM car_names     JOIN cars_data ON car_names.modelid = cars_data.model     WHERE cars_data.year > 1980;
SELECT car_names.model     FROM car_names     JOIN cars_data ON car_names.modelid = cars_data.model     WHERE cars_data.year > 1980;
SELECT continents.continent, COUNT(DISTINCT car_makers.id) AS maker_count    FROM continents    JOIN countries ON continents.contid = countries.continent    JOIN car_makers ON countries.countryid = car_makers.country    GROUP BY continents.continent;
SELECT continents.continent, COUNT(DISTINCT car_makers.id) AS maker_count    FROM continents    JOIN countries ON continents.contid = countries.continent    JOIN car_makers ON countries.countryid = car_makers.country    GROUP BY continents.continent;
SELECT countries.countryname    FROM countries    JOIN car_makers ON countries.countryid = car_makers.country    GROUP BY countries.countryname    ORDER BY COUNT(DISTINCT car_makers.id) DESC    LIMIT 1;
SELECT countries.countryname    FROM countries    JOIN car_makers ON countries.countryid = car_makers.country    GROUP BY countries.countryname    ORDER BY COUNT(DISTINCT car_makers.id) DESC    LIMIT 1;
SELECT car_makers.fullname, COUNT(DISTINCT model_list.modelid) AS model_count    FROM car_makers    JOIN model_list ON car_makers.id = model_list.maker    GROUP BY car_makers.fullname;
SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.model) AS num_models    FROM car_makers    JOIN model_list ON car_makers.id = model_list.maker    GROUP BY car_makers.id;
SELECT cars_data.accelerate    FROM cars_data    JOIN car_names ON cars_data.id = car_names.makeid    JOIN model_list ON car_names.model = model_list.modelid    JOIN car_makers ON model_list.maker = car_makers.id    WHERE car_makers.fullname = 'amc' AND model_list.model = 'hornet sportabout (sw)';
SELECT AVG(cars_data.accelerate)    FROM cars_data    JOIN car_names ON cars_data.id = car_names.makeid    JOIN model_list ON car_names.model = model_list.modelid    JOIN car_makers ON model_list.maker = car_makers.id    WHERE car_makers.fullname = 'amc' AND model_list.model = 'hornet sportabout (sw)';
SELECT COUNT(DISTINCT car_makers.id)    FROM car_makers    JOIN countries ON car_makers.country = countries.countryid    WHERE countries.countryname = 'france';
SELECT COUNT(DISTINCT car_makers.maker)    FROM car_makers    JOIN countries ON car_makers.country = countries.countryid    WHERE countries.countryname = 'france';
SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States';
SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States';
SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;
SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;
SELECT maker, model FROM car_names JOIN model_list ON car_names.modelid = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id;
SELECT maker, model FROM car_names JOIN model_list ON car_names.modelid = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id;
SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT DISTINCT country FROM car_makers);
SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT DISTINCT country FROM car_makers);
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;
SELECT year, AVG(weight) FROM cars_data GROUP BY year;
SELECT year, AVG(weight), AVG(year) FROM cars_data GROUP BY year;
SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3;
SELECT DISTINCT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  WHERE countries.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(DISTINCT car_makers.maker) >= 3;
SELECT MAX(cars_data.horsepower), car_makers.maker  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cars_data.cylinders = 3;
SELECT MAX(cars_data.horsepower), car_makers.maker  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cars_data.cylinders = 3;
SELECT model_list.model  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT model_list.model  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  JOIN model_list ON car_names.modelid = model_list.modelid  WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data);
SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;
SELECT AVG(horsepower) FROM cars_data;
SELECT AVG(edispl) FROM cars_data     JOIN car_names ON cars_data.makeid = car_names.makeid     JOIN model_list ON car_names.modelid = model_list.modelid     JOIN car_makers ON model_list.maker = car_makers.id     WHERE car_makers.fullname = 'volvo';
SELECT AVG(edispl) FROM cars_data     JOIN car_names ON cars_data.makeid = car_names.makeid     JOIN model_list ON car_names.modelid = model_list.modelid     JOIN car_makers ON model_list.maker = car_makers.id     WHERE car_makers.fullname = 'volvo';
SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders;
SELECT MAX(accelerate) FROM cars_data;
SELECT model, COUNT(DISTINCT make) AS num_versions  FROM car_names  GROUP BY model  ORDER BY num_versions DESC  LIMIT 1;
SELECT model, COUNT(DISTINCT make) AS num_versions  FROM car_names  GROUP BY model  ORDER BY num_versions DESC  LIMIT 1;
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 4;
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE year = 1980;
SELECT COUNT(*) FROM cars_data WHERE year = 1980;
SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company';
SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company';
SELECT car_makers.id, car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname HAVING COUNT(DISTINCT model_list.model) > 3;
SELECT car_makers.id, car_makers.fullname  FROM car_makers  WHERE car_makers.id IN      (SELECT maker       FROM model_list       GROUP BY maker       HAVING COUNT(DISTINCT model) > 3);
SELECT DISTINCT car_names.model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.id  WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500);
SELECT DISTINCT car_names.model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500;
SELECT DISTINCT cars_data.year  FROM cars_data  WHERE cars_data.weight >= 3000 AND cars_data.weight <= 4000;
SELECT DISTINCT cars_data.year  FROM cars_data  WHERE cars_data.weight < 4000  INTERSECT  SELECT DISTINCT cars_data.year  FROM cars_data  WHERE cars_data.weight > 3000;
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1;
SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1;
SELECT cylinders FROM cars_data     JOIN car_names ON cars_data.makeid = car_names.makeid     JOIN model_list ON car_names.modelid = model_list.modelid     WHERE model_list.model = 'volvo'     ORDER BY accelerate ASC LIMIT 1;
SELECT cylinders FROM cars_data     JOIN car_names ON cars_data.makeid = car_names.makeid     JOIN model_list ON car_names.modelid = model_list.modelid     WHERE model_list.model = 'volvo'     ORDER BY accelerate ASC LIMIT 1;
SELECT COUNT(*) FROM cars_data     WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1);
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);
SELECT COUNT(DISTINCT countries.countryid)  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.id) > 2;
SELECT COUNT(DISTINCT countries.countryid)  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.id) > 2;
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;
SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;
SELECT car_names.makeid, car_names.make, MAX(cars_data.horsepower)  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  WHERE cars_data.cylinders = 4  GROUP BY car_names.makeid  ORDER BY MAX(cars_data.horsepower) DESC  LIMIT 1;
SELECT car_names.makeid, car_names.make, MAX(cars_data.horsepower)  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  WHERE cars_data.cylinders = 4  GROUP BY car_names.makeid  ORDER BY MAX(cars_data.horsepower) DESC;
SELECT car_names.makeid, car_names.make  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 3;
SELECT car_names.makeid, car_names.make  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders < 4;
SELECT MAX(cars_data.mpg)  FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  WHERE cars_data.cylinders = 8  OR cars_data.year < 1980;
SELECT MAX(mpg)  FROM cars_data  WHERE (cylinders = 8 OR year < 1980);
SELECT model  FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE weight < 3500 AND maker != 'Ford Motor Company';
SELECT DISTINCT model  FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE weight < 3500 AND maker != 'Ford Motor Company';
SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);
SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);
SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.country) > 3;
SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.maker = model_list.maker INNER JOIN car_names ON car_names.makeid = car_makers.id GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_names.make) > 3;
SELECT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryname IN (   SELECT countries.countryname   FROM countries   INNER JOIN car_makers ON countries.countryid = car_makers.country   INNER JOIN car_names ON car_names.makeid = car_makers.id   WHERE car_names.make = 'fiat' ) OR (   SELECT COUNT(DISTINCT car_makers.id)   FROM car_makers   WHERE car_makers.country = countries.countryid ) > 3 GROUP BY countries.countryid, countries.countryname;
SELECT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.countryname IN (   SELECT countries.countryname   FROM countries   INNER JOIN car_makers ON countries.countryid = car_makers.country   INNER JOIN car_names ON car_names.makeid = car_makers.id   WHERE car_names.make = 'fiat' ) OR (   SELECT COUNT(DISTINCT car_makers.id)   FROM car_makers   WHERE car_makers.country = countries.countryid ) > 3 GROUP BY countries.countryid, countries.countryname;
SELECT countries.countryname FROM airports INNER JOIN flights ON airports.airportcode = flights.sourceairport INNER JOIN airlines ON flights.airline = airlines.uid INNER JOIN countries ON airlines.country = countries.countryname WHERE airlines.airline = 'JetBlue Airways';
SELECT country FROM airlines WHERE airline = "JetBlue Airways";
SELECT abbreviation FROM airlines WHERE airline = "JetBlue Airways";
SELECT abbreviation FROM airlines WHERE airline = "JetBlue Airways";
SELECT airline, abbreviation FROM airlines WHERE country = "USA";
SELECT airline, abbreviation FROM airlines WHERE country = "USA";
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony';
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony';
SELECT COUNT(*) FROM airlines;
SELECT COUNT(DISTINCT airline) FROM flights;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT airline FROM airlines WHERE abbreviation = 'UAL';
SELECT * FROM airlines WHERE abbreviation = 'UAL';
SELECT COUNT(DISTINCT airline) FROM airlines WHERE country = 'USA';
SELECT COUNT(DISTINCT airline) FROM airlines WHERE country = 'USA';
SELECT city, country FROM airports WHERE airportcode = 'Alton';
SELECT city, country FROM airports WHERE airportcode = 'Alton';
SELECT airportname FROM airports WHERE airportcode = 'AKO';
SELECT airportname FROM airports WHERE airportcode = 'AKO';
SELECT airportname FROM airports WHERE city = 'Aberdeen';
SELECT airportname FROM airports WHERE city = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE sourceairport = 'APG';
SELECT COUNT(*) AS num_flights FROM flights WHERE sourceairport = 'APG';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO';
SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports source ON flights.sourceairport = source.airportcode JOIN airports dest ON flights.destairport = dest.airportcode WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airports source ON flights.sourceairport = source.airportcode JOIN airports dest ON flights.destairport = dest.airportcode WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE airlines.airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights     WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*) FROM flights     WHERE airline = 'United Airlines' AND destairport = 'ASY';
SELECT COUNT(*) FROM flights     WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*) FROM flights     WHERE airline = 'United Airlines' AND sourceairport = 'AHD';
SELECT COUNT(*) FROM flights     JOIN airports ON flights.destairport = airports.airportcode     WHERE airline = 'United Airlines' AND airports.city = 'Aberdeen';
SELECT COUNT(*) FROM flights     WHERE destairport = 'Aberdeen' AND airline IN     (SELECT uid FROM airlines WHERE airline = 'United Airlines');
SELECT airports.city, COUNT(*) AS num_arrivals FROM flights     JOIN airports ON flights.destairport = airports.airportcode     GROUP BY airports.city     ORDER BY num_arrivals DESC     LIMIT 1;
SELECT airports.city, COUNT(*) AS num_destinations FROM flights     JOIN airports ON flights.destairport = airports.airportcode     GROUP BY airports.city     ORDER BY num_destinations DESC     LIMIT 1;
SELECT airports.city, COUNT(*) AS num_departures FROM flights     JOIN airports ON flights.sourceairport = airports.airportcode     GROUP BY airports.city     ORDER BY num_departures DESC     LIMIT 1;
SELECT airports.city, COUNT(*) AS num_sources FROM flights     JOIN airports ON flights.sourceairport = airports.airportcode     GROUP BY airports.city     ORDER BY num_sources DESC     LIMIT 1;
SELECT sourceairport AS airportcode, COUNT(*) AS num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1;
SELECT destairport AS airportcode, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights DESC LIMIT 1;
SELECT sourceairport AS airportcode, COUNT(*) AS num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights ASC LIMIT 1;
SELECT sourceairport AS airportcode, COUNT(*) AS num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights ASC LIMIT 1;
SELECT airline, COUNT(*) AS num_flights FROM flights GROUP BY airline ORDER BY num_flights DESC LIMIT 1;
SELECT airlines.airline, COUNT(flights.airline) AS num_flights FROM airlines JOIN flights ON airlines.uid = flights.airline GROUP BY airlines.airline ORDER BY num_flights DESC LIMIT 1;
SELECT abbreviation, country FROM airlines WHERE uid = (   SELECT airline   FROM flights   GROUP BY airline   ORDER BY COUNT(*) ASC   LIMIT 1 );
SELECT abbreviation, country FROM airlines WHERE uid = (   SELECT airline   FROM flights   GROUP BY airline   ORDER BY COUNT(*) ASC   LIMIT 1 );
SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.sourceairport = 'AHD';
SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.sourceairport = 'AHD';
SELECT DISTINCT airlines.airline     FROM airlines     JOIN flights ON airlines.uid = flights.airline     WHERE flights.destairport = 'AHD';
SELECT DISTINCT airlines.airline     FROM airlines     JOIN flights ON airlines.uid = flights.airline     WHERE flights.destairport = 'AHD';
SELECT DISTINCT airlines.airline     FROM airlines     JOIN flights ON airlines.uid = flights.airline     WHERE flights.sourceairport = 'APG'     AND airlines.airline IN         (SELECT airlines.airline          FROM airlines          JOIN flights ON airlines.uid = flights.airline          WHERE flights.sourceairport = 'CVO');
SELECT DISTINCT airlines.airline     FROM airlines     JOIN flights ON airlines.uid = flights.airline     WHERE flights.sourceairport IN ('APG', 'CVO')     GROUP BY airlines.airline     HAVING COUNT(DISTINCT flights.sourceairport) = 2;
SELECT DISTINCT airlines.airline     FROM airlines     JOIN flights ON airlines.uid = flights.airline     WHERE flights.sourceairport = 'CVO'     AND airlines.airline NOT IN         (SELECT airlines.airline          FROM airlines          JOIN flights ON airlines.uid = flights.airline          WHERE flights.sourceairport = 'APG');
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'CVO'  AND airlines.airline NOT IN  (SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  WHERE flights.sourceairport = 'APG');
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(*) >= 10;
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(*) >= 10;
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(*) < 200;
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.airline  GROUP BY airlines.airline  HAVING COUNT(*) < 200;
SELECT flightno  FROM flights  WHERE airline = "United Airlines";
SELECT flightno  FROM flights  WHERE airline = "United Airlines";
SELECT flightno  FROM flights  WHERE sourceairport = "APG";
SELECT flightno  FROM flights  WHERE sourceairport = "APG";
SELECT flightno  FROM flights  WHERE destairport = "APG";
SELECT flightno FROM flights WHERE destairport = 'APG';
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen';
SELECT flightno FROM flights WHERE destairport = 'ABZ';
SELECT COUNT(*) FROM flights     WHERE destairport IN ('Aberdeen', 'Abilene');
SELECT COUNT(*) FROM flights     WHERE destairport IN ('Aberdeen', 'Abilene');
SELECT airportname FROM airports     WHERE airportcode NOT IN     (SELECT DISTINCT sourceairport FROM flights      UNION      SELECT DISTINCT destairport FROM flights);
SELECT airportname FROM airports     WHERE airportcode NOT IN     (SELECT DISTINCT sourceairport FROM flights      UNION      SELECT DISTINCT destairport FROM flights);
SELECT COUNT(*) FROM employee;
SELECT COUNT(employee_id) FROM employee;
SELECT name FROM employee ORDER BY age ASC;
SELECT name, age FROM employee ORDER BY age ASC;
SELECT city, COUNT(employee_id) FROM employee GROUP BY city;
SELECT city, COUNT(employee_id) AS num_employees FROM employee GROUP BY city;
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(DISTINCT employee_id) > 1;
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(DISTINCT employee_id) > 1;
SELECT location, COUNT(DISTINCT shop_id) AS num_shops FROM shop GROUP BY location;
SELECT location, COUNT(DISTINCT shop_id) AS num_shops FROM shop GROUP BY location;
SELECT manager_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop);
SELECT s.manager_name, s.district FROM shop s WHERE s.number_products = (SELECT MAX(number_products) FROM shop);
SELECT MIN(s.number_products), MAX(s.number_products) FROM shop s;
SELECT MIN(number_products), MAX(number_products) FROM shop;
SELECT s.name, s.location, s.district FROM shop s ORDER BY s.number_products DESC;
SELECT s.name, s.location, s.district FROM shop s ORDER BY s.number_products DESC;
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(number_products) FROM shop);
SELECT employee.name  FROM evaluation  JOIN employee ON evaluation.employee_id = employee.employee_id  GROUP BY evaluation.employee_id  ORDER BY SUM(evaluation.bonus) DESC  LIMIT 1;
SELECT employee.name  FROM evaluation  JOIN employee ON evaluation.employee_id = employee.employee_id  GROUP BY evaluation.employee_id  ORDER BY COUNT(evaluation.year_awarded) DESC  LIMIT 1;
SELECT employee.name  FROM evaluation  JOIN employee ON evaluation.employee_id = employee.employee_id  ORDER BY evaluation.bonus DESC  LIMIT 1;
SELECT employee.name  FROM employee  JOIN evaluation ON employee.employee_id = evaluation.employee_id  ORDER BY evaluation.bonus DESC  LIMIT 1;
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL;
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL;
SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.name  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1;
SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.name  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1;
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring);
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring) AND shop_id NOT IN (SELECT shop_id FROM evaluation);
SELECT shop.name, COUNT(hiring.employee_id) AS num_employees FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name;
SELECT shop.name, COUNT(hiring.employee_id) AS num_employees FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name;
SELECT SUM(bonus) AS total_bonus FROM evaluation;
SELECT SUM(bonus) FROM evaluation;
SELECT * FROM hiring;
SELECT * FROM hiring;
SELECT district FROM shop WHERE number_products < 3000 AND district IN (SELECT district FROM shop WHERE number_products > 10000);
SELECT district FROM shop WHERE number_products < 3000 INTERSECT SELECT district FROM shop WHERE number_products > 10000;
SELECT COUNT(DISTINCT location) FROM shop;
SELECT COUNT(DISTINCT location) AS num_locations FROM shop;
SELECT COUNT(*) FROM documents;
SELECT COUNT(*) AS num_documents FROM documents;
SELECT document_id, document_name, document_description FROM documents;
SELECT documents.document_id, documents.document_name, documents.document_description FROM documents;
SELECT documents.document_name, documents.template_id FROM documents WHERE documents.document_description LIKE '%w%';
SELECT documents.document_name, documents.template_id FROM documents WHERE documents.document_description LIKE '%w%';
SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV';
SELECT documents.document_id, documents.template_id, documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV';
SELECT COUNT(DISTINCT template_type_code) FROM templates;
SELECT COUNT(DISTINCT template_id) FROM documents;
SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT');
SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT');
SELECT templates.template_id, COUNT(documents.document_id) FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id;
SELECT template_id, COUNT(template_id) AS usage_count FROM documents GROUP BY template_id;
SELECT template_id, template_type_code FROM templates WHERE template_id = (   SELECT template_id   FROM documents   GROUP BY template_id   ORDER BY COUNT(template_id) DESC   LIMIT 1 );
SELECT template_id, template_type_code FROM templates WHERE template_id = (   SELECT template_id   FROM documents   GROUP BY template_id   ORDER BY COUNT(template_id) DESC   LIMIT 1 );
SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(DISTINCT document_id) > 1;
SELECT DISTINCT template_id FROM documents GROUP BY template_id HAVING COUNT(DISTINCT document_id) > 1;
SELECT templates.template_id     FROM templates     LEFT JOIN documents ON templates.template_id = documents.template_id     WHERE documents.document_id IS NULL;
SELECT templates.template_id     FROM templates     LEFT JOIN documents ON templates.template_id = documents.template_id     WHERE documents.document_id IS NULL;
SELECT COUNT(*)     FROM templates;
SELECT COUNT(*)     FROM templates;
SELECT templates.template_id, templates.version_number, templates.template_type_code     FROM templates;
SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates;
SELECT DISTINCT template_type_code FROM templates;
SELECT template_type_code FROM ref_template_types;
SELECT template_id FROM templates WHERE template_type_code = 'PP' OR template_type_code = 'PPT';
SELECT template_id FROM templates WHERE template_type_code IN ('PP', 'PPT');
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV';
SELECT version_number, template_type_code FROM templates WHERE version_number > 5;
SELECT version_number, template_type_code FROM templates WHERE version_number > 5;
SELECT template_type_code, COUNT(*) FROM templates GROUP BY template_type_code;
SELECT template_type_code, COUNT(*) AS num_templates    FROM templates    GROUP BY template_type_code;
SELECT template_type_code    FROM templates    GROUP BY template_type_code    ORDER BY COUNT(*) DESC    LIMIT 1;
SELECT template_type_code    FROM templates    GROUP BY template_type_code    HAVING COUNT(*) = (SELECT MAX(num_templates)                       FROM (SELECT COUNT(*) AS num_templates                             FROM templates                             GROUP BY template_type_code));
SELECT template_type_code, COUNT(*) AS num_templates    FROM templates    GROUP BY template_type_code    HAVING num_templates < 3;
SELECT template_type_code    FROM templates    GROUP BY template_type_code    HAVING COUNT(*) < 3;
SELECT MIN(version_number), template_type_code  FROM templates  GROUP BY template_type_code  ORDER BY MIN(version_number) ASC  LIMIT 1;
SELECT MIN(version_number), template_type_code  FROM templates  GROUP BY template_type_code  ORDER BY MIN(version_number) ASC  LIMIT 1;
SELECT templates.template_type_code  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = "Data base";
SELECT templates.template_type_code  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = "Data base";
SELECT documents.document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = "BK";
SELECT documents.document_name     FROM documents     JOIN templates ON documents.template_id = templates.template_id     WHERE templates.template_type_code = 'BK';
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)     FROM ref_template_types     JOIN templates ON ref_template_types.template_type_code = templates.template_type_code     JOIN documents ON templates.template_id = documents.template_id     GROUP BY ref_template_types.template_type_code;
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)     FROM ref_template_types     LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code     LEFT JOIN documents ON templates.template_id = documents.template_id     GROUP BY ref_template_types.template_type_code;
SELECT templates.template_type_code     FROM templates     JOIN documents ON templates.template_id = documents.template_id     GROUP BY templates.template_type_code     ORDER BY COUNT(documents.document_id) DESC     LIMIT 1;
SELECT templates.template_type_code     FROM templates     JOIN documents ON templates.template_id = documents.template_id     GROUP BY templates.template_type_code     ORDER BY COUNT(documents.document_id) DESC     LIMIT 1;
SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN      (SELECT template_type_code       FROM templates       JOIN documents ON templates.template_id = documents.template_id);
SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN      (SELECT template_type_code       FROM templates       JOIN documents ON templates.template_id = documents.template_id);
SELECT template_type_code, template_type_description  FROM ref_template_types;
SELECT template_type_code, template_type_description  FROM ref_template_types;
SELECT template_type_description  FROM ref_template_types  WHERE template_type_code = "AD";
SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD';
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book';
SELECT DISTINCT ref_template_types.template_type_description     FROM ref_template_types     INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code     INNER JOIN documents ON templates.template_id = documents.template_id;
SELECT DISTINCT ref_template_types.template_type_description     FROM ref_template_types     INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code     INNER JOIN documents ON templates.template_id = documents.template_id     INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id;
SELECT template_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation');
SELECT template_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation');
SELECT COUNT(*) FROM paragraphs;
SELECT COUNT(*) FROM paragraphs;
SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show');
SELECT COUNT(paragraph_id) FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show');
SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea %';
SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea %';
SELECT paragraph_id, paragraph_text FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Welcome to NY');
SELECT paragraph_id, paragraph_text FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Welcome to NY');
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews';
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews';
SELECT documents.document_id, COUNT(paragraphs.paragraph_id) AS num_paragraphs  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, COUNT(paragraphs.paragraph_id) AS num_paragraphs  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs  FROM documents  LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY documents.document_id;
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs    FROM documents    LEFT JOIN paragraphs ON documents.document_id = paragraphs.document_id    GROUP BY documents.document_id;
SELECT paragraphs.document_id    FROM paragraphs    GROUP BY paragraphs.document_id    HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id    FROM documents    JOIN paragraphs ON documents.document_id = paragraphs.document_id    GROUP BY documents.document_id    HAVING COUNT(paragraphs.paragraph_id) >= 2;
SELECT documents.document_id, documents.document_name    FROM documents    JOIN paragraphs ON documents.document_id = paragraphs.document_id    GROUP BY documents.document_id    ORDER BY COUNT(paragraphs.paragraph_id) DESC    LIMIT 1;
SELECT documents.document_id, documents.document_name    FROM documents    JOIN paragraphs ON documents.document_id = paragraphs.document_id    GROUP BY documents.document_id    HAVING COUNT(paragraphs.paragraph_id) = (        SELECT MAX(num_paragraphs)        FROM (            SELECT COUNT(paragraphs.paragraph_id) AS num_paragraphs            FROM paragraphs            GROUP BY paragraphs.document_id        )    );
SELECT document_id  FROM paragraphs  GROUP BY document_id  ORDER BY COUNT(*) ASC  LIMIT 1;
SELECT document_id  FROM paragraphs  GROUP BY document_id  ORDER BY COUNT(*) ASC  LIMIT 1;
SELECT document_id  FROM paragraphs  GROUP BY document_id  HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT document_id  FROM paragraphs  GROUP BY document_id  HAVING COUNT(*) BETWEEN 1 AND 2;
SELECT document_id  FROM paragraphs  WHERE paragraph_text IN ('Brazil', 'Ireland')  GROUP BY document_id  HAVING COUNT(DISTINCT paragraph_text) = 2;
SELECT documents.document_id     FROM documents     JOIN paragraphs ON documents.document_id = paragraphs.document_id     WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%';
SELECT COUNT(DISTINCT teacher_id) FROM teacher;
SELECT COUNT(*) FROM teacher;
SELECT name FROM teacher ORDER BY age ASC;
SELECT name FROM teacher ORDER BY age ASC;
SELECT age, hometown FROM teacher;
SELECT name, age, hometown FROM teacher;
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District';
SELECT name FROM teacher WHERE age IN (32, 33);
SELECT name FROM teacher WHERE age IN (32, 33);
SELECT hometown FROM teacher ORDER BY age LIMIT 1;
SELECT hometown FROM teacher WHERE age = (SELECT MIN(age) FROM teacher);
SELECT hometown, COUNT(*) FROM teacher GROUP BY hometown;
SELECT hometown, COUNT(*) FROM teacher GROUP BY hometown;
SELECT hometown, COUNT(*) as count FROM teacher GROUP BY hometown ORDER BY count DESC LIMIT 1;
SELECT hometown, COUNT(*) as count FROM teacher GROUP BY hometown ORDER BY count DESC;
SELECT DISTINCT t1.hometown FROM teacher t1 INNER JOIN teacher t2 ON t1.teacher_id < t2.teacher_id AND t1.hometown = t2.hometown;
SELECT hometown FROM teacher GROUP BY hometown HAVING COUNT(*) >= 2;
SELECT teacher.name, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     JOIN course ON course_arrange.course_id = course.course_id;
SELECT teacher.name, course.course     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     JOIN course ON course_arrange.course_id = course.course_id     ORDER BY teacher.name ASC;
SELECT teacher.name, course.course     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     JOIN course ON course_arrange.course_id = course.course_id     ORDER BY course.course ASC, teacher.name ASC;
SELECT teacher.name     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     JOIN course ON course_arrange.course_id = course.course_id     WHERE course.course = 'math';
SELECT teacher.name     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     JOIN course ON course_arrange.course_id = course.course_id     WHERE course.course = 'math';
SELECT teacher.name, COUNT(course_arrange.course_id)     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     GROUP BY teacher.name;
SELECT teacher.name, COUNT(course_arrange.course_id)     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     GROUP BY teacher.name;
SELECT teacher.name     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     GROUP BY teacher.name     HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name     FROM teacher     JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     GROUP BY teacher.name     HAVING COUNT(course_arrange.course_id) >= 2;
SELECT teacher.name     FROM teacher     LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id     WHERE course_arrange.course_id IS NULL;
SELECT teacher.name     FROM teacher     WHERE teacher.teacher_id NOT IN         (SELECT course_arrange.teacher_id          FROM course_arrange);
SELECT COUNT(*)     FROM visitor     WHERE visitor.age < 30;
SELECT visitor.name, visitor.level_of_membership     FROM visitor     WHERE visitor.level_of_membership > 4     ORDER BY visitor.level_of_membership DESC;
SELECT AVG(visitor.age)     FROM visitor     WHERE visitor.level_of_membership <= 4;
SELECT visitor.name, visitor.level_of_membership     FROM visitor     WHERE visitor.level_of_membership > 4     ORDER BY visitor.age DESC;
SELECT museum_id, name  FROM museum  WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum);
SELECT AVG(num_of_staff)  FROM museum  WHERE open_year < 2009;
SELECT open_year, num_of_staff  FROM museum  WHERE name = 'Plaza Museum';
SELECT name  FROM museum  WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2010);
SELECT visitor.id, visitor.name, visitor.age  FROM visitor  INNER JOIN visit ON visitor.id = visit.visitor_id  GROUP BY visitor.id  HAVING COUNT(DISTINCT visit.museum_id) > 1;
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.total_spent) DESC LIMIT 1;
SELECT museum.museum_id, museum.name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY museum.museum_id ORDER BY COUNT(visit.visitor_id) DESC LIMIT 1;
SELECT museum.name FROM museum LEFT JOIN visit ON museum.museum_id = visit.museum_id WHERE visit.museum_id IS NULL;
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visit.visitor_id ORDER BY SUM(visit.num_of_ticket) DESC LIMIT 1;
SELECT AVG(visit.num_of_ticket), MAX(visit.num_of_ticket) FROM visit;
SELECT SUM(total_spent)  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1;
SELECT visitor.name  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009  AND museum.open_year > 2011  GROUP BY visitor.id  HAVING COUNT(DISTINCT museum.museum_id) = 2;
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year > 2010  OR museum.open_year IS NULL;
SELECT COUNT(DISTINCT museum.museum_id)  FROM museum  WHERE museum.open_year > 2013  OR museum.open_year < 2008;
SELECT COUNT(DISTINCT player_id)  FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM matches;
SELECT COUNT(match_num) FROM matches;
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches;
SELECT AVG(loser_age + winner_age) AS avg_age FROM matches;
SELECT AVG(winner_rank) AS avg_winner_rank FROM matches;
SELECT AVG(winner_rank) AS avg_rank FROM matches;
SELECT MAX(loser_rank) AS highest_loser_rank FROM matches;
SELECT MIN(loser_rank) AS best_rank_of_losers FROM matches WHERE loser_rank IS NOT NULL;
SELECT COUNT(DISTINCT country_code) AS distinct_country_codes FROM players;
SELECT COUNT(DISTINCT country_code) AS distinct_countries_of_players FROM players;
SELECT COUNT(DISTINCT loser_name) AS distinct_names_of_losers FROM matches;
SELECT COUNT(DISTINCT loser_name) AS different_loser_names FROM matches;
SELECT tourney_name  FROM matches  GROUP BY tourney_id  HAVING COUNT(*) > 10;
SELECT tourney_name  FROM matches  GROUP BY tourney_id  HAVING COUNT(*) > 10;
SELECT DISTINCT winner_name  FROM matches  WHERE year = 2013 AND winner_name IN      (SELECT DISTINCT winner_name       FROM matches       WHERE year = 2016);
SELECT DISTINCT winner_name  FROM matches  WHERE year = 2013 AND winner_name IN      (SELECT DISTINCT winner_name       FROM matches       WHERE year = 2016);
SELECT COUNT(*)  FROM matches  WHERE year = 2013 OR year = 2016;
SELECT COUNT(*)  FROM matches  WHERE year = 2013 OR year = 2016;
SELECT players.country_code, players.first_name  FROM players  JOIN matches AS m1 ON players.player_id = m1.winner_id  JOIN matches AS m2 ON players.player_id = m2.winner_id  WHERE m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open';
SELECT players.first_name, players.country_code  FROM players  JOIN matches AS m1 ON players.player_id = m1.winner_id  JOIN matches AS m2 ON players.player_id = m2.winner_id  WHERE m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open'  GROUP BY players.player_id  HAVING COUNT(*) = 2;
SELECT first_name, country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, last_name FROM players ORDER BY birth_date;
SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, country_code FROM players WHERE player_id = (   SELECT player_id   FROM rankings   GROUP BY player_id   ORDER BY SUM(tours) DESC   LIMIT 1 );
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = (SELECT MAX(tours) FROM rankings);
SELECT matches.year, COUNT(matches.match_num) AS num_matches FROM matches GROUP BY matches.year ORDER BY num_matches DESC LIMIT 1;
SELECT matches.year, COUNT(matches.match_num) AS num_matches FROM matches GROUP BY matches.year HAVING num_matches = (SELECT MAX(num_matches) FROM (SELECT COUNT(match_num) AS num_matches FROM matches GROUP BY year));
SELECT players.first_name, players.last_name, matches.winner_rank_points FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_id HAVING COUNT(matches.match_num) = (SELECT MAX(num_wins) FROM (SELECT COUNT(match_num) AS num_wins FROM matches GROUP BY winner_id));
SELECT players.first_name, players.last_name, SUM(matches.winner_rank_points) AS total_rank_points FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_id ORDER BY total_rank_points DESC LIMIT 1;
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1;
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1;
SELECT loser_name, winner_name  FROM matches  WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT loser_name, winner_name  FROM matches  WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT players.first_name, AVG(rankings.ranking)  FROM players  JOIN rankings ON players.player_id = rankings.player_id  GROUP BY players.player_id;
SELECT players.first_name, AVG(rankings.ranking_points) AS avg_ranking    FROM players    JOIN rankings ON players.player_id = rankings.player_id    GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points    FROM players    JOIN rankings ON players.player_id = rankings.player_id    GROUP BY players.first_name;
SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points    FROM players    JOIN rankings ON players.player_id = rankings.player_id    GROUP BY players.first_name;
SELECT country_code, COUNT(DISTINCT player_id) AS num_players    FROM players    GROUP BY country_code;
SELECT country_code, COUNT(DISTINCT player_id) AS num_players    FROM players    GROUP BY country_code;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) = (   SELECT MAX(player_count)   FROM (     SELECT COUNT(*) AS player_count     FROM players     GROUP BY country_code   ) );
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;
SELECT GROUP_CONCAT(country_code) FROM (   SELECT country_code   FROM players   GROUP BY country_code   HAVING COUNT(*) > 50 );
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;
SELECT year, COUNT(*) AS total_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) AS total_matches_played FROM matches WHERE winner_name IS NOT NULL GROUP BY year;
SELECT winner_name, winner_rank FROM matches WHERE winner_name IS NOT NULL ORDER BY winner_age ASC LIMIT 3;
SELECT winner_name, winner_rank FROM matches WHERE winner_name IS NOT NULL ORDER BY winner_age ASC LIMIT 3;
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches);
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY players.player_id ORDER BY SUM(winner_rank_points) DESC LIMIT 1;
SELECT hand, COUNT(*) as count FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT name, tonnage FROM ship ORDER BY name DESC;
SELECT name, date, result FROM battle;
SELECT MAX(killed + injured) AS max_death_toll, MIN(killed + injured) AS min_death_toll FROM death;
SELECT AVG(death.injured)  FROM death;
SELECT death.note, death.killed, death.injured  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  WHERE ship.tonnage = 't';
SELECT battle.name, battle.result  FROM battle  WHERE battle.bulgarian_commander != 'Boril';
SELECT DISTINCT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  WHERE ship.ship_type = 'Brig';
SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  GROUP BY battle.id  HAVING SUM(death.killed) > 10;